#AREADATA
Name Limbo~
Builders Iacobos Transmitt Caraighan Tzajai Korodrath Saedacal Ztheir~
VNUMs 1 199
Credits [ None] Staff     Limbo~
Danger 0
Security 1
Areainfo 63
Herbs 0
Weather 2 2 2 1 0
Weave 4 0 0
Shades 5 5
Stone -1
End



#MOBILES
V4 1
bear rangercall black mob_1~
the black bear~
A black bear ambles along here.
~
This large bear is a mass of thick fur and bulky muscle.  Standing four
feet tall at the shoulder while on all fours, and well over six while
standing, the bear\@s large, rounded flanks and rump and barrel chest give it
a deceptive air of slow clumsiness.  Paws the size of dinner plates have
black, calloused pads and sharp, dirty-white claws several inches long which
curve to lethal, blunt points.  A thick neck swathed in muscle, fat, and fur
supports a large head.  Small, piggish eyes flank a boxy snout.  The bear
moves with surprising agility for a creature of its bulk, rich black pelt
rippling with its movements.  
~
bear~
water scholar~
AN F 0 N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
claw~
0 0 0 0
DEO 0
26 0 0 0 0 33 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ABCDEFHJKUV A medium unknown
V4 2
wolf rangercall mob_2 grey~
the grey wolf~
A grey wolf pads silently along.
~
This grey-backed wolf has small and compact features.  The sleek
features, from the narrow snout and small head to the long legs and think
body, give the wolf a sense of agility.  A lighter shade of grey fur covers
the lower half of the wolf\@s body, continuing to the cheeks and underside of
the tail.  Razor-sharp, pointed teeth, line the wolf\@s maw.  
~
wolf~
water scholar~
AN F Z N 0
0 0 0d0+0 0d0+0 0d0+0 pierce~
bite~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ACDEFJKQV A medium unknown
V4 3
asp thick snake mob_3 rangercall~
a thick asp~
A thick yellow-brown asp slithers along.
~
This thick asp is over four feet long, and several inches in diameter. 
Large, textured scales of a murky ochre cover a yellow-brown skin.  Dull
bands of darker brown run the length of the snake\@s body.  The serpent moves
with amazing speed and sinuous strength.  Hooded black eyes watch the world
impassively, the triangular head alert and watchful.  Two tiny indentations
can be seen above the snake\@s mouth, below the nostrils.  A pale tongue
flickers out periodically, tasting the air.  
~
snake~
water scholar~
ADGN F DFJPVZ N 0
0 0 0d0+0 0d10+100 1d0+0 pierce~
bite~
9 9 9 9
FH A
26 0 0 0 0 0 0 0 0 -20 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGXYc ADEFKLQVX 0 small flesh
V4 4
hawk rangercall golden mob_4~
a golden hawk~
An agile, golden hawk swoops through the air.
~
Large, golden-feathered wings propel the hawk through the air.  Its sharp
black-yellow beak is curled downwards into a deadly hook and its strong
claws are tucked in underneath its body.  The wingspan of the hawk spans
over five feet, casting an ominous shadow beneath whatever it glides above. 
~
song bird~
water scholar~
AN F JT N 0
0 31 1d1+1 0d0+0 1d1+1 slash~
talons~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMVW ACDEFHKP A medium unknown
V4 5
slug features~
a features slug~
A features slug is here. It looks slimy and gross. Yuck, slug!
~
~
human~
water scholar~
ADL 0 0 N 0
0 0 1d1+1 0d0+0 0d0+0 none~
{bBLUE{x~
0 0 0 0
FHK CD
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
mproomcmd mptrigger all
~
>verb_prog p fslug~
if ispc($n)
  if isbitset($n) == 5
    tell $n Feature Slug reminder: On
    mpbitset $n 5 0
    break
  else
    tell $n Feature Slug reminder: Off
    mpbitset $n 5 1
    break
  endif
endif
~
>trigger_prog 100~
if ispc($n)
  if isbitset($n) == 5
  else
    if remembers($n)
    else
      tell $n Remember, this room is for approved suggestions that will be coded.
      tell $n If you have a suggestion and want approval, put it in the Suggestion Box.
      mpremember $n
      tell $n To toggle this reminder, simply type \@fslug\@.
    endif
  endif
endif
~
|
V4 6
clone whore santa\@s bug~
a clone of santa\@s whore~
A clone of Santa\@s Whore stands here, directing traffic towards the upper levels.
~
A ripe and shapely girl stands here, about 19 or 20 years old.  She wears
nothing but a revealing red and white teddy which barely keeps her decent,
and her long black hair falls over her giving teasing glimpses of flesh. 
Her full red lips in a sexy pout, she jingles quietly when she moves from
the small silver bells dangling from her red garters.  She looks just like
Santa\@s whore.  
~
human~
water scholar~
A 0 L N 0
90 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 CD
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>death_prog 100~
mpecho As the bug is destroyed, it is replaced with another.
mpmload 6
~
|
V4 7
anole features lizard~
a green features anole~
A green feature anole is here, vigilantly watching for spiders.
~
Mmm... lizard
~
human~
water scholar~
ADL 0 0 N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 CD
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 8
bug limited edition~
a limited edition bug, signed by Jolinn~
A limited edition bug, signed by Jolinn is here.
~
This particularly sinister bug is tattooed with particularly nasty core
dumps, and is signed with Jolinn\@s signature on its back.  
~
human~
water scholar~
ADL 0 0 N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 CD
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>death_prog 100~
mpecho As the bug is slain, another limited edition bug signed by Jolinn takes its place.
mpmload 8
~
|
V4 9
argiope spider yes area-update golden~
a golden area-update argiope~
A beautiful golden area-update Argiope is here, spinning its web.
~
~
human~
water scholar~
A 0 0 N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 ACDb
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>verb_prog p argiope~
if ispc($n)
  if isbitset($n) == 8
    tell $n Argiope reminder: On
    mpbitset $n 8 0
    break
  else
    tell $n Argiope reminder: Off
    mpbitset $n 8 1
    break
  endif
endif
~
>trigger_prog 100~
if ispc($n)
  if isbitset($n) == 8
  else
    if remembers($n)
    else
      tell $n Remember to put the file name, not a description of the area.
      tell $n Right: yith.are
      tell $n Wrong: The Shuddeni Temple
      mpremember $n
      tell $n To toggle this reminder, simply type \@argiope\@.
    endif
  endif
endif
~
>rand_prog 100~
mproomcmd mptrigger all
~
|
V4 10
rabbit brown~
a rabbit~
A brown rabbit hops along here.
~
A cotton-tailed rabbit hops along, powerful hind legs propelling it along.  
~
rabbit~
water scholar~
AN 0 0 N 0
3 3 5d5+10 1d1+99 1d1+2 pierce~
scratch~
6 6 6 6
FH 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ACDEFHJK A medium unknown
V4 11
owl ~
the owl~
A grey-feathered owl flutters through the air.
~
Wide eyes dominate the form of this grey-feathered owl, which flutters
along through the air.  
~
water fowl~
water scholar~
AN 0 Tb N 0
3 3 5d5+10 1d1+100 1d1+3 slash~
claw~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMVW ABCDEFGHIJKP A medium unknown
V4 12
fox brown~
the fox~
A brown fox scurries around.
~
This quick brown fox scurries in every direction, darting in and out of
whatever cover it can find.  
~
fox~
water scholar~
AN 0 Z N 0
3 3 5d5+10 1d1+99 1d1+3 pierce~
scratch~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ABCDEFGHIJKQV A medium unknown
V4 13
maglat suggestion~
a suggestion maglat~
A suggestion maglat is here, learning to live with (as in, not eat) the features anole.
~
~
human~
water scholar~
ADL 0 0 N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 CD
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
V4 14
alligator mob_14 rangercall~
an alligator~
An alligator trundles along here.
~
The alligator has a large, slightly rounded body, with thick limbs, a
broad head, and a very powerful-looking tail which accounts for half its
length.  The yellowing upper teeth in its broad snout look razor-sharp.  
~
lizard~
water scholar~
AN F 0 N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
crushing jaws~
0 0 0 0
HMV 0
26 0 0 0 0 0 0 33 0 -33 0 0 0 0 0 0 0 0 66 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGXc ABCDEFHJKQUV A medium unknown
V4 15
glitterbot gorgo~
the glitterbot~
Gorgo the glitterbot dances wildly before you.
~
HOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
~
human~
water scholar~
AB 0 DFJLPZ N 0
60 0 5d5+5 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>greet_prog 100~
if ispc($n)
mpechoat $n You notice something glittering near your feet.
mpoload 38
mpsetskilled
stash philter
mpvalueset 0 3
mpgoto 35
endif
~
>rand_prog 1~
if mobvalue(0) == 0
mpvaluerand 1 1 600
if mobvalue(1) == 1
mpvalueset 0 1
endif
endif
if mobvalue(0) == 1
mpvaluerand 2 1 30000
mpgoto $2
endif
~
|
V4 16
guard guardcall~
the guard~
A guard patrols the area, on the hunt for criminals.
~
This hearty guardsman bears the markings of the personal forces of the
Guardsmen of Avendar.  Glancing back and forth around the room, he continues
his hunt for criminals.  
~
human~
water scholar~
AT 0 DFJZ N 0
40 20 16d170+976 0d0+0 5d10+18 slash~
slash~
-15 -15 -15 -2
CFHKN 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 1~
mpecho No longer needed, the guard returns to other duties.
mppurge self
~
|
V4 20
zombie undead cursezombie~
a zombie of the corpse of %s~
An animate corpse of %s stumbles along here.
~
This hideous shambling beast is formed of rotting flesh and grotesquely
exposed bone.  The average person would gag at the sight of it, and it gives
off a noxious odor.  
~
doll~
water scholar~
AO 0 0 E 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 ILMNPQR
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AEHJMVc ABCDEFGHIJK A medium unknown
>rand_prog 20~
mpecho The zombie shuffles off, sloughing bits of flesh here and there.
mpwander
~
>rand_prog 50~
mprangekill $r
~
|
V4 21
water elemental mass living~
the water elemental~
A mass of living water flows about.
~
A vaguely humanoid shape composed of water, this elemental flows
gracefully as it moves about.  Called forth by the magics of the seas and
rivers, the elemental has a certain gentle grace to its fluid form.  
~
elemental~
water scholar~
AX F DFSTZ G 0
0 0 0d0+0 0d0+0 0d0+0 drowning~
drowning~
0 0 0 0
0 BKLRb
26 0 0 0 0 0 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
DHLM ABCGHIJK K medium unknown
>rand_prog 100~
if sector($i) == underwater
  if rand(6)
    mpget char $i hp 0
    mpget char $i curhp 1
    mpmath 2 $0 - $1
    if value(2) > 0
      mpecho Eddies of water flow into the elemental, restoring some of its strength!
      mpvaluerand 0 10 30
      if value(2) < $0
        mpgrant $i $2 0 0
      else
        mpgrant $i $0 0 0
      endif
    endif
  endif
  if rand(1)
    mpvaluerand 0 0 15
    if value(0) == 0
      emote glides freely through the water, clearly at ease here.
    endif
    if value(0) == 1
      emote seems to drink in the surrounding water, as if to refresh itself.
    endif
    if value(0) == 2
      emote burbles softly in the water, causing several small bubbles to form.
    endif
  endif
else
  if rand(1)
    mpvaluerand 0 0 15
    if value(0) == 0
      emote wobbles unsteadily, sending several droplets of water flying.
    endif
    if value(0) == 1
      mpecho The surface water of the elemental ripples gently, refracting any light present.
    endif
    if value(0) == 2
      emote flows smoothly about, leaving behind a damp trail as it moves.
    endif
  endif
endif
~
>fight_prog 100~
if sector($i) == underwater
  mpset char self damtype 5
  mpstring char self damverb chill
else
  mpset char self damtype 14
  mpstring char self damverb drowning
endif
if rand(3)
  emote glimmers, and wave of blue-white light washes out from it.
  mpcast 334 51
endif
~
|
V4 22
wraith black shadow swirling~
a shadowy wraith~
A swirling mass of shadow marks the figure of a wraith.
~
A barely substantial outline of darkness is the only visible indication
of this wraith\@s existence.  Vaguely humanoid, wispy tendrils of shadow
cloak the thing, swirling about it as it drifts along.  Radiating a numbing
chill, twin points of red light mark the wraith\@s eyes, which malevolently
follow the course of his surroundings.  
~
human~
water scholar~
AL 0 DFO E 0
0 0 0d0+0 0d0+0 0d0+0 negative~
life drain~
0 0 0 0
AFHK M
26 0 0 0 33 0 0 0 0 0 0 0 0 0 -33 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 10~
if isfocused()
if isghost($f)
mppurge self
else
mpgoto $f
mpecho The air tenses, and a chill cloud of darkness materializes in the dark form of a wraith.
emote points at $F.
mpvaluerand 0 1 4
if mobvalue(0)==1
emote gives a menacing hiss.
else
if mobvalue(0)==2
emote snarls something in low, gutteral tones.
else
if mobvalue(0)==3
emote shrieks with a hollow, echoing cry.
else
if mobvalue(0)==4
emote chuckles hoarsely, charnel air burbling from its depths.
endif
endif
endif
endif
mpkill $f
endif
endif
~
>fight_prog 20~
mpvaluerand 1 1 3
if mobvalue(1)==1
mpcast 39 51
else
if mobvalue(1)==2
mpcast 52 99
else
if mobvalue(1)==3
mpcast 58 99
endif
endif
endif
~
>fight_prog 35~
emote snarls angrily.
mpecho With a gust of cold, dry air, the wraith fades from sight.
mpgoto 83
~
|
V4 27
ashurbot void~
the Ashurbot~
The Ashurbot is here, waiting to bitch slap people who say his name.
~
~
human~
water scholar~
ADL 0 DFJL N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>verb_prog p open south~
if inroom($i) == 40
mpechoat $n The demons block your path.
mpforce chitinous say None shall pass except by the decree of the Grand Vizier.
mpforce 2.chitinous say None shall pass except by the decree of the Grand Vizier.
else
mpinterpret $n $x
endif
~
>speech_prog p Ashur~
mpechoat $n Unwittingly, you call on the Great Lord from within the void.
mpechoat $n An ominous darkness swirls about you, streaming into your body!
mpechoaround $n As $N says the name of the Great Dragon of the Void, an ominous darkness descends on $m!
mpechoaround $n The darkness swirls around $N, streaming into $s body!
mpechoat $n Darkness closes in all around you.
mpaddaffect $n 8 70 -1 0 0 1
~
|
V4 28
smoke cloud~
smoke~
The smoke cloud is here, puffing away on a pack of Marlboros.
~
~
human~
water scholar~
ABL 0 L N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 29
delayed blast~
a delayed blast~
A delayed blast fireball is here, about to kick everyone\@s ass.
~
~
human~
water scholar~
ABLR 0 DFLTZ N 0
0 0 1d1000+10000 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
mpvaluedown 0 1
if mobvalue(0) < 1
if value(3) == 0
mpget mob self level 1
mpcast 63 $1
else
mpcast 63 $3
endif
mppurge self
endif
~
|
V4 30
efreeti air efreet chaotic whirl living mob_30~
an efreeti~
A chaotic whirl of living air, an efreeti flies through the area.
~
A whirl of wind, dust, smoky vapours, and crackling sparks, the efreeti
floats effortlessly through the area.  The outlines of its form shift
constantly, though two patterns appear frequently.  The first is a
funnel-like column, looping and twisting and then straightening again like
an ever-unravelling knot.  The second is a vaguely humanoid shape in which
several brilliant sparks flare in and out of existence, giving an appearance
of blinking eyes.  
~
generic~
water scholar~
AL 0 DEFJTUZ N 0
0 0 0d0+0 1d50+2000 0d0+0 bash~
wind blast~
0 0 0 0
FH 0
26 0 0 0 33 0 0 0 0 0 33 0 0 0 0 0 0 0 0 0 0 33 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
CHKL 0 K medium air
>trigger_prog 33~
if inarea($n)
  mpfindpath $n 40 true
endif
~
>verb_prog do_efreet_setup~
speak arcane
mpaddskill $i 89 100    \\\\lightning bolt
mpaddskill $i 350 100   \\\\delusions
mpaddskill $i 602 100   \\\\blink
mpaddskill $i 345 100   \\\\gust
mpaddskill $i 344 100   \\\\suction
if rand(75)  
  \\\\ 75% STANDARD
  mpvalueset 0 1
  mpvalueset 1 96
else
  \\\\ 25 % MURDEROUS
  mpvalueset 0 2
  mpvalueset 1 48
  mpstring mob self short a murderous efreeti
endif
~
>death_prog 100~
drop all
mpecho In a sudden flash of lightening, $I disappears.
mpasound A sudden clap of thunder resounds from nearby.
mpgoto 36
~
>fight_prog 35~
mpvaluerand 2 100
if value(2) <= 80
  cast \@lightning bolt\@
else
  if snaffected($n) == 350
    cast \@lightning bolt\@
  else
    cast \@delusions\@
  endif
endif
~
>rand_prog 100~
\\\\ slot values:
\\\\ 0 = is standard or murderous
\\\\ 1 = duration in ticks
\\\\ 2 = temporary operations
if value(0) == 0
  do_efreet_setup
  break
else
  if isanypcarea()
    if value(0) == 1
      \\\\ STANDARD EFREETI
      if rand(50)
        mpwander
      else
        mpvaluerand 2 0 5
        if value(2) == 0
          mpvalueset direction north
        endif
        if value(2) == 1
          mpvalueset direction south
        endif
        if value(2) == 2
          mpvalueset direction east
        endif
        if value(2) == 3
          mpvalueset direction west
        endif
        if value(2) == 4
          mpvalueset direction up
        endif
        if value(2) == 5
          mpvalueset direction down
        endif
        if rand(50)
          if isanypchere()
            if rand(50)
              mprangekill $r
            else
              if isopen($r) == %direction
                 mpecho Air billowing, $I whirls %direction for a moment.
                 cast gust $r %direction
              endif  
            endif 
          else
            mpwander          
          endif
        else
          if isopen($i) == %direction
            mpecho Air billowing, $I whirls %direction for a moment.
            cast suction %direction
          endif       
        endif
      endif
    endif
    if value(0) == 2
      \\\\ MURDEROUS EFREETI
      if isanypchere()
        mprangekill $r
      else
        if haspath($i)
          mppathstep
        else
          mpmasstrigger
        endif
      endif
    endif
  else
    \\\\ no npc in the area
    mpwander
  endif
endif
~
>tick_prog 100~
mpvaluedown 1 1
if value(1) == 0
  drop all
  mpecho In a sudden flash of lightening, $I disappears.
  mpasound A sudden clap of thunder resounds from nearby.
  mpgoto 36
  mppurge self
endif
~
>verb_prog msg~
if port() == 9889
  tell dovolente $X
endif
mpverbstop
~
>verb_prog msg~
if port() == 9889
  tell dovolente $X
endif
mpverbstop
~
|
V4 31
no name~
a burly sentry~
A burly sentry blocks the way.
~
This burly sentry blocks the way.
~
human~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>verb_prog down~
if valname($n) == $f
mpechoat $n The burly sentry blocks your progress.
mpechoaround $n A burly sentry blocks $N\@s progress.
else
mpinterpret $n $x
endif
~
>verb_prog up~
if valname($n) == $f
mpechoat $n The burly sentry blocks your progress.
mpechoaround $n A burly sentry blocks $N\@s progress.
else
mpinterpret $n $x
endif
~
>verb_prog south~
if valname($n) == $f
mpechoat $n The burly sentry blocks your progress.
mpechoaround $n A burly sentry blocks $N\@s progress.
else
mpinterpret $n $x
endif
~
>verb_prog west~
if valname($n) == $f
mpechoat $n The burly sentry blocks your progress.
mpechoaround $n A burly sentry blocks $N\@s progress.
else
mpinterpret $n $x
endif
~
>verb_prog east~
if valname($n) == $f
mpechoat $n The burly sentry blocks your progress.
mpechoaround $n A burly sentry blocks $N\@s progress.
else
mpinterpret $n $x
endif
~
>verb_prog north~
if valname($n) == $f
mpechoat $n The burly sentry blocks your progress.
mpechoaround $n A burly sentry blocks $N\@s progress.
else
mpinterpret $n $x
endif
~
|
V4 32
Chagrob Vizier Grand Logor~
Chagrob, Grand Vizier of Logor~
An ominous darkness marks the presence of Chagrob, Grand Vizier of Logor.
~
Chagrob, Grand Vizier of Logor, emanates a horrific presence as he looks
down from his dark throne.  He lacks a visible body, manifesting himself as
a cloud of tangible darkness.  Pulsing with strange, alien patterns, the
only feature which gives focus to the darkness are his piercing red eyes,
which fasten themselves on the target of his attention.  
~
demon~
water scholar~
ADLTX 0 DFJZ E 0
70 28 1d1+24000 0d0+0 10d10+150 defilement~
defilement~
-22 -22 -22 -9
FH ABb
26 0 0 95 95 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 -1
ACHMV ABCDEFGHIJKP A medium unknown
V4 33
Earth Elemental mob_33~
the earth elemental~
A tall mound of living earth walks upright here.
~
A tall mound of living earth forms itself into the roughly humanoid shape
of an earth elemental here.  Ponderously moving along, this great beast
seems unconcerned with the particulars of its environs, and more focused on
moving where its master directs it.  
~
elemental~
water scholar~
ABX 0 DFSTZ N 0
0 0 0d0+0 0d0+0 0d0+0 bash~
pound~
0 0 0 0
0 ABKLRb
26 0 0 -10 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
DHLM ABCGHIJK K medium unknown
>verb_prog p south~
if ismaster($n)
  if inroom($n) == 4880
    if objhere(4800)
      mpechoat $n At your behest, $I lumbers forward in a charge, smashing through the pile of crystals!
      mpechoaround $n $I lumbers forward in a charge, smashing through the pile of crystals!
      mppurge obj_4800
      mpflag exit south - fake
    endif
  endif
endif
mpnextinterp
~
|
V4 34
Gustbot~
guster~
Gustbot whores around here
~
~
human~
water scholar~
A 0 LP N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 15~
~
|
V4 35
Zilba Gralci Air Scholar Extraordinaire~
Zilba Gralci~
Zilba Gralci floats nonchalantly through the air.
~
Clad in Earandam\@s finest, Zilba Gralci appears to be a bit of a social
gadfly.  Despite the frippery of his garments, Zilba\@s reputation as a
scholar precedes his fooleries.  He floats about the room on wings of air,
his magic an extension of his eclectic personality.  
~
human~
water scholar~
AJKTb 0 DFJTZ N 0
60 28 20d220+7000 0d0+0 5d12+30 pierce~
stab~
-22 -22 -22 -3
FHK ABJb
26 0 0 5 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 100 -1
AHMV ABCDEFGHIJK A medium unknown
>greet_prog 100~
if mobvalue(0) == 1
else
  if class($n) == 4
    mpvalueset 0 1
    mpecho Zilba shrugs, looking vaguely interested.
  endif
  if sex($n) == 2
    mpecho Zilba shakes his head in dismay.
    say Always the floating disc in the end...
    mpcast 68 99
  endif
endif
~
>rand_prog 6~
if mobvalue(0) == 1
  mpvalueset 0 0
  mpecho Zilba yawns and scratches his nose.  
else
  mpecho Zilba shrugs casually, now bored with his surroundings.
  mpcast 137 60
  mpecho Zilba forms out of insubstantial vapor before your eyes!
endif
~
>fight_prog 20~
mpecho A bored look crosses Zilba\@s face, and he snaps his fingers.
mpcast 137 60
~
>load_prog 100~
mpgoto 3499
mpcast 137 60
 
~
|
V4 36
no name~
the freezing cold~
(no long description)
~
~
human~
water scholar~
AR 0 DFL N 0
0 0 100d100+100 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 37
no name~
the sweltering heat~
(no long description)
~
~
human~
water scholar~
AR 0 DFL N 0
0 0 100d100+100 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 38
hail~
the pounding hail~
(no long description)
~
~
human~
water scholar~
AR 0 DFL N 0
0 0 100d100+1000 0d0+0 0d0+0 cold~
freezing bite~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 39
lightning~
a bolt of lightning~
(no long description)
~
~
human~
water scholar~
AR 0 DFL N 0
0 0 100d100+100 0d0+0 0d0+0 lightning~
shocking bite~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 40
Cloudkill ckillbot~
cloudkill~
Cloudkill
~
~
human~
water scholar~
ABR 0 DFL N 0
0 0 1d10+100 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>greet_prog 100~
if isimmort($n)
or isghost($n)
  break
endif
mpechoat $n You choke as you breathe in the noxious fumes!
mpechoaround $n $N chokes and gags, breathing in the noxious fumes!
mpaddaffect $n 343 41 8 1 -2 4096
~
>rand_prog 10~
if name($r)/cloudkill
else
  if snaffected($r) == 343
  else
    if isimmort($r)
    or isghost($r)
      break
    else
      mpechoat $r You choke as you breathe in the noxious fumes of the stinking cloud!
      mpechoaround $r $R chokes and gags, breathing in the noxious fumes of the stinking cloud!
      mpaddaffect $r 343 41 8 1 -2 4096
    endif
  endif
endif
~
>load_prog 100~
mpseewizi
~
>rand_prog 5~
mpecho The stinking cloud dissipates, leaving behind a faint odor in its wake.
mpgoto 15082
~
|
V4 41
chitinous black demon~
a chitinous black demon~
A tall, chitinous demon stands guard here.
~
Chitinous armor plates this black-fleshed demon, who reeks of filth and
death.  Taller, and, to all appearances stronger than any alath, the demon
also has leathery black wings, which it keeps folded at its back.  Its
appendanges terminate in crushing, pincer-like claws, which drip with a pale
yellow ichor.  
~
demon~
water scholar~
ADL 0 DFJTZ E 0
60 60 1d1+10000 0d0+0 5d13+27 slash~
claw~
-22 -22 -22 -9
CFK ABb
26 0 0 90 90 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
V4 42
seraph avenging angel vengeaful ~
the seraph~
(Golden Aura) A massive seraph flies through the air here, intent on vengeance.
~
A golden seraph flies past in the pursuit of vengeance.
~
celestial~
water scholar~
AETX LMN JZ G 0
0 0 0d0+0 0d0+0 0d0+0 holy~
divine power~
0 0 0 0
CFHKN BN
26 0 0 0 0 0 0 0 0 0 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMV ABCDEFGHIJKP A large unknown
V4 43
astral %s~
an astral projection of %s~
An astral projection of %s drifts through here.
~
The strange astral figure is composed of mostly translucent material,
almost like a visual echo.  Wisps of ghostly material touch on various
points, and a strange calm is over the figure.  
~
spirit~
water scholar~
A 0 DFJTUZ N 0
0 -500 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 DKLRb
26 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ADHLMV ABCDEFGHIJK AK medium unknown
V4 44
Bahhaoth Tide flood nauseating~
the Tide of Bahhaoth~
A nauseating flood of grasping, wave-like tendrils surges through the area.
~
A great confluence of shadowy miasma fills the area, as a sickening tide
of darkness risen from the very ocean of night.  The deluge seeths with
grasping currents, which gather in places to form screaming vortices, and
upon the surface wave-like tendrils heave and crash and claw.  Within the
darkness, ethereal forms shift and sway, and wherever they move the greatest
violence of the flood follows - surging always toward the strongest sources
of life.  
~
generic~
water scholar~
ADLT B DFJTUVZbc E 0
0 0 100d100+100 0d0+0 0d0+0 defilement~
defilement~
0 0 0 0
AFH ABLQ
26 0 0 0 30 0 0 0 0 0 0 0 0 50 -15 0 0 0 0 -20 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV 0 A large unknown
V4 45
pact chagrob\@s stonebot~
Chagrob\@s pact~
Chagrob\@s pact takes Stones from the Shunned.
~
~
human~
water scholar~
ADLX 0 DFJLPZ N 0
60 0 10000d1+1 10000d1+1 0d0+0 none~
hit~
0 0 0 0
0 ABCDb
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
if objhere(12000)
else
mpgoto 12202
if objhere(12000)
take faceted
mpgoto 41
drop stone
endif
endif
~
|
V4 46
no name~
(no short description)~
(no long description)
~
~
human~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
V4 50
raven familiar coal-black coal black mob_50~
a raven~
A raven with coal-black feathers flutters about.
~
Slightly larger than a typical raven, this bird sports sleek, dusky
feathers on large, extended wings, which glint with an almost metallic sheen
as it flies about the room.  Red eyes peer out from above a narrow, sharp
beak, their crimson hue running dark, almost to black.  Thin legs extend out
below the raven\@s body, tipped in curving claws.  The tail feathers fan out
as it flies, helping to keep the bird aloft.  
~
song bird~
water scholar~
AL F DEJSTZf E 0
0 20 1d1+299 40d10+100 4d7+15 pierce~
peck~
-15 -15 -15 -3
FH B
26 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMW ACDEFHKP AK small unknown
>sub_prog do_check_rumor_spread~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still spreading
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Set the cooldown
mpsetdata settings
mpnextdata 6
mpvalueset 6 $d
// Send the echo about complete, and spread the rumor
mpstring char self s9 echo_on_spread_rumor_end
mpcallsub do_echo $f
mploadstring char self 4 rumorToSpread
mpaddrumor \#$F\# %rumorToSpread
~
>data_prog echo_on_food_good~
esay \@exclaims\@ Oh, yes! My favorite!
emote picks at the morsel with $l beak a bit before consuming it.
~
>data_prog echo_on_food_bad~
esay \@releases the tidbit with a shriek\@ Ack! Did you just give me feces?!
esay \@rolls $l eyes and carelessly drops the morsel\@ Oh...yes...my favorite.
esay \@makes a face, muttering\@ Nevermore.
~
>data_prog echo_on_random~
emote swoops about the room.
pmote lands on $N\@s shoulder, hops to $s head, and then takes flight again.
emote caws loudly almost as if laughing.
~
>data_prog echo_on_bored~
esay \@rolls $l eyes\@ Should I sing? Maybe I\@ll sing for a while.
esay \@smirks\@ I this really all you do?
yawn
~
>data_prog echo_on_cancel~
esay \@rolls $l eyes, saying\@ Oh, you\@ve got something better for me to do?
esay \@peers at $N\@ And I thought -I- was easily distracted.
~
>data_prog echo_on_spread_rumor_end~
say That went well. You should have heard the things they were saying about -you-.
esay cackles They\@ll never lay eggs in this town again!
~
>data_prog echo_on_spread_rumor_start~
esay shrugs I could have come up with something better, but alright.
~
>data_prog echo_on_spread_rumor_waiting~
esay \@bobs $l head up and down\@ Oh yes, what slander shall we pass along?
~
>data_prog echo_on_spread_rumor_refused~
esay \@shakes $l head\@ The patrons of that last tavern were a little too interested in my \#drumsticks\#, if you know what I mean.
esay \@glares at $N for a moment\@ Have you ever had people look at you like you\@re a talking animal? Hm?!
~
>data_prog echo_on_rumors_unsupported~
esay \@looks down $s beak at $N\@ Gossip? Why would I, or you for that matter, care about such things?
~
>data_prog echo_on_rumor_listen_end~
emote dramatically clears $l throat.
say Well the buzz from the bees and the whispers on the winds say this:
~
>data_prog echo_on_rumor_listen_start~
emote clucks $l tongue and flies off.
esay \@asks as $l flies off\@ You mean there\@s something you -don\@t- know?
~
>data_prog echo_on_scouting_failure~
tell $s This is ridiculous, I\@m not staying here any more.
tell $s They aren\@t coming, so I\@m returning so you can send me on another futile task.
~
>data_prog echo_on_scouting_success~
tell $s I\@ve found them. They are smaller than I thought they\@d be...wait, maybe I\@m just flying too high.
tell $s Target confirmed. I have them lined up for a plummeting projectile.
~
>data_prog echo_scouting_start~
esay \@affirms\@ These eyes won\@t miss a thing...And I\@ll try to find THAT person too.
pmote issues a shrill caw and flies off.
~
>data_prog echo_no_pc_to_scout~
esay \@asks\@ Is that some kind of person? Maybe you bit your tongue while speaking?
esay shrugs Who? I can\@t look for them if I don\@t know who I\@m looking for.
~
>data_prog echo_on_safeguard_failure~
pmote tsks as $l shrugs once.
esay \@asks as $j preens $l feathers\@ Oh, you didn\@t want me to bring you anything, did you?
~
>data_prog echo_on_safeguard_success~
esay notes This obviously didn\@t help much last time, but here you go.
~
>data_prog echo_safeguard_object_ready~
esay \@shrugs\@ An odd thing to be sentimental over, but alright.
pmote offers $N a knowing nod.
~
>data_prog echo_no_safeguard_object~
esay \@squints at $N\@ Sometimes when you talk I see your beak moving, but I forget to listen to what you said.
esay \@nods confidently\@ Sure, that\@s the...uh...one with the...the...what was it?
esay \@peers at $N with one eye, saying\@ There must be a better way to describe it.
~
>data_prog echo_on_deposit_success~
esay smirks Quite the collection of nesting materials we\@re acquiring.
esay reports Shinies delivered!
~
>data_prog echo_on_deposit_failure~
esay \@says with frustration\@ Maybe you can get there, but I sure can\@t.
~
>data_prog echo_nothing_to_deposit~
esay \@seems to chuckle as $j says\@ I can certainly deposit -something- there, but I doubt you\@d want it later.
pmote looks down at $l empty digits and then peers intently at $N.
esay asks Would you like me to steal it from you first, or...?
~
>data_prog echo_on_fetch_failure~
esay \@flies over to $N, saying\@ It wasn\@t there, or if it was I didn\@t care.
pmote circles once around $N, and offers a single shake of $l head.
~
>data_prog echo_on_fetch_success~
esay \@jests\@ I only dropped it once.
pmote issues a shrill caw as $l returns to $N.
~
>data_prog echo_on_walk_begun~
esay \@caws\@ If I must...I mean, as you wish.
pmote offers $N a silent nod and flies off.
~
>data_prog echo_on_location_unpathable~
esay \@flies around in a circle, then says\@ I can\@t move through walls or travel through rifts, you know.
~
>data_prog echo_on_location_missing~
esay \@tilts $l head to peer at $N with one eye, saying\@ It would help if I knew where to go.
~
>data_prog echo_on_location_remembered~
say So this is where we stash the shinies?
~
>data_prog echo_on_unrecognized_command~
pmote cocks its head at an angle, looking at $N.
~
>data_prog echo_on_disobedience~
pmote cocks $l head and gives $N an amused look.
esay \@quips\@ Not feeling like it right now. Maybe tomorrow.
~
>data_prog echo_on_flee~
esay \@caws as it attempts to flap away from the fight\@ The fatebones lied again.
~
>data_prog echo_on_become_object~
pmote perches upon $N\@s shoulder, folds $l wings, and lowers $l head.
~
>sub_prog do_init_special~
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring char self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget char self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
speak arcane
$d
~
>sub_prog do_fight_special~
// Do nothing most of the time
if not rand(3)
  break
endif
// Gouge attack
mpaddskill self 236 100
mpechoat $n $I dives at you, claws outstretched!
mpechoaround $n $I dives at $N, claws outstretched!
gouge $n
mpremoveskill self 236
~
>data_prog settings~
147
1213
10
90
20
10
800
120
2
~
>speech_prog p ~
// Validate master and state
if not name($n) == $f
or value(2) == 0
  break
endif
// Check for spread rumor message
if value(2) == 9
  mpstring char self s9 $x
  mpcallsub do_spread_rumor_stated
  break
endif
// Validate familiar name in statement
if not compx() == $I
  break
endif
mpvalueset 7 0
// Handle commands with no obedience check
// Check for cancelling task
if compx() == nevermind
or compx() == belay
or compx() == retract
or compx() == cancel
or compx() == stop
  if value(2) > 1
    // Action cancel
    mpvalueset 2 1
    mpstring char self s9 echo_on_cancel
    mpcallsub do_echo $f
    break
  endif
endif
// Check for fleeing
if compx() == flee
or compx() == retreat
or compx() == run
  if isfighting($i)
    mpcallsub do_flee
    break
  endif
endif
// Check for becoming an object
if compx() == come
or compx() == approach
or compx() == nearer
or compx() == closer
  mpcallsub do_become_object
  break
endif
// Calculate obedience
mpcallsub do_calculate_obedience
if value(9) != 1
  // Disobeying; send the echo and bail out
  mpstring char self s9 echo_on_disobedience
  mpcallsub do_echo $f
  break
endif
// Familiar will obey command; dispatch appropriately
// Check for remembering a location
if compx() == remember
or compx() == memorize
  mpcallsub do_remember
  break
endif
// Check for fetching an object from remembered location
if compx() == fetch
or compx() == bring
or compx() == retrieve
  mpstring char self s9 $x
  mpcallsub do_fetch
  break
endif
// Check for depositing objects at the remembered location
if compx() == deposit
or compx() == stash
  mpcallsub do_deposit
  break
endif
// Check for establishing the familiar as a scout
if compx() == scout
or compx() == spy
or compx() == watch
  mpstring char self s9 $x
  mpcallsub do_scout
  break
endif
// Check for rumor triggers
if compx() == rumor
or compx() == gossip
or compx() == hearsay
  if compx() == spread
  or compx() == start
    mpcallsub do_spread_rumor
  else
    mpcallsub do_listen_rumor
  endif
  break
endif
// Check for safeguarding an item
if compx() == safeguard
or compx() == protect
or compx() == save
or compx() == salvage
  mpstring char self s9 $x
  mpcallsub do_safeguard_setup
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring char self s9 echo_on_unrecognized_command
  mpcallsub do_echo $f
endif
~
>sub_prog do_calculate_obedience~
// Establish the base value according to charisma and work level
mpget char $f chr 9
mpmath obey $9 - $0
// Modify according to health (-1 for every 10% hurt)
mpget char self hp 9
if value(9) <= 0
  mpvalueset healthPenalty 10
else
  mpget char self curhp 8
  mpmath healthPenalty 10 - (($8 * 10) / $9)
endif
mpmath obey %obey - %healthPenalty
// Validate against the obedience threshold
mpsetdata settings
mpnextdata 2
if value(obey) >= $d
  mpvalueset 9 1
else
  mpvalueset 9 0
endif
~
>fight_prog 100~
// Check whether fighting without master
if not ishere($f)
  flee
  break
endif
// Master is present, so call the specific fight routine
mpcallsub do_fight_special $n
~
>sub_prog do_safeguard_setup~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName obj char $f %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the object
  mpstring char self s9 echo_no_safeguard_object
  mpcallsub do_echo $f
  break
endif
// Object resolves, save it off
mpstring char self s2 %resolvedName
mpstring char self s9 echo_safeguard_object_ready
mpcallsub do_echo $f
~
>sub_prog do_listen_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
if value(4) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// This familiar does rumors, so start him off
mpstring char self s9 echo_on_rumor_listen_start
mpcallsub do_echo $f
emote wanders off in search of gossip.
mpvalueset 2 8
mpvalueup 0
mpgoto 200
~
>sub_prog do_spread_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 9 $d
if value(9) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// Check whether the spread cooldown is in effect
if value(6) > 0
  // Still in cooldown, send the echo
  mpstring char self s9 echo_on_spread_rumor_refused
  mpcallsub do_echo $f
  break
endif
// Prepare to hear rumor to spread
mpstring char self s9 echo_on_spread_rumor_waiting
mpcallsub do_echo $f
mpvalueset 2 9
~
>sub_prog do_spread_rumor_stated~
// Save off the rumor
mploadstring char self 9 rumorToSpread
mpstring char self s4 %rumorToSpread
// Begin the waiting period
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
// Move off to the waiting room
mpstring char self s9 echo_on_spread_rumor_start
mpcallsub do_echo $f
emote wanders off to spread the rumor.
mpvalueset 2 10
mpvalueup 0
mpgoto 200
~
>sub_prog do_scout~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName pc %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the PC
  mpstring char self s9 echo_no_pc_to_scout
  mpcallsub do_echo $f
  break
endif
// PC resolves; set up patience counter and room
mpsetdata settings
mpnextdata 4
mpvalueset 4 $d
mpgetroomvnum 5
mpvalueup 0
// Save off the PC
mpstring char self s3 %resolvedName
mpstring char self s9 echo_scouting_start
mpcallsub do_echo $f
mpvalueset 2 7
~
>sub_prog do_deposit~
// Check whether the familiar has anything to deposit
if carrycount($i) <= 0
  mpstring char self s9 echo_nothing_to_deposit
  mpcallsub do_echo $f
  break
endif
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 4
  mpvalueup 0
endif
~
>sub_prog do_fetch~
// Save off the requested string
mploadstring char self 9 fetchRequest
mpstring char self s1 %fetchRequest
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 2
  mpvalueup 0
endif
~
>sub_prog do_begin_walk~
// Initialize to failure
mpvalueset 9 0
// Check whether a room is remembered
if value(3) <= 0
  mpstring char self s9 echo_on_location_missing
  mpcallsub do_echo $f
  break
endif
// Check whether the room can be pathed
mpfindpath $3 -1 false
mpget char self pathsteps 8
if value(8) < 0
  // Cannot path to the room
  mpstring char self s9 echo_on_location_unpathable
  mpcallsub do_echo $f
  break
endif
// Path was found, echo success and begin walking
mpstring char self s9 echo_on_walk_begun
mpcallsub do_echo $f
mppathstep
mpvalueset 9 1
~
>sub_prog do_remember~
// Send the echo, then get the room vnum
mpstring char self s9 echo_on_location_remembered
mpcallsub do_echo $f
mpgetroomvnum 3
~
>sub_prog do_flee~
mpstring char self s9 echo_on_flee
mpcallsub do_echo $f
flee
flee
flee
mplag $f 1
~
>sub_prog do_become_object~
// Send the echo
drop all
mpstring char self s9 echo_on_become_object
mpcallsub do_echo $f
// Load the object
mpsetdata settings
mpoload $d on $f 24
// Initialize the object, passing short and level
mpstring char self s0 $I
mpget char self level 9
mpcopyvalues all char self obj familiar_obj
mpcallsub obj familiar_obj do_initialize
// Finished; lag the master and purge the mob
mplag $f 1
mppurge self
~
>sub_prog do_update_path~
// Check whether to update at all
mpsetdata settings
mpnextdata 3
if not rand($d)
  if value(2) != 7
    break
  endif
endif
// Check for lack of path
mpget char self pathsteps 9
if value(9) < 0
  // Path is needed, but there is none, so make a new one
  if value(2) == 2
  or value(2) == 4
    // Path to the remembered room
    mpfindpath $3 -1 false
  else
    if value(2) == 7
      // Path to the scout room
      mpfindpath $5 -1 false
    else
      // Path to the master
      mpfindpath $f -1 false
    endif
  endif
  mpget char self pathsteps 9
  if value(9) < 0
    // Still failed to find a path, so adjust states as needed
    if value(2) == 2
      mpvalueset 2 3
    endif
    if value(2) == 4
      mpvalueset 2 5
    endif
    break
  endif
endif
// Path is set up at this point, so follow it
mppathstep
~
>sub_prog do_check_deposit~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so drop everything and path back
drop all
mpvalueset 2 5
mpcallsub do_update_path
~
>sub_prog do_check_deposit_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, report and drop anything
mpvalueset 2 1
if carrycount($i) <= 0
  mpstring char self s9 echo_on_deposit_success
else
  mpstring char self s9 echo_on_deposit_failure
endif
mpcallsub do_echo $f
drop all
~
>sub_prog do_check_fetch~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so get the specified object and path back
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj room here %unresolvedObjName
get \@%resolvedObjName\@
mpvalueset 2 3
mpcallsub do_update_path
~
>sub_prog do_check_fetch_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master; hand over the item and report
mpvalueset 2 1
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj char $i %unresolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully retrieved item
  mpstring char self s9 echo_on_fetch_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to retrieve item
mpstring char self s9 echo_on_fetch_failure
mpcallsub do_echo $f
~
>sub_prog do_check_safeguard_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, hand over the item and report
mpvalueset 2 1
mploadstring char self 2 resolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully safeguarded item
  mpstring char self s9 echo_on_safeguard_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to safeguard item
mpstring char self s9 echo_on_safeguard_failure
mpcallsub do_echo $f
~
>sub_prog do_check_scout~
// Check whether PC is here
mploadstring char self 3 pcName
mpfocus %pcName 1
if not inarea($f1)
  // Did not find the target, adjust patience
  mpvaluedown 4
  if value(4) <= 0
    // Patience has run out, head back
    mpstring char self s9 echo_on_scouting_failure
    mpcallsub do_echo $f
    mpvalueset 2 1
    mpcallsub do_update_path
  endif
  break
endif
// Found the target, inform the master and head back
mpstring char self s9 echo_on_scouting_success
mpcallsub do_echo $f
mpvalueset 2 1
mpcallsub do_update_path
~
>sub_prog do_check_rumor_listen~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still listening
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Send the echo, and say the rumor
mpstring char self s9 echo_on_rumor_listen_end
mpcallsub do_echo $f
mprumor
~
>sub_prog do_check_idle~
// Adjust boredom
mpvalueup 7
mpsetdata settings
mpnextdata 7
if value(7) == $d
  // Send boredom echo
  mpstring char self s9 echo_on_bored
  mpcallsub do_echo $f
endif
// Give random echo
if rand(5)
  if rand(5)
    // Send random echo
    mpstring char self s9 echo_on_random
    mpcallsub do_echo $f
  endif
endif

// Track to master if not here
if not ishere($f)
  mpcallsub do_update_path
endif
~
>rand_prog 100~
mpvaluedown 6
// Check for unready state
if value(2) == 0
  mpcallsub do_init_special
  mpvalueset 2 1
endif
// Check for pathing states
if value(2) == 2
or value(2) == 3
or value(2) == 4
or value(2) == 5
or value(2) == 6
or value(2) == 7
  mpcallsub do_update_path
endif
// Dispatch according to state
if value(2) == 1
  mpcallsub do_check_idle
endif
if value(2) == 2
  mpcallsub do_check_fetch
endif
if value(2) == 3
  mpcallsub do_check_fetch_return
endif
if value(2) == 4
  mpcallsub do_check_deposit
endif
if value(2) == 5
  mpcallsub do_check_deposit_return
endif
if value(2) == 6
  mpcallsub do_check_safeguard_return
endif
if value(2) == 7
  mpcallsub do_check_scout
endif
if value(2) == 8
  mpcallsub do_check_rumor_listen
endif
if value(2) == 10
  mpcallsub do_check_rumor_spread
endif
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>sub_prog do_initialize~
// Establish the master
mpfocus $n
mpfollow self $f
// Add the effect for same-room bonus
mpsetdata settings
mpnextdata 1
mpget char $f id 8
mpaddaffect self $d $9 -1 0 $8 0
// Set up the short and name
mploadstring char self 0 familiarName
mpstring mob self short %familiarName
mpstring mob self name $i %familiarName
// Set up level, hp, ready state
mpset char self level $9
mpmath 9 100 + ($9 * 5)
mpset char self hp $9
mpset char self curhp $9
mpvalueset 2 0
mpvalueset 7 0
~
>give_prog all~
// Check for food
if not objtype() == 19
  break
endif
// Food given, check whether it is enjoyed
mpget char $f id 8
mpget obj $o vnum 9
mpmath foodseed $8 + $9
mpsetdata settings
mpnextdata 8
mpvaluerand 9 0 $d %foodseed
if value(9) != 0
  // Food is not desirable
  mpstring char self s9 echo_on_food_bad
  mpcallsub do_echo $f
  drop \@$o\@
  break
endif
// Food is desirable
mpstring char self s9 echo_on_food_good
mpcallsub do_echo $f
eat \@$o\@
mpvaluedown 0
~
>all_death_prog 100~
// Check for death of master
if not name($t) == $f
  break
endif
// Master died, attempt to loot the safeguard item
mploadstring char self 2 itemName
mploot $f %itemName
if iscarrying($i) == %itemName
  mpechoaround $f As $F falls, $I tugs something free of $S corpse.
endif
// Now chart a path back to the master, regardless of success
flee
flee
flee
mpvalueset 2 6
mpcallsub do_update_path
~
|
V4 51
unusued oldfamiliar~
unusued oldfamiliar was an owl or something before copy paste~
Unused old familiar
~
~
song bird~
water scholar~
ALe F DJSTZ E 0
0 20 1d1+299 40d10+100 5d8+20 pierce~
peck~
-15 -15 -15 -3
FH A
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMVW ACDEFHKP AK medium unknown
>speech_prog p Orgob~
if ismaster($n)
mplag $n 2
cast \@refresh\@ $n
cast \@refresh\@ $n
endif
~
>speech_prog p Nagak~
if ismaster($n)
cast \@infravision\@ $n
endif
~
|
V4 52
python familiar mottled snake serpent mob_52~
a python~
A dark, mottled python slowly slithers along.
~
Mottled, scaly skin covers this long, bulging snake, patterned in regular
slotches of dark brown and deep grey.  Curling and curving sinuously, this
overlarge serpent sidles along with a certain fluid grace.  Though the fangs
are not particularly impressive, the rest of its body seems to be endowed
with greater than normal bulk, of that sinewy muscle common to its kind.  
~
snake~
water scholar~
ALU F DJSZf E 0
0 20 1d1+299 40d10+100 6d9+30 bash~
crush~
-15 -15 -15 -3
0 B
26 0 0 0 30 0 0 0 0 -33 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHXYc ADEFKLQVX AK medium flesh
>sub_prog do_check_rumor_spread~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still spreading
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Set the cooldown
mpsetdata settings
mpnextdata 6
mpvalueset 6 $d
// Send the echo about complete, and spread the rumor
mpstring char self s9 echo_on_spread_rumor_end
mpcallsub do_echo $f
mploadstring char self 4 rumorToSpread
mpaddrumor \#$F\# %rumorToSpread
~
>sub_prog do_init_special~
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring char self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget char self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
speak arcane
$d
~
>sub_prog do_calculate_obedience~
// Establish the base value according to charisma and work level
mpget char $f chr 9
mpmath obey $9 - $0
// Modify according to health (-1 for every 10% hurt)
mpget char self hp 9
if value(9) <= 0
  mpvalueset healthPenalty 10
else
  mpget char self curhp 8
  mpmath healthPenalty 10 - (($8 * 10) / $9)
endif
mpmath obey %obey - %healthPenalty
// Validate against the obedience threshold
mpsetdata settings
mpnextdata 2
if value(obey) >= $d
  mpvalueset 9 1
else
  mpvalueset 9 0
endif
~
>give_prog all~
// Check for food
if not objtype() == 19
  break
endif
// Food given, check whether it is enjoyed
mpget char $f id 8
mpget obj $o vnum 9
mpmath foodseed $8 + $9
mpsetdata settings
mpnextdata 8
mpvaluerand 9 0 $d %foodseed
if value(9) != 0
  // Food is not desirable
  mpstring char self s9 echo_on_food_bad
  mpcallsub do_echo $f
  drop \@$o\@
  break
endif
// Food is desirable
mpstring char self s9 echo_on_food_good
mpcallsub do_echo $f
eat \@$o\@
mpvaluedown 0
~
>sub_prog do_initialize~
// Establish the master
mpfocus $n
mpfollow self $f
// Add the effect for same-room bonus
mpsetdata settings
mpnextdata 1
mpget char $f id 8
mpaddaffect self $d $9 -1 0 $8 0
// Set up the short and name
mploadstring char self 0 familiarName
mpstring mob self short %familiarName
mpstring mob self name $i %familiarName
// Set up level, hp, ready state
mpset char self level $9
mpmath 9 100 + ($9 * 5)
mpset char self hp $9
mpset char self curhp $9
mpvalueset 2 0
mpvalueset 7 0
~
>data_prog settings~
144
1214
8
50
40
0
10000
180
4
~
>data_prog echo_on_food_good~
mpecho $I grins serpentinely, opening $l mouth wide.
~
>data_prog echo_on_food_bad~
mpecho $I hisses in displeasure, spitting it out.
~
>sub_prog do_check_idle~
// Adjust boredom
mpvalueup 7
mpsetdata settings
mpnextdata 7
if value(7) == $d
  // Send boredom echo
  mpstring char self s9 echo_on_bored
  mpcallsub do_echo $f
endif
// Give random echo
if rand(5)
  if rand(5)
    // Send random echo
    mpstring char self s9 echo_on_random
    mpcallsub do_echo $f
  endif
endif

// Track to master if not here
if not ishere($f)
  mpcallsub do_update_path
endif
~
>sub_prog do_fight_special~
// Do nothing most of the time
if not rand(4)
  break
endif
// Crush attack for damage and lag
mpechoat $n $I loops around you, crushing you painfully!
mpechoaround $n $I loops around $N, crushing $m painfully!
mpdice 9 10 20 10
mpdealdamage $n $i \@squeeze\@ bash $9
mplag $n 1
~
>data_prog echo_on_random~
mpecho $I tests the air with a flick of $l forked tongue.
emote stares fixedly at something.
emote coils itself neatly, one slit yellow eye gazing out from the pile.
mpecho $I stirs, uncoiling $kself with a quiet hiss.
~
>data_prog echo_on_bored~
mpecho $I flicks $l tongue languidly.
~
>data_prog echo_on_cancel~
pmote hisses in annoyance, forming up behind $N again.
~
>data_prog echo_on_spread_rumor_end~
pmote nods to $N, confident in the success of its mission.
~
>data_prog echo_on_spread_rumor_start~
emote nods once, slitted eyes unblinking.
~
>data_prog echo_on_spread_rumor_waiting~
pmote peers at $N questioningly, as though waiting for more.
~
>data_prog echo_on_spread_rumor_refused~
pmote swivels its eyes about, clearly uninterested in spreading another rumor so soon.
~
>data_prog echo_on_rumors_unsupported~
pmote glares at $N, then shakes its head.
~
>data_prog echo_on_rumor_listen_end~
pmote slithers up to $N and hisses in $N\@s ear.
~
>data_prog echo_on_rumor_listen_start~
pmote stares at $N for a moment, then nods assent.
~
>data_prog echo_on_scouting_failure~
mpechoat $n You sense $I\@s boredom, and realize $j has given up on scouting.
~
>data_prog echo_on_scouting_success~
mpechoat $n A sense of warning washes over you, and you realize $I has spotted your quarry.
~
>data_prog echo_scouting_start~
pmote grows very still, silently watching for passersby.
~
>data_prog echo_no_pc_to_scout~
pmote eyes $N cooly, as though waiting for something.
~
>data_prog echo_on_safeguard_failure~
pmote hisses in disappointment, looking at $N.
~
>data_prog echo_on_safeguard_success~
pmote looks, just for a moment, somewhat self-satisfied.
~
>data_prog echo_safeguard_object_ready~
pmote ducks its head in acknowledgment.
~
>data_prog echo_no_safeguard_object~
pmote flicks its tongue, eyeing $N in confusion.
~
>data_prog echo_on_deposit_success~
pmote bobs its head in affirmation as it returns.
~
>data_prog echo_on_deposit_failure~
pmote twitches its tail as it returns, shaking its head from side to side.
~
>data_prog echo_nothing_to_deposit~
pmote gazes at $N expectantly.
~
>data_prog echo_on_fetch_failure~
pmote twitches its tail as it returns, shaking its head from side to side.
~
>data_prog echo_on_fetch_success~
pmote bobs its head in affirmation as it returns.
~
>data_prog echo_on_walk_begun~
pmote looks at $N for a moment, then slowly slithers away.
~
>data_prog echo_on_location_unpathable~
pmote looks to the left, then the right, then back up at $N.
~
>data_prog echo_on_location_missing~
pmote eyes $N uncertainly, clearly uncertain where to go.
~
>data_prog echo_on_location_remembered~
pmote looks around slowly, taking careful note.
pmote glances about, testing the air with a forked tongue.
~
>data_prog echo_on_unrecognized_command~
pmote looks at $N for a moment, then looks away.
~
>data_prog echo_on_disobedience~
pmote shakes the tip of $l tail slowly back and forth.
pmote simply looks at $N for a long moment.
~
>data_prog echo_on_flee~
pmote cooly draws back, attempting to slither away from the melee.
~
>data_prog echo_on_become_object~
pmote approaches $N, slithering up to coil around $N\@s arm.
~
>speech_prog p ~
// Validate master and state
if not name($n) == $f
or value(2) == 0
  break
endif
// Check for spread rumor message
if value(2) == 9
  mpstring char self s9 $x
  mpcallsub do_spread_rumor_stated
  break
endif
// Validate familiar name in statement
if not compx() == $I
  break
endif
mpvalueset 7 0
// Handle commands with no obedience check
// Check for cancelling task
if compx() == nevermind
or compx() == belay
or compx() == retract
or compx() == cancel
or compx() == stop
  if value(2) > 1
    // Action cancel
    mpvalueset 2 1
    mpstring char self s9 echo_on_cancel
    mpcallsub do_echo $f
    break
  endif
endif
// Check for fleeing
if compx() == flee
or compx() == retreat
or compx() == run
  if isfighting($i)
    mpcallsub do_flee
    break
  endif
endif
// Check for becoming an object
if compx() == come
or compx() == approach
or compx() == nearer
or compx() == closer
  mpcallsub do_become_object
  break
endif
// Calculate obedience
mpcallsub do_calculate_obedience
if value(9) != 1
  // Disobeying; send the echo and bail out
  mpstring char self s9 echo_on_disobedience
  mpcallsub do_echo $f
  break
endif
// Familiar will obey command; dispatch appropriately
// Check for remembering a location
if compx() == remember
or compx() == memorize
  mpcallsub do_remember
  break
endif
// Check for fetching an object from remembered location
if compx() == fetch
or compx() == bring
or compx() == retrieve
  mpstring char self s9 $x
  mpcallsub do_fetch
  break
endif
// Check for depositing objects at the remembered location
if compx() == deposit
or compx() == stash
  mpcallsub do_deposit
  break
endif
// Check for establishing the familiar as a scout
if compx() == scout
or compx() == spy
or compx() == watch
  mpstring char self s9 $x
  mpcallsub do_scout
  break
endif
// Check for rumor triggers
if compx() == rumor
or compx() == gossip
or compx() == hearsay
  if compx() == spread
  or compx() == start
    mpcallsub do_spread_rumor
  else
    mpcallsub do_listen_rumor
  endif
  break
endif
// Check for safeguarding an item
if compx() == safeguard
or compx() == protect
or compx() == save
or compx() == salvage
  mpstring char self s9 $x
  mpcallsub do_safeguard_setup
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring char self s9 echo_on_unrecognized_command
  mpcallsub do_echo $f
endif
~
>fight_prog 100~
// Check whether fighting without master
if not ishere($f)
  flee
  break
endif
// Master is present, so call the specific fight routine
mpcallsub do_fight_special $n
~
>sub_prog do_safeguard_setup~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName obj char $f %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the object
  mpstring char self s9 echo_no_safeguard_object
  mpcallsub do_echo $f
  break
endif
// Object resolves, save it off
mpstring char self s2 %resolvedName
mpstring char self s9 echo_safeguard_object_ready
mpcallsub do_echo $f
~
>sub_prog do_listen_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
if value(4) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// This familiar does rumors, so start him off
mpstring char self s9 echo_on_rumor_listen_start
mpcallsub do_echo $f
emote wanders off in search of gossip.
mpvalueset 2 8
mpvalueup 0
mpgoto 200
~
>sub_prog do_spread_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 9 $d
if value(9) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// Check whether the spread cooldown is in effect
if value(6) > 0
  // Still in cooldown, send the echo
  mpstring char self s9 echo_on_spread_rumor_refused
  mpcallsub do_echo $f
  break
endif
// Prepare to hear rumor to spread
mpstring char self s9 echo_on_spread_rumor_waiting
mpcallsub do_echo $f
mpvalueset 2 9
~
>sub_prog do_spread_rumor_stated~
// Save off the rumor
mploadstring char self 9 rumorToSpread
mpstring char self s4 %rumorToSpread
// Begin the waiting period
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
// Move off to the waiting room
mpstring char self s9 echo_on_spread_rumor_start
mpcallsub do_echo $f
emote wanders off to spread the rumor.
mpvalueset 2 10
mpvalueup 0
mpgoto 200
~
>sub_prog do_scout~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName pc %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the PC
  mpstring char self s9 echo_no_pc_to_scout
  mpcallsub do_echo $f
  break
endif
// PC resolves; set up patience counter and room
mpsetdata settings
mpnextdata 4
mpvalueset 4 $d
mpgetroomvnum 5
mpvalueup 0
// Save off the PC
mpstring char self s3 %resolvedName
mpstring char self s9 echo_scouting_start
mpcallsub do_echo $f
mpvalueset 2 7
~
>sub_prog do_deposit~
// Check whether the familiar has anything to deposit
if carrycount($i) <= 0
  mpstring char self s9 echo_nothing_to_deposit
  mpcallsub do_echo $f
  break
endif
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 4
  mpvalueup 0
endif
~
>sub_prog do_fetch~
// Save off the requested string
mploadstring char self 9 fetchRequest
mpstring char self s1 %fetchRequest
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 2
  mpvalueup 0
endif
~
>sub_prog do_begin_walk~
// Initialize to failure
mpvalueset 9 0
// Check whether a room is remembered
if value(3) <= 0
  mpstring char self s9 echo_on_location_missing
  mpcallsub do_echo $f
  break
endif
// Check whether the room can be pathed
mpfindpath $3 -1 false
mpget char self pathsteps 8
if value(8) < 0
  // Cannot path to the room
  mpstring char self s9 echo_on_location_unpathable
  mpcallsub do_echo $f
  break
endif
// Path was found, echo success and begin walking
mpstring char self s9 echo_on_walk_begun
mpcallsub do_echo $f
mppathstep
mpvalueset 9 1
~
>sub_prog do_remember~
// Send the echo, then get the room vnum
mpstring char self s9 echo_on_location_remembered
mpcallsub do_echo $f
mpgetroomvnum 3
~
>sub_prog do_flee~
mpstring char self s9 echo_on_flee
mpcallsub do_echo $f
flee
flee
flee
mplag $f 1
~
>sub_prog do_become_object~
// Send the echo
drop all
mpstring char self s9 echo_on_become_object
mpcallsub do_echo $f
// Load the object
mpsetdata settings
mpoload $d on $f 24
// Initialize the object, passing short and level
mpstring char self s0 $I
mpget char self level 9
mpcopyvalues all char self obj familiar_obj
mpcallsub obj familiar_obj do_initialize
// Finished; lag the master and purge the mob
mplag $f 1
mppurge self
~
>sub_prog do_update_path~
// Check whether to update at all
mpsetdata settings
mpnextdata 3
if not rand($d)
  if value(2) != 7
    break
  endif
endif
// Check for lack of path
mpget char self pathsteps 9
if value(9) < 0
  // Path is needed, but there is none, so make a new one
  if value(2) == 2
  or value(2) == 4
    // Path to the remembered room
    mpfindpath $3 -1 false
  else
    if value(2) == 7
      // Path to the scout room
      mpfindpath $5 -1 false
    else
      // Path to the master
      mpfindpath $f -1 false
    endif
  endif
  mpget char self pathsteps 9
  if value(9) < 0
    // Still failed to find a path, so adjust states as needed
    if value(2) == 2
      mpvalueset 2 3
    endif
    if value(2) == 4
      mpvalueset 2 5
    endif
    break
  endif
endif
// Path is set up at this point, so follow it
mppathstep
~
>sub_prog do_check_deposit~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so drop everything and path back
drop all
mpvalueset 2 5
mpcallsub do_update_path
~
>sub_prog do_check_deposit_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, report and drop anything
mpvalueset 2 1
if carrycount($i) <= 0
  mpstring char self s9 echo_on_deposit_success
else
  mpstring char self s9 echo_on_deposit_failure
endif
mpcallsub do_echo $f
drop all
~
>sub_prog do_check_fetch~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so get the specified object and path back
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj room here %unresolvedObjName
get \@%resolvedObjName\@
mpvalueset 2 3
mpcallsub do_update_path
~
>sub_prog do_check_fetch_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master; hand over the item and report
mpvalueset 2 1
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj char $i %unresolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully retrieved item
  mpstring char self s9 echo_on_fetch_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to retrieve item
mpstring char self s9 echo_on_fetch_failure
mpcallsub do_echo $f
~
>sub_prog do_check_safeguard_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, hand over the item and report
mpvalueset 2 1
mploadstring char self 2 resolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully safeguarded item
  mpstring char self s9 echo_on_safeguard_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to safeguard item
mpstring char self s9 echo_on_safeguard_failure
mpcallsub do_echo $f
~
>sub_prog do_check_scout~
// Check whether PC is here
mploadstring char self 3 pcName
mpfocus %pcName 1
if not inarea($f1)
  // Did not find the target, adjust patience
  mpvaluedown 4
  if value(4) <= 0
    // Patience has run out, head back
    mpstring char self s9 echo_on_scouting_failure
    mpcallsub do_echo $f
    mpvalueset 2 1
    mpcallsub do_update_path
  endif
  break
endif
// Found the target, inform the master and head back
mpstring char self s9 echo_on_scouting_success
mpcallsub do_echo $f
mpvalueset 2 1
mpcallsub do_update_path
~
>sub_prog do_check_rumor_listen~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still listening
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Send the echo, and say the rumor
mpstring char self s9 echo_on_rumor_listen_end
mpcallsub do_echo $f
mprumor
~
>rand_prog 100~
mpvaluedown 6
// Check for unready state
if value(2) == 0
  mpcallsub do_init_special
  mpvalueset 2 1
endif
// Check for pathing states
if value(2) == 2
or value(2) == 3
or value(2) == 4
or value(2) == 5
or value(2) == 6
or value(2) == 7
  mpcallsub do_update_path
endif
// Dispatch according to state
if value(2) == 1
  mpcallsub do_check_idle
endif
if value(2) == 2
  mpcallsub do_check_fetch
endif
if value(2) == 3
  mpcallsub do_check_fetch_return
endif
if value(2) == 4
  mpcallsub do_check_deposit
endif
if value(2) == 5
  mpcallsub do_check_deposit_return
endif
if value(2) == 6
  mpcallsub do_check_safeguard_return
endif
if value(2) == 7
  mpcallsub do_check_scout
endif
if value(2) == 8
  mpcallsub do_check_rumor_listen
endif
if value(2) == 10
  mpcallsub do_check_rumor_spread
endif
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>all_death_prog 100~
// Check for death of master
if not name($t) == $f
  break
endif
// Master died, attempt to loot the safeguard item
mploadstring char self 2 itemName
mploot $f %itemName
if iscarrying($i) == %itemName
  mpechoaround $f As $F falls, $I tugs something free of $S corpse.
endif
// Now chart a path back to the master, regardless of success
flee
flee
flee
mpvalueset 2 6
mpcallsub do_update_path
~
>data_prog echo_on_fetch_begun~
pmote looks at $N for a moment, then slowly slithers away.
~
|
V4 53
fox familiar red mob_53~
a red fox~
A red fox stands here, alertly quiet.
~
Covered in patchy fur of russet tones, this thin fox seems unusually
alert.  With perked-up ears and intelligent eyes of the same reddish hue as
its pelt, it is clear that very little escapes its notice.  A lengthy tail
extends from behind the creature, bushy and full despite the sparness of the
rest of its coat.  Sharp canines are evident when it opens its pointed
mouth, modest in size but nonetheless clearly dangerous.  
~
wolf~
water scholar~
AL F DJSZf E 0
0 20 1d1+299 40d10+100 5d8+25 pierce~
bite~
-15 -15 -15 -3
FH B
26 0 0 0 0 0 0 0 -20 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHV ACDEFHJKQV AK medium flesh
>sub_prog do_check_rumor_spread~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still spreading
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Set the cooldown
mpsetdata settings
mpnextdata 6
mpvalueset 6 $d
// Send the echo about complete, and spread the rumor
mpstring char self s9 echo_on_spread_rumor_end
mpcallsub do_echo $f
mploadstring char self 4 rumorToSpread
mpaddrumor \#$F\# %rumorToSpread
~
>sub_prog do_init_special~
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring char self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget char self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
speak arcane
$d
~
>sub_prog do_fight_special~
// Do nothing most of the time
if not rand(6)
  break
endif
// Bite attack (hamstring)
mpechoat $n $I sinks $l teeth into your leg, biting viciously!
mpechoaround $n $I sinks $l teeth into $N\@s leg, biting viciously!
mpdice 9 5 3 5
mpdealdamage $n $i \@bite\@ pierce $9
mpaddaffect $n 233 51 3 2 -1 65536 O
~
>data_prog settings~
148
1210
12
70
40
25
2000
180
4
~
>speech_prog p ~
// Validate master and state
if not name($n) == $f
or value(2) == 0
  break
endif
// Check for spread rumor message
if value(2) == 9
  mpstring char self s9 $x
  mpcallsub do_spread_rumor_stated
  break
endif
// Validate familiar name in statement
if not compx() == $I
  break
endif
mpvalueset 7 0
// Handle commands with no obedience check
// Check for cancelling task
if compx() == nevermind
or compx() == belay
or compx() == retract
or compx() == cancel
or compx() == stop
  if value(2) > 1
    // Action cancel
    mpvalueset 2 1
    mpstring char self s9 echo_on_cancel
    mpcallsub do_echo $f
    break
  endif
endif
// Check for fleeing
if compx() == flee
or compx() == retreat
or compx() == run
  if isfighting($i)
    mpcallsub do_flee
    break
  endif
endif
// Check for becoming an object
if compx() == come
or compx() == approach
or compx() == nearer
or compx() == closer
  mpcallsub do_become_object
  break
endif
// Calculate obedience
mpcallsub do_calculate_obedience
if value(9) != 1
  // Disobeying; send the echo and bail out
  mpstring char self s9 echo_on_disobedience
  mpcallsub do_echo $f
  break
endif
// Familiar will obey command; dispatch appropriately
// Check for remembering a location
if compx() == remember
or compx() == memorize
  mpcallsub do_remember
  break
endif
// Check for fetching an object from remembered location
if compx() == fetch
or compx() == bring
or compx() == retrieve
  mpstring char self s9 $x
  mpcallsub do_fetch
  break
endif
// Check for depositing objects at the remembered location
if compx() == deposit
or compx() == stash
  mpcallsub do_deposit
  break
endif
// Check for establishing the familiar as a scout
if compx() == scout
or compx() == spy
or compx() == watch
  mpstring char self s9 $x
  mpcallsub do_scout
  break
endif
// Check for rumor triggers
if compx() == rumor
or compx() == gossip
or compx() == hearsay
  if compx() == spread
  or compx() == start
    mpcallsub do_spread_rumor
  else
    mpcallsub do_listen_rumor
  endif
  break
endif
// Check for safeguarding an item
if compx() == safeguard
or compx() == protect
or compx() == save
or compx() == salvage
  mpstring char self s9 $x
  mpcallsub do_safeguard_setup
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring char self s9 echo_on_unrecognized_command
  mpcallsub do_echo $f
endif
~
>sub_prog do_calculate_obedience~
// Establish the base value according to charisma and work level
mpget char $f chr 9
mpmath obey $9 - $0
// Modify according to health (-1 for every 10% hurt)
mpget char self hp 9
if value(9) <= 0
  mpvalueset healthPenalty 10
else
  mpget char self curhp 8
  mpmath healthPenalty 10 - (($8 * 10) / $9)
endif
mpmath obey %obey - %healthPenalty
// Validate against the obedience threshold
mpsetdata settings
mpnextdata 2
if value(obey) >= $d
  mpvalueset 9 1
else
  mpvalueset 9 0
endif
~
>fight_prog 100~
// Check whether fighting without master
if not ishere($f)
  flee
  break
endif
// Master is present, so call the specific fight routine
mpcallsub do_fight_special $n
~
>sub_prog do_safeguard_setup~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName obj char $f %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the object
  mpstring char self s9 echo_no_safeguard_object
  mpcallsub do_echo $f
  break
endif
// Object resolves, save it off
mpstring char self s2 %resolvedName
mpstring char self s9 echo_safeguard_object_ready
mpcallsub do_echo $f
~
>sub_prog do_listen_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
if value(4) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// This familiar does rumors, so start him off
mpstring char self s9 echo_on_rumor_listen_start
mpcallsub do_echo $f
emote wanders off in search of gossip.
mpvalueset 2 8
mpvalueup 0
mpgoto 200
~
>sub_prog do_spread_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 9 $d
if value(9) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// Check whether the spread cooldown is in effect
if value(6) > 0
  // Still in cooldown, send the echo
  mpstring char self s9 echo_on_spread_rumor_refused
  mpcallsub do_echo $f
  break
endif
// Prepare to hear rumor to spread
mpstring char self s9 echo_on_spread_rumor_waiting
mpcallsub do_echo $f
mpvalueset 2 9
~
>sub_prog do_spread_rumor_stated~
// Save off the rumor
mploadstring char self 9 rumorToSpread
mpstring char self s4 %rumorToSpread
// Begin the waiting period
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
// Move off to the waiting room
mpstring char self s9 echo_on_spread_rumor_start
mpcallsub do_echo $f
emote wanders off to spread the rumor.
mpvalueset 2 10
mpvalueup 0
mpgoto 200
~
>sub_prog do_scout~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName pc %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the PC
  mpstring char self s9 echo_no_pc_to_scout
  mpcallsub do_echo $f
  break
endif
// PC resolves; set up patience counter and room
mpsetdata settings
mpnextdata 4
mpvalueset 4 $d
mpgetroomvnum 5
mpvalueup 0
// Save off the PC
mpstring char self s3 %resolvedName
mpstring char self s9 echo_scouting_start
mpcallsub do_echo $f
mpvalueset 2 7
~
>sub_prog do_deposit~
// Check whether the familiar has anything to deposit
if carrycount($i) <= 0
  mpstring char self s9 echo_nothing_to_deposit
  mpcallsub do_echo $f
  break
endif
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 4
  mpvalueup 0
endif
~
>sub_prog do_fetch~
// Save off the requested string
mploadstring char self 9 fetchRequest
mpstring char self s1 %fetchRequest
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 2
  mpvalueup 0
endif
~
>sub_prog do_begin_walk~
// Initialize to failure
mpvalueset 9 0
// Check whether a room is remembered
if value(3) <= 0
  mpstring char self s9 echo_on_location_missing
  mpcallsub do_echo $f
  break
endif
// Check whether the room can be pathed
mpfindpath $3 -1 false
mpget char self pathsteps 8
if value(8) < 0
  // Cannot path to the room
  mpstring char self s9 echo_on_location_unpathable
  mpcallsub do_echo $f
  break
endif
// Path was found, echo success and begin walking
mpstring char self s9 echo_on_walk_begun
mpcallsub do_echo $f
mppathstep
mpvalueset 9 1
~
>sub_prog do_remember~
// Send the echo, then get the room vnum
mpstring char self s9 echo_on_location_remembered
mpcallsub do_echo $f
mpgetroomvnum 3
~
>sub_prog do_flee~
mpstring char self s9 echo_on_flee
mpcallsub do_echo $f
flee
flee
flee
mplag $f 1
~
>sub_prog do_become_object~
// Send the echo
drop all
mpstring char self s9 echo_on_become_object
mpcallsub do_echo $f
// Load the object
mpsetdata settings
mpoload $d on $f 24
// Initialize the object, passing short and level
mpstring char self s0 $I
mpget char self level 9
mpcopyvalues all char self obj familiar_obj
mpcallsub obj familiar_obj do_initialize
// Finished; lag the master and purge the mob
mplag $f 1
mppurge self
~
>sub_prog do_update_path~
// Check whether to update at all
mpsetdata settings
mpnextdata 3
if not rand($d)
  if value(2) != 7
    break
  endif
endif
// Check for lack of path
mpget char self pathsteps 9
if value(9) < 0
  // Path is needed, but there is none, so make a new one
  if value(2) == 2
  or value(2) == 4
    // Path to the remembered room
    mpfindpath $3 -1 false
  else
    if value(2) == 7
      // Path to the scout room
      mpfindpath $5 -1 false
    else
      // Path to the master
      mpfindpath $f -1 false
    endif
  endif
  mpget char self pathsteps 9
  if value(9) < 0
    // Still failed to find a path, so adjust states as needed
    if value(2) == 2
      mpvalueset 2 3
    endif
    if value(2) == 4
      mpvalueset 2 5
    endif
    break
  endif
endif
// Path is set up at this point, so follow it
mppathstep
~
>sub_prog do_check_deposit~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so drop everything and path back
drop all
mpvalueset 2 5
mpcallsub do_update_path
~
>sub_prog do_check_deposit_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, report and drop anything
mpvalueset 2 1
if carrycount($i) <= 0
  mpstring char self s9 echo_on_deposit_success
else
  mpstring char self s9 echo_on_deposit_failure
endif
mpcallsub do_echo $f
drop all
~
>sub_prog do_check_fetch~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so get the specified object and path back
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj room here %unresolvedObjName
get \@%resolvedObjName\@
mpvalueset 2 3
mpcallsub do_update_path
~
>sub_prog do_check_fetch_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master; hand over the item and report
mpvalueset 2 1
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj char $i %unresolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully retrieved item
  mpstring char self s9 echo_on_fetch_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to retrieve item
mpstring char self s9 echo_on_fetch_failure
mpcallsub do_echo $f
~
>sub_prog do_check_safeguard_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, hand over the item and report
mpvalueset 2 1
mploadstring char self 2 resolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully safeguarded item
  mpstring char self s9 echo_on_safeguard_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to safeguard item
mpstring char self s9 echo_on_safeguard_failure
mpcallsub do_echo $f
~
>sub_prog do_check_scout~
// Check whether PC is here
mploadstring char self 3 pcName
mpfocus %pcName 1
if not inarea($f1)
  // Did not find the target, adjust patience
  mpvaluedown 4
  if value(4) <= 0
    // Patience has run out, head back
    mpstring char self s9 echo_on_scouting_failure
    mpcallsub do_echo $f
    mpvalueset 2 1
    mpcallsub do_update_path
  endif
  break
endif
// Found the target, inform the master and head back
mpstring char self s9 echo_on_scouting_success
mpcallsub do_echo $f
mpvalueset 2 1
mpcallsub do_update_path
~
>sub_prog do_check_rumor_listen~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still listening
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Send the echo, and say the rumor
mpstring char self s9 echo_on_rumor_listen_end
mpcallsub do_echo $f
mprumor
~
>sub_prog do_check_idle~
// Adjust boredom
mpvalueup 7
mpsetdata settings
mpnextdata 7
if value(7) == $d
  // Send boredom echo
  mpstring char self s9 echo_on_bored
  mpcallsub do_echo $f
endif
// Give random echo
if rand(5)
  if rand(5)
    // Send random echo
    mpstring char self s9 echo_on_random
    mpcallsub do_echo $f
  endif
endif

// Track to master if not here
if not ishere($f)
  mpcallsub do_update_path
endif
~
>rand_prog 100~
mpvaluedown 6
// Check for unready state
if value(2) == 0
  mpcallsub do_init_special
  mpvalueset 2 1
endif
// Check for pathing states
if value(2) == 2
or value(2) == 3
or value(2) == 4
or value(2) == 5
or value(2) == 6
or value(2) == 7
  mpcallsub do_update_path
endif
// Dispatch according to state
if value(2) == 1
  mpcallsub do_check_idle
endif
if value(2) == 2
  mpcallsub do_check_fetch
endif
if value(2) == 3
  mpcallsub do_check_fetch_return
endif
if value(2) == 4
  mpcallsub do_check_deposit
endif
if value(2) == 5
  mpcallsub do_check_deposit_return
endif
if value(2) == 6
  mpcallsub do_check_safeguard_return
endif
if value(2) == 7
  mpcallsub do_check_scout
endif
if value(2) == 8
  mpcallsub do_check_rumor_listen
endif
if value(2) == 10
  mpcallsub do_check_rumor_spread
endif
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>sub_prog do_initialize~
// Establish the master
mpfocus $n
mpfollow self $f
// Add the effect for same-room bonus
mpsetdata settings
mpnextdata 1
mpget char $f id 8
mpaddaffect self $d $9 -1 0 $8 0
// Set up the short and name
mploadstring char self 0 familiarName
mpstring mob self short %familiarName
mpstring mob self name $i %familiarName
// Set up level, hp, ready state
mpset char self level $9
mpmath 9 100 + ($9 * 5)
mpset char self hp $9
mpset char self curhp $9
mpvalueset 2 0
mpvalueset 7 0
~
>give_prog all~
// Check for food
if not objtype() == 19
  break
endif
// Food given, check whether it is enjoyed
mpget char $f id 8
mpget obj $o vnum 9
mpmath foodseed $8 + $9
mpsetdata settings
mpnextdata 8
mpvaluerand 9 0 $d %foodseed
if value(9) != 0
  // Food is not desirable
  mpstring char self s9 echo_on_food_bad
  mpcallsub do_echo $f
  drop \@$o\@
  break
endif
// Food is desirable
mpstring char self s9 echo_on_food_good
mpcallsub do_echo $f
eat \@$o\@
mpvaluedown 0
~
>all_death_prog 100~
// Check for death of master
if not name($t) == $f
  break
endif
// Master died, attempt to loot the safeguard item
mploadstring char self 2 itemName
mploot $f %itemName
if iscarrying($i) == %itemName
  mpechoaround $f As $F falls, $I tugs something free of $S corpse.
endif
// Now chart a path back to the master, regardless of success
flee
flee
flee
mpvalueset 2 6
mpcallsub do_update_path
~
>data_prog echo_on_food_good~
esay \@perks up\@ Oh! Finally! Some recognition around here!
esay \@gobbles it down, saying\@ I hereby unsay half the nasty things I\@ve said about you.
~
>data_prog echo_on_food_bad~
esay \@discretely spits aside\@ Ugh. As attentive and on-point as ever, I see.
pmote looks up at $N reproachfully.
~
>data_prog echo_on_random~
emote prances about exaggeratedly.
emote licks $l fur with unusual attentiveness.
~
>data_prog echo_on_bored~
emote gives a vulpine yawn and scratches behind $l ear with a hindpaw.
emote heaves a surprisingly voluminous sigh.
esay \@whines\@ I\@m booooooored!
~
>data_prog echo_on_cancel~
pmote promptly curls up and goes to sleep.
esay \@rolls its eyes and says\@ Make up your blasted mind!
~
>data_prog echo_on_spread_rumor_end~
esay \@remarks glibly\@ It\@s the talk of the town now.
esay \@sighs wistfully\@ Reputations... so fragile.
~
>data_prog echo_on_spread_rumor_start~
esay \@twitches $l ears\@ Well lets try that little earworm out then.
pmote scampers off, grinning widely.
~
>data_prog echo_on_spread_rumor_waiting~
esay \@agrees\@ I mean, we can just make up anything we want, do tell.
esay \@bounces excitedly, saying\@ Oh! Oh! Tell the one about the Patrician!
~
>data_prog echo_on_spread_rumor_refused~
esay scowls Precisely how much filthy gossip do you expect me to spread in one day?
say I\@m sorry, I have far too much integrity for that.
~
>data_prog echo_on_rumors_unsupported~
esay \@turns up its nose and huffs\@ That would be EAVESDROPPING.
~
>data_prog echo_on_rumor_listen_end~
esay \@sidles up\@ Have I got some news for you...
say Oh my.
~
>data_prog echo_on_rumor_listen_start~
esay \@tsks\@ Too lazy to hit the tavern yourself? Shocking.
~
>data_prog echo_on_scouting_failure~
yell This is a waste of time and I\@m coming back!
mpechoat $n {gYour familiar tells you, \@Another wild dust goose chase.\@{x
~
>data_prog echo_on_scouting_success~
yell I FOUND THEM! I DON\@T THINK THEY SAW ME!
mpechoat $n {gYour familiar tells you, \@Found them. And... oh my.\@{x
mpechoat $n {gYour familiar tells you, \@HELP THEY\@RE KILLING ME! Just kidding. I found them.\@{x
mpechoat $n {gYour familiar tells you, \@Well I found your little morsel.\@{x
~
>data_prog echo_scouting_start~
esay \@flicks $l tail and twitches $l nose\@ And away I go!
say They\@ll never see me coming.
~
>data_prog echo_no_pc_to_scout~
say I\@m sorry, WHO?
say Um, I don\@t think that\@s actually a person.
say Damn it, I can\@t be expected find your imaginary friends.
~
>data_prog echo_on_safeguard_failure~
say It, uh, got lost. Yes.
say How about next time you just don\@t die, hm?
say You shouldn\@t be so attached to material things, anyway.
~
>data_prog echo_on_safeguard_success~
say Here you are. Don\@t mind the stains.
say I can see why you\@re so attached to this.
say Here you go. Nice show back there. No, really.
~
>data_prog echo_safeguard_object_ready~
esay \@suppresses a snicker\@ Really? That? No, no. It\@s fine. It\@s a good choice.
say Oh, yes. I\@ll take GOOD care of it.
~
>data_prog echo_no_safeguard_object~
say Sorry, what? I\@m pretty sure I was paying attention that time.
say There\@s no such thing! Some scholar YOU are.
~
>data_prog echo_on_deposit_success~
say It\@s done. Any other petty errands you can\@t be bothered to do yourself?
say Done. Maybe I even put it where you told me to!
~
>data_prog echo_on_deposit_failure~
say I\@m... sorry... couldn\@t... make it...
~
>data_prog echo_nothing_to_deposit~
say And what precisely am I supposed to leave?
esay \@gasps, horrified\@ Well I\@m not leaving THOSE!
~
>data_prog echo_on_fetch_failure~
esay \@asks dryly\@ Are you sure you aren\@t mixing it up with something else?
say Not going to happen.
~
>data_prog echo_on_fetch_success~
esay \@sighs\@ I suppose you\@ll expect me to give this to you, now.
say Can I keep this one?
~
>data_prog echo_on_walk_begun~
esay \@marches off, humming\@ O, Ee, O. E-Ooooo-o.
pmote saunters
~
>data_prog echo_on_location_unpathable~
esay \@says in an affected accent\@ I reckon you just cain\@t get thar from here.
say Don\@t look now, but I think we\@re lost.
~
>data_prog echo_on_location_missing~
esay sneers I\@M sorry, was *I* supposed to remember that?
say Next time you should tell me to remember these things BEFOREHAND.
~
>data_prog echo_on_location_remembered~
emote looks around with studied disinterest.
esay sighs Fine, I\@ll remember it. Though I can\@t imagine why.
~
>data_prog echo_on_unrecognized_command~
say They teach you the most curious expressions these days.
say Run that by me again, champ.
~
>data_prog echo_on_disobedience~
esay \@snaps\@ And what if I don\@t? Hmm?
esay \@replies\@ Why don\@t you get an imp to do it?
~
>data_prog echo_on_flee~
esay \@murmurs as it darts back, attempting to withdraw\@ Right then, I\@ll leave this one to you, $N.
mpechoat $n As you turn to issue the command, you realize the fox is already gone.
~
>data_prog echo_on_become_object~
pmote flicks its tail and falls in behind $N.
~
|
V4 54
bat familiar black mob_54~
a black bat~
A black bat flitters about on silent wings.
~
Slightly smaller than a normal bat, this creature is covered in an
abnormally dense growth of black fur, giving it an almost puffy appearance. 
This stands in stark contrast to the hairless, leathery membranes which act
as its wings.  Though its flight is silent as it darts and flaps through the
air, from time to time it echoes with a shrill cry, the piercing sound
bordering on a shriek.  
~
bat~
water scholar~
AL F DEJSTZf E 0
0 20 1d1+299 40d10+100 5d8+10 pierce~
bite~
-15 -15 -15 -3
FH B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20 -20 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ACDEFHJKP AK small flesh
>sub_prog do_check_rumor_spread~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still spreading
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Set the cooldown
mpsetdata settings
mpnextdata 6
mpvalueset 6 $d
// Send the echo about complete, and spread the rumor
mpstring char self s9 echo_on_spread_rumor_end
mpcallsub do_echo $f
mploadstring char self 4 rumorToSpread
mpaddrumor \#$F\# %rumorToSpread
~
>sub_prog do_init_special~
~
>data_prog echo_on_food_good~
emote rapaciously devours the snack, making a bloody mess.
~
>data_prog echo_on_food_bad~
esay \@tosses away the morsel, saying\@ I cannot sink my fangs into this!
~
>data_prog echo_on_random~
pmote hovers next to $F\@s head and sniffles at $S neck.
emote suddenly starts a frenzy of chirping, then suddenly stops.
pmote perches upon $F\@s shoulder for a brief moment clinging to $F\@s ear.
pmote alights and clambers over $F\@s garments with $l tiny claws.
esay \@flaps over to $R, and rasps\@ Mmm You smell different when you\@re awake.
~
>data_prog echo_on_bored~
emote begins preening itself.
esay sighs Is there nothing to hunt?
~
>data_prog echo_on_cancel~
emote nods and flaps over to $N.
~
>data_prog echo_on_spread_rumor_end~
emote flaps about the area, returning to $N.
esay \@bares $l tiny teeth as it says\@ Their ears will bleed with the news I\@ve sung.
~
>data_prog echo_on_spread_rumor_start~
esay chitters Such hearsay will discredit them as anything but food, for certain.
~
>data_prog echo_on_spread_rumor_waiting~
esay chitters Oh yes, do tell, do tell.
~
>data_prog echo_on_spread_rumor_refused~
esay \@squeaks\@ No, I think not...
~
>data_prog echo_on_rumors_unsupported~
esay scoffs I seek blood, not gossip.
~
>data_prog echo_on_rumor_listen_end~
esay \@flaps over and says\@ I watched their juicy tongues flapping and heard them say this:
~
>data_prog echo_on_rumor_listen_start~
esay \@flaps off, saying\@ I will hear everything, yes, everything.
~
>data_prog echo_on_scouting_failure~
mpechoat $n You hear sonorous clicks alerting you to \#no activity\#.
tell $n I think our prey has gone elsewhere, I return.
~
>data_prog echo_on_scouting_success~
mpechoat $n You hear sonorous clicks alerting you to \#found prey\#.
tell $n I see why you chose this one, they seem prepared to bleed.
~
>data_prog echo_scouting_start~
emote squeaks and begins watching the area closely with $l intense red eyes.
~
>data_prog echo_no_pc_to_scout~
emote blinks $l gleaming red eyes.
esay \@flaps about, saying\@ Who am I to pierce with my gaze?
~
>data_prog echo_on_safeguard_failure~
esay \@narrows $l eyes, saying\@ You don\@t look nearly as delicious like this...
~
>data_prog echo_on_safeguard_success~
emote arrives covered in an obscene amount of blood.
esay \@licks $mself clean as $e says\@ I tried to get the whole corpse, but...pieces just pulled right off.
~
>data_prog echo_safeguard_object_ready~
esay \@grins wickedly\@ I will gladly take such a blood-coated object from your corpse.
~
>data_prog echo_no_safeguard_object~
esay \@asks with red eyes gleaming\@ What is it? Torn flesh? Khuzindul Larvae that burrow into people\@s eyes?
~
>data_prog echo_on_deposit_success~
pmote returns and flaps wildly about $N\@s head.
esay \@flaps about $N, saying\@ I\@ve done your bidding...this time.
~
>data_prog echo_on_deposit_failure~
esay explains I couldn\@t get there. I suppose I\@ll have to stay here...with you.
~
>data_prog echo_nothing_to_deposit~
esay chitters A piece of flesh, or something else?
~
>data_prog echo_on_fetch_failure~
say I didn\@t find it. Perhaps it\@s kept beneath someone\@s skin? We could check.
~
>data_prog echo_on_fetch_success~
esay \@licks $l lips, saying\@ Here. I have cleansed it of the residual blood.
~
>data_prog echo_on_walk_begun~
emote flies off with a shriek and the leathery flapping of wings.
~
>data_prog echo_on_location_unpathable~
esay \@says excitedly\@ I can\@t get there...I\@ll have to stay near you. Mmm yes..
~
>data_prog echo_on_location_missing~
say Where should I look? Shall I peer into your soul?
~
>data_prog echo_on_location_remembered~
esay \@looks directly at $N, saying\@ Oh I\@ll remember this alright.
~
>data_prog echo_on_unrecognized_command~
pmote twitches $l ears and wiggles $l nose.
~
>data_prog echo_on_disobedience~
esay \@rasps in reply\@ No...
pmote shakes $l head, then begins to lick dried blood from $l fur.
~
>data_prog echo_on_flee~
esay chitters But..but the blood?...All that blood.
pmote flutters $l wings in frustration, attempting to draw back from the melee.
~
>data_prog echo_on_become_object~
pmote flaps over and clings to $N\@s ear, hanging upside down.
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring char self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget char self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
speak arcane
$d
~
>sub_prog do_fight_special~
// Do nothing most of the time
if not rand(20)
  break
endif
// Drain-like attack
mpecho $I darts in, drawing blood with a nasty bite!
mpdice 9 3 3 5
mpdealdamage $n $i \@drain\@ pierce $9
mpgrant self $9 0 0
~
>data_prog settings~
146
1209
8
90
40
25
2000
180
6
~
>speech_prog p ~
// Validate master and state
if not name($n) == $f
or value(2) == 0
  break
endif
// Check for spread rumor message
if value(2) == 9
  mpstring char self s9 $x
  mpcallsub do_spread_rumor_stated
  break
endif
// Validate familiar name in statement
if not compx() == $I
  break
endif
mpvalueset 7 0
// Handle commands with no obedience check
// Check for cancelling task
if compx() == nevermind
or compx() == belay
or compx() == retract
or compx() == cancel
or compx() == stop
  if value(2) > 1
    // Action cancel
    mpvalueset 2 1
    mpstring char self s9 echo_on_cancel
    mpcallsub do_echo $f
    break
  endif
endif
// Check for fleeing
if compx() == flee
or compx() == retreat
or compx() == run
  if isfighting($i)
    mpcallsub do_flee
    break
  endif
endif
// Check for becoming an object
if compx() == come
or compx() == approach
or compx() == nearer
or compx() == closer
  mpcallsub do_become_object
  break
endif
// Calculate obedience
mpcallsub do_calculate_obedience
if value(9) != 1
  // Disobeying; send the echo and bail out
  mpstring char self s9 echo_on_disobedience
  mpcallsub do_echo $f
  break
endif
// Familiar will obey command; dispatch appropriately
// Check for remembering a location
if compx() == remember
or compx() == memorize
  mpcallsub do_remember
  break
endif
// Check for fetching an object from remembered location
if compx() == fetch
or compx() == bring
or compx() == retrieve
  mpstring char self s9 $x
  mpcallsub do_fetch
  break
endif
// Check for depositing objects at the remembered location
if compx() == deposit
or compx() == stash
  mpcallsub do_deposit
  break
endif
// Check for establishing the familiar as a scout
if compx() == scout
or compx() == spy
or compx() == watch
  mpstring char self s9 $x
  mpcallsub do_scout
  break
endif
// Check for rumor triggers
if compx() == rumor
or compx() == gossip
or compx() == hearsay
  if compx() == spread
  or compx() == start
    mpcallsub do_spread_rumor
  else
    mpcallsub do_listen_rumor
  endif
  break
endif
// Check for safeguarding an item
if compx() == safeguard
or compx() == protect
or compx() == save
or compx() == salvage
  mpstring char self s9 $x
  mpcallsub do_safeguard_setup
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring char self s9 echo_on_unrecognized_command
  mpcallsub do_echo $f
endif
~
>sub_prog do_calculate_obedience~
// Establish the base value according to charisma and work level
mpget char $f chr 9
mpmath obey $9 - $0
// Modify according to health (-1 for every 10% hurt)
mpget char self hp 9
if value(9) <= 0
  mpvalueset healthPenalty 10
else
  mpget char self curhp 8
  mpmath healthPenalty 10 - (($8 * 10) / $9)
endif
mpmath obey %obey - %healthPenalty
// Validate against the obedience threshold
mpsetdata settings
mpnextdata 2
if value(obey) >= $d
  mpvalueset 9 1
else
  mpvalueset 9 0
endif
~
>fight_prog 100~
// Check whether fighting without master
if not ishere($f)
  flee
  break
endif
// Master is present, so call the specific fight routine
mpcallsub do_fight_special $n
~
>sub_prog do_safeguard_setup~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName obj char $f %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the object
  mpstring char self s9 echo_no_safeguard_object
  mpcallsub do_echo $f
  break
endif
// Object resolves, save it off
mpstring char self s2 %resolvedName
mpstring char self s9 echo_safeguard_object_ready
mpcallsub do_echo $f
~
>sub_prog do_listen_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
if value(4) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// This familiar does rumors, so start him off
mpstring char self s9 echo_on_rumor_listen_start
mpcallsub do_echo $f
emote wanders off in search of gossip.
mpvalueset 2 8
mpvalueup 0
mpgoto 200
~
>sub_prog do_spread_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 9 $d
if value(9) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// Check whether the spread cooldown is in effect
if value(6) > 0
  // Still in cooldown, send the echo
  mpstring char self s9 echo_on_spread_rumor_refused
  mpcallsub do_echo $f
  break
endif
// Prepare to hear rumor to spread
mpstring char self s9 echo_on_spread_rumor_waiting
mpcallsub do_echo $f
mpvalueset 2 9
~
>sub_prog do_spread_rumor_stated~
// Save off the rumor
mploadstring char self 9 rumorToSpread
mpstring char self s4 %rumorToSpread
// Begin the waiting period
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
// Move off to the waiting room
mpstring char self s9 echo_on_spread_rumor_start
mpcallsub do_echo $f
emote wanders off to spread the rumor.
mpvalueset 2 10
mpvalueup 0
mpgoto 200
~
>sub_prog do_scout~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName pc %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the PC
  mpstring char self s9 echo_no_pc_to_scout
  mpcallsub do_echo $f
  break
endif
// PC resolves; set up patience counter and room
mpsetdata settings
mpnextdata 4
mpvalueset 4 $d
mpgetroomvnum 5
mpvalueup 0
// Save off the PC
mpstring char self s3 %resolvedName
mpstring char self s9 echo_scouting_start
mpcallsub do_echo $f
mpvalueset 2 7
~
>sub_prog do_deposit~
// Check whether the familiar has anything to deposit
if carrycount($i) <= 0
  mpstring char self s9 echo_nothing_to_deposit
  mpcallsub do_echo $f
  break
endif
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 4
  mpvalueup 0
endif
~
>sub_prog do_fetch~
// Save off the requested string
mploadstring char self 9 fetchRequest
mpstring char self s1 %fetchRequest
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 2
  mpvalueup 0
endif
~
>sub_prog do_begin_walk~
// Initialize to failure
mpvalueset 9 0
// Check whether a room is remembered
if value(3) <= 0
  mpstring char self s9 echo_on_location_missing
  mpcallsub do_echo $f
  break
endif
// Check whether the room can be pathed
mpfindpath $3 -1 false
mpget char self pathsteps 8
if value(8) < 0
  // Cannot path to the room
  mpstring char self s9 echo_on_location_unpathable
  mpcallsub do_echo $f
  break
endif
// Path was found, echo success and begin walking
mpstring char self s9 echo_on_walk_begun
mpcallsub do_echo $f
mppathstep
mpvalueset 9 1
~
>sub_prog do_remember~
// Send the echo, then get the room vnum
mpstring char self s9 echo_on_location_remembered
mpcallsub do_echo $f
mpgetroomvnum 3
~
>sub_prog do_flee~
mpstring char self s9 echo_on_flee
mpcallsub do_echo $f
flee
flee
flee
mplag $f 1
~
>sub_prog do_become_object~
// Send the echo
drop all
mpstring char self s9 echo_on_become_object
mpcallsub do_echo $f
// Load the object
mpsetdata settings
mpoload $d on $f 24
// Initialize the object, passing short and level
mpstring char self s0 $I
mpget char self level 9
mpcopyvalues all char self obj familiar_obj
mpcallsub obj familiar_obj do_initialize
// Finished; lag the master and purge the mob
mplag $f 1
mppurge self
~
>sub_prog do_update_path~
// Check whether to update at all
mpsetdata settings
mpnextdata 3
if not rand($d)
  if value(2) != 7
    break
  endif
endif
// Check for lack of path
mpget char self pathsteps 9
if value(9) < 0
  // Path is needed, but there is none, so make a new one
  if value(2) == 2
  or value(2) == 4
    // Path to the remembered room
    mpfindpath $3 -1 false
  else
    if value(2) == 7
      // Path to the scout room
      mpfindpath $5 -1 false
    else
      // Path to the master
      mpfindpath $f -1 false
    endif
  endif
  mpget char self pathsteps 9
  if value(9) < 0
    // Still failed to find a path, so adjust states as needed
    if value(2) == 2
      mpvalueset 2 3
    endif
    if value(2) == 4
      mpvalueset 2 5
    endif
    break
  endif
endif
// Path is set up at this point, so follow it
mppathstep
~
>sub_prog do_check_deposit~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so drop everything and path back
drop all
mpvalueset 2 5
mpcallsub do_update_path
~
>sub_prog do_check_deposit_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, report and drop anything
mpvalueset 2 1
if carrycount($i) <= 0
  mpstring char self s9 echo_on_deposit_success
else
  mpstring char self s9 echo_on_deposit_failure
endif
mpcallsub do_echo $f
drop all
~
>sub_prog do_check_fetch~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so get the specified object and path back
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj room here %unresolvedObjName
get \@%resolvedObjName\@
mpvalueset 2 3
mpcallsub do_update_path
~
>sub_prog do_check_fetch_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master; hand over the item and report
mpvalueset 2 1
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj char $i %unresolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully retrieved item
  mpstring char self s9 echo_on_fetch_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to retrieve item
mpstring char self s9 echo_on_fetch_failure
mpcallsub do_echo $f
~
>sub_prog do_check_safeguard_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, hand over the item and report
mpvalueset 2 1
mploadstring char self 2 resolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully safeguarded item
  mpstring char self s9 echo_on_safeguard_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to safeguard item
mpstring char self s9 echo_on_safeguard_failure
mpcallsub do_echo $f
~
>sub_prog do_check_scout~
// Check whether PC is here
mploadstring char self 3 pcName
mpfocus %pcName 1
if not inarea($f1)
  // Did not find the target, adjust patience
  mpvaluedown 4
  if value(4) <= 0
    // Patience has run out, head back
    mpstring char self s9 echo_on_scouting_failure
    mpcallsub do_echo $f
    mpvalueset 2 1
    mpcallsub do_update_path
  endif
  break
endif
// Found the target, inform the master and head back
mpstring char self s9 echo_on_scouting_success
mpcallsub do_echo $f
mpvalueset 2 1
mpcallsub do_update_path
~
>sub_prog do_check_rumor_listen~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still listening
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Send the echo, and say the rumor
mpstring char self s9 echo_on_rumor_listen_end
mpcallsub do_echo $f
mprumor
~
>sub_prog do_check_idle~
// Adjust boredom
mpvalueup 7
mpsetdata settings
mpnextdata 7
if value(7) == $d
  // Send boredom echo
  mpstring char self s9 echo_on_bored
  mpcallsub do_echo $f
endif
// Give random echo
if rand(5)
  if rand(5)
    // Send random echo
    mpstring char self s9 echo_on_random
    mpcallsub do_echo $f
  endif
endif

// Track to master if not here
if not ishere($f)
  mpcallsub do_update_path
endif
~
>rand_prog 100~
mpvaluedown 6
// Check for unready state
if value(2) == 0
  mpcallsub do_init_special
  mpvalueset 2 1
endif
// Check for pathing states
if value(2) == 2
or value(2) == 3
or value(2) == 4
or value(2) == 5
or value(2) == 6
or value(2) == 7
  mpcallsub do_update_path
endif
// Dispatch according to state
if value(2) == 1
  mpcallsub do_check_idle
endif
if value(2) == 2
  mpcallsub do_check_fetch
endif
if value(2) == 3
  mpcallsub do_check_fetch_return
endif
if value(2) == 4
  mpcallsub do_check_deposit
endif
if value(2) == 5
  mpcallsub do_check_deposit_return
endif
if value(2) == 6
  mpcallsub do_check_safeguard_return
endif
if value(2) == 7
  mpcallsub do_check_scout
endif
if value(2) == 8
  mpcallsub do_check_rumor_listen
endif
if value(2) == 10
  mpcallsub do_check_rumor_spread
endif
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>sub_prog do_initialize~
// Establish the master
mpfocus $n
mpfollow self $f
// Add the effect for same-room bonus
mpsetdata settings
mpnextdata 1
mpget char $f id 8
mpaddaffect self $d $9 -1 0 $8 0
// Set up the short and name
mploadstring char self 0 familiarName
mpstring mob self short %familiarName
mpstring mob self name $i %familiarName
// Set up level, hp, ready state
mpset char self level $9
mpmath 9 100 + ($9 * 5)
mpset char self hp $9
mpset char self curhp $9
mpvalueset 2 0
mpvalueset 7 0
~
>give_prog all~
// Check for food
if not objtype() == 19
  break
endif
// Food given, check whether it is enjoyed
mpget char $f id 8
mpget obj $o vnum 9
mpmath foodseed $8 + $9
mpsetdata settings
mpnextdata 8
mpvaluerand 9 0 $d %foodseed
if value(9) != 0
  // Food is not desirable
  mpstring char self s9 echo_on_food_bad
  mpcallsub do_echo $f
  drop \@$o\@
  break
endif
// Food is desirable
mpstring char self s9 echo_on_food_good
mpcallsub do_echo $f
eat \@$o\@
mpvaluedown 0
~
>all_death_prog 100~
// Check for death of master
if not name($t) == $f
  break
endif
// Master died, attempt to loot the safeguard item
mploadstring char self 2 itemName
mploot $f %itemName
if iscarrying($i) == %itemName
  mpechoaround $f As $F falls, $I tugs something free of $S corpse.
endif
// Now chart a path back to the master, regardless of success
flee
flee
flee
mpvalueset 2 6
mpcallsub do_update_path
~
|
V4 55
toad familiar leathery mob_55~
a leathery toad~
A leathery toad observes its surroundings unblinkingly.
~
A small toad, this amphibian is an unusually putrid example of the breed.
Warts cover its skin, which is a mixture of leathery patches and sickly
slime.  Nonetheless, the creature manages an almost dignified air, rolling
its bulbous eyes about to regard the world with an uncanny intelligence. 
Squatting on broad, webbed feet, the toad occasionally emits a basso croak. 
~
lizard~
water scholar~
AL F DJSZf N 0
0 20 1d1+299 40d10+100 5d7+15 disease~
sickening touch~
-15 -15 -15 -3
F B
26 0 0 0 0 0 0 0 0 -20 0 0 20 0 0 0 0 20 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ABGHXac ACDEFGHKLQV AK small flesh
>sub_prog do_check_rumor_spread~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still spreading
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Set the cooldown
mpsetdata settings
mpnextdata 6
mpvalueset 6 $d
// Send the echo about complete, and spread the rumor
mpstring char self s9 echo_on_spread_rumor_end
mpcallsub do_echo $f
mploadstring char self 4 rumorToSpread
mpaddrumor \#$F\# %rumorToSpread
~
>sub_prog do_init_special~
if not iswielding($i) == 142
  mpoload 142 on self 3
endif
if not iswielding($i) == 143
  mpoload 143 on self 6
endif
~
>data_prog echo_on_food_good~
pmote snaps up the food with $l long tongue.
~
>data_prog echo_on_food_bad~
pmote \@croaks severely\@ If you\@re trying to make a point, you\@ve made it.
~
>data_prog echo_on_random~
pmote flips $l tongue out to clean $l eyes.
pmote methodically blinks one eye, then the other.
pmote rubs $l forelimbs together exactly six times.
pmote inflates $l throat-sac and croaks loudly.
~
>data_prog echo_on_bored~
pmote begins murmuring to $kself absently.
~
>data_prog echo_on_cancel~
esay \@puffs out $l throat-sac and croaks\@ Indeed.
~
>data_prog echo_on_spread_rumor_end~
esay \@croaks in satisfaction\@ If that doesn\@t set tongues to wagging, I don\@t know what will.
~
>data_prog echo_on_spread_rumor_start~
esay \@replies\@ Indeed. Tongues will wag and word will spread, or not. We shall see.
~
>data_prog echo_on_spread_rumor_waiting~
esay \@croaks\@ And just what bit of idle gossip shall we tongue into the public ear?
~
>data_prog echo_on_spread_rumor_refused~
esay \@shakes $l stubby head, saying\@ One can only spread so much mud before suspicions are aroused.
~
>data_prog echo_on_rumors_unsupported~
esay \@croaks, slowly shaking $l head\@ Some things are better left unsaid.
~
>data_prog echo_on_rumor_listen_end~
esay \@intones in a croak\@ When one listens carefully, one picks up certain things.
~
>data_prog echo_on_rumor_listen_start~
pmote nods at $N, then taps the side of its snout with a webbed digit.
~
>data_prog echo_on_scouting_failure~
tell $N Sometimes waiting and watching pays off. Alas, this is not such a time.
~
>data_prog echo_on_scouting_success~
tell $N Sometimes waiting and watching does pay off. As it has this time.
~
>data_prog echo_scouting_start~
esay \@croaks\@ Indeed. Indeed.
~
>data_prog echo_no_pc_to_scout~
~
>data_prog echo_on_safeguard_failure~
esay \@croaks with a toady frown\@ You had asked for a certain thing, but, well, problems do arise at times.
~
>data_prog echo_on_safeguard_success~
esay \@croaks, puffing up $l throat-sac self-importantly\@ You had asked for a certain thing. 
~
>data_prog echo_safeguard_object_ready~
pmote gives $N a knowing nod.
~
>data_prog echo_no_safeguard_object~
esay \@blinks slowly, puffs out $l throat-sac, then says\@ Safeguard what?
~
>data_prog echo_on_deposit_success~
esay \@croaks\@ All in a day\@s hop.
esay \@nods sagely\@ Safely laid away for another day.
~
>data_prog echo_on_deposit_failure~
esay \@croaks\@ It certainly seemed like a good idea at the time. But now, not so much.
~
>data_prog echo_nothing_to_deposit~
esay \@peers over its broad snout at $N, and says\@ Indeed. I could deposit the mud between my webbed toes, as that\@s all I\@ve got at the moment.
~
>data_prog echo_on_fetch_failure~
esay \@croaks\@ Unsuccessful. Perhaps it was sealed away, preserved in a vat of quicksilver?
~
>data_prog echo_on_fetch_success~
esay \@says, with a dignified croak\@ And in this manner, the task is completed.
esay \@observes, puffing out $l throat-sac\@ Note that you make full use of it, $N.
~
>data_prog echo_on_walk_begun~
esay \@croaks as it hops away\@ The simplest of tasks, really.
pmote nods sagely, twice, and then hops away.
~
>data_prog echo_on_location_unpathable~
esay \@complains\@ The path back is the thing, though. Note that there isn\@t one.
~
>data_prog echo_on_location_missing~
esay \@gives a long-suffering sigh and then croaks\@ One has to know where one is going, first and foremost. And I don\@t.
~
>data_prog echo_on_location_remembered~
pmote excretes a thin layer of mucus, then nods once.
~
>data_prog echo_on_unrecognized_command~
pmote clears $l throat and glances at $N.
~
>data_prog echo_on_disobedience~
pmote slowly turns around, presenting $l back to $N.
pmote rolls $l eyes and gives a long-suffering sigh.
~
>data_prog echo_on_flee~
pmote mutters about poor odds as $j attempts to hop back from the fray.
~
>data_prog echo_on_become_object~
pmote hops to $N and clambers up to sit on $N\@s shoulder.
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring char self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget char self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
speak arcane
$d
~
>sub_prog do_fight_special~
// Do nothing most of the time
if not rand(6)
or snaffected($n) == 105
  break
endif
// Poison
mpechoat $n $I spits a gob of foul, reeking matter at you!
mpechoaround $n $I spits a gob of foul, reeking matter at $N!
mpget char self level 9
if not saves8($n) == $9
  mpechoat $n You feel sick.
  mpechoaround $n $N suddenly looks ill.
  mpaddaffect $n 105 $9 6 1 -2 4096
endif
~
>data_prog settings~
145
1212
10
50
60
25
2000
240
2
~
>speech_prog p ~
// Validate master and state
if not name($n) == $f
or value(2) == 0
  break
endif
// Check for spread rumor message
if value(2) == 9
  mpstring char self s9 $x
  mpcallsub do_spread_rumor_stated
  break
endif
// Validate familiar name in statement
if not compx() == $I
  break
endif
mpvalueset 7 0
// Handle commands with no obedience check
// Check for cancelling task
if compx() == nevermind
or compx() == belay
or compx() == retract
or compx() == cancel
or compx() == stop
  if value(2) > 1
    // Action cancel
    mpvalueset 2 1
    mpstring char self s9 echo_on_cancel
    mpcallsub do_echo $f
    break
  endif
endif
// Check for fleeing
if compx() == flee
or compx() == retreat
or compx() == run
  if isfighting($i)
    mpcallsub do_flee
    break
  endif
endif
// Check for becoming an object
if compx() == come
or compx() == approach
or compx() == nearer
or compx() == closer
  mpcallsub do_become_object
  break
endif
// Calculate obedience
mpcallsub do_calculate_obedience
if value(9) != 1
  // Disobeying; send the echo and bail out
  mpstring char self s9 echo_on_disobedience
  mpcallsub do_echo $f
  break
endif
// Familiar will obey command; dispatch appropriately
// Check for remembering a location
if compx() == remember
or compx() == memorize
  mpcallsub do_remember
  break
endif
// Check for fetching an object from remembered location
if compx() == fetch
or compx() == bring
or compx() == retrieve
  mpstring char self s9 $x
  mpcallsub do_fetch
  break
endif
// Check for depositing objects at the remembered location
if compx() == deposit
or compx() == stash
  mpcallsub do_deposit
  break
endif
// Check for establishing the familiar as a scout
if compx() == scout
or compx() == spy
or compx() == watch
  mpstring char self s9 $x
  mpcallsub do_scout
  break
endif
// Check for rumor triggers
if compx() == rumor
or compx() == gossip
or compx() == hearsay
  if compx() == spread
  or compx() == start
    mpcallsub do_spread_rumor
  else
    mpcallsub do_listen_rumor
  endif
  break
endif
// Check for safeguarding an item
if compx() == safeguard
or compx() == protect
or compx() == save
or compx() == salvage
  mpstring char self s9 $x
  mpcallsub do_safeguard_setup
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring char self s9 echo_on_unrecognized_command
  mpcallsub do_echo $f
endif
~
>sub_prog do_calculate_obedience~
// Establish the base value according to charisma and work level
mpget char $f chr 9
mpmath obey $9 - $0
// Modify according to health (-1 for every 10% hurt)
mpget char self hp 9
if value(9) <= 0
  mpvalueset healthPenalty 10
else
  mpget char self curhp 8
  mpmath healthPenalty 10 - (($8 * 10) / $9)
endif
mpmath obey %obey - %healthPenalty
// Validate against the obedience threshold
mpsetdata settings
mpnextdata 2
if value(obey) >= $d
  mpvalueset 9 1
else
  mpvalueset 9 0
endif
~
>fight_prog 100~
// Check whether fighting without master
if not ishere($f)
  flee
  break
endif
// Master is present, so call the specific fight routine
mpcallsub do_fight_special $n
~
>sub_prog do_safeguard_setup~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName obj char $f %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the object
  mpstring char self s9 echo_no_safeguard_object
  mpcallsub do_echo $f
  break
endif
// Object resolves, save it off
mpstring char self s2 %resolvedName
mpstring char self s9 echo_safeguard_object_ready
mpcallsub do_echo $f
~
>sub_prog do_listen_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
if value(4) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// This familiar does rumors, so start him off
mpstring char self s9 echo_on_rumor_listen_start
mpcallsub do_echo $f
emote wanders off in search of gossip.
mpvalueset 2 8
mpvalueup 0
mpgoto 200
~
>sub_prog do_spread_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 9 $d
if value(9) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// Check whether the spread cooldown is in effect
if value(6) > 0
  // Still in cooldown, send the echo
  mpstring char self s9 echo_on_spread_rumor_refused
  mpcallsub do_echo $f
  break
endif
// Prepare to hear rumor to spread
mpstring char self s9 echo_on_spread_rumor_waiting
mpcallsub do_echo $f
mpvalueset 2 9
~
>sub_prog do_spread_rumor_stated~
// Save off the rumor
mploadstring char self 9 rumorToSpread
mpstring char self s4 %rumorToSpread
// Begin the waiting period
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
// Move off to the waiting room
mpstring char self s9 echo_on_spread_rumor_start
mpcallsub do_echo $f
emote wanders off to spread the rumor.
mpvalueset 2 10
mpvalueup 0
mpgoto 200
~
>sub_prog do_scout~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName pc %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the PC
  mpstring char self s9 echo_no_pc_to_scout
  mpcallsub do_echo $f
  break
endif
// PC resolves; set up patience counter and room
mpsetdata settings
mpnextdata 4
mpvalueset 4 $d
mpgetroomvnum 5
mpvalueup 0
// Save off the PC
mpstring char self s3 %resolvedName
mpstring char self s9 echo_scouting_start
mpcallsub do_echo $f
mpvalueset 2 7
~
>sub_prog do_deposit~
// Check whether the familiar has anything to deposit
if carrycount($i) <= 0
  mpstring char self s9 echo_nothing_to_deposit
  mpcallsub do_echo $f
  break
endif
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 4
  mpvalueup 0
endif
~
>sub_prog do_fetch~
// Save off the requested string
mploadstring char self 9 fetchRequest
mpstring char self s1 %fetchRequest
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 2
  mpvalueup 0
endif
~
>sub_prog do_begin_walk~
// Initialize to failure
mpvalueset 9 0
// Check whether a room is remembered
if value(3) <= 0
  mpstring char self s9 echo_on_location_missing
  mpcallsub do_echo $f
  break
endif
// Check whether the room can be pathed
mpfindpath $3 -1 false
mpget char self pathsteps 8
if value(8) < 0
  // Cannot path to the room
  mpstring char self s9 echo_on_location_unpathable
  mpcallsub do_echo $f
  break
endif
// Path was found, echo success and begin walking
mpstring char self s9 echo_on_walk_begun
mpcallsub do_echo $f
mppathstep
mpvalueset 9 1
~
>sub_prog do_remember~
// Send the echo, then get the room vnum
mpstring char self s9 echo_on_location_remembered
mpcallsub do_echo $f
mpgetroomvnum 3
~
>sub_prog do_flee~
mpstring char self s9 echo_on_flee
mpcallsub do_echo $f
flee
flee
flee
mplag $f 1
~
>sub_prog do_become_object~
// Send the echo
drop all
mpstring char self s9 echo_on_become_object
mpcallsub do_echo $f
// Load the object
mpsetdata settings
mpoload $d on $f 24
// Initialize the object, passing short and level
mpstring char self s0 $I
mpget char self level 9
mpcopyvalues all char self obj familiar_obj
mpcallsub obj familiar_obj do_initialize
// Finished; lag the master and purge the mob
mplag $f 1
mppurge self
~
>sub_prog do_update_path~
// Check whether to update at all
mpsetdata settings
mpnextdata 3
if not rand($d)
  if value(2) != 7
    break
  endif
endif
// Check for lack of path
mpget char self pathsteps 9
if value(9) < 0
  // Path is needed, but there is none, so make a new one
  if value(2) == 2
  or value(2) == 4
    // Path to the remembered room
    mpfindpath $3 -1 false
  else
    if value(2) == 7
      // Path to the scout room
      mpfindpath $5 -1 false
    else
      // Path to the master
      mpfindpath $f -1 false
    endif
  endif
  mpget char self pathsteps 9
  if value(9) < 0
    // Still failed to find a path, so adjust states as needed
    if value(2) == 2
      mpvalueset 2 3
    endif
    if value(2) == 4
      mpvalueset 2 5
    endif
    break
  endif
endif
// Path is set up at this point, so follow it
mppathstep
~
>sub_prog do_check_deposit~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so drop everything and path back
drop all
mpvalueset 2 5
mpcallsub do_update_path
~
>sub_prog do_check_deposit_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, report and drop anything
mpvalueset 2 1
if carrycount($i) <= 0
  mpstring char self s9 echo_on_deposit_success
else
  mpstring char self s9 echo_on_deposit_failure
endif
mpcallsub do_echo $f
drop all
~
>sub_prog do_check_fetch~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so get the specified object and path back
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj room here %unresolvedObjName
get \@%resolvedObjName\@
mpvalueset 2 3
mpcallsub do_update_path
~
>sub_prog do_check_fetch_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master; hand over the item and report
mpvalueset 2 1
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj char $i %unresolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully retrieved item
  mpstring char self s9 echo_on_fetch_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to retrieve item
mpstring char self s9 echo_on_fetch_failure
mpcallsub do_echo $f
~
>sub_prog do_check_safeguard_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, hand over the item and report
mpvalueset 2 1
mploadstring char self 2 resolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully safeguarded item
  mpstring char self s9 echo_on_safeguard_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to safeguard item
mpstring char self s9 echo_on_safeguard_failure
mpcallsub do_echo $f
~
>sub_prog do_check_scout~
// Check whether PC is here
mploadstring char self 3 pcName
mpfocus %pcName 1
if not inarea($f1)
  // Did not find the target, adjust patience
  mpvaluedown 4
  if value(4) <= 0
    // Patience has run out, head back
    mpstring char self s9 echo_on_scouting_failure
    mpcallsub do_echo $f
    mpvalueset 2 1
    mpcallsub do_update_path
  endif
  break
endif
// Found the target, inform the master and head back
mpstring char self s9 echo_on_scouting_success
mpcallsub do_echo $f
mpvalueset 2 1
mpcallsub do_update_path
~
>sub_prog do_check_rumor_listen~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still listening
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Send the echo, and say the rumor
mpstring char self s9 echo_on_rumor_listen_end
mpcallsub do_echo $f
mprumor
~
>sub_prog do_check_idle~
// Adjust boredom
mpvalueup 7
mpsetdata settings
mpnextdata 7
if value(7) == $d
  // Send boredom echo
  mpstring char self s9 echo_on_bored
  mpcallsub do_echo $f
endif
// Give random echo
if rand(5)
  if rand(5)
    // Send random echo
    mpstring char self s9 echo_on_random
    mpcallsub do_echo $f
  endif
endif

// Track to master if not here
if not ishere($f)
  mpcallsub do_update_path
endif
~
>rand_prog 100~
mpvaluedown 6
// Check for unready state
if value(2) == 0
  mpcallsub do_init_special
  mpvalueset 2 1
endif
// Check for pathing states
if value(2) == 2
or value(2) == 3
or value(2) == 4
or value(2) == 5
or value(2) == 6
or value(2) == 7
  mpcallsub do_update_path
endif
// Dispatch according to state
if value(2) == 1
  mpcallsub do_check_idle
endif
if value(2) == 2
  mpcallsub do_check_fetch
endif
if value(2) == 3
  mpcallsub do_check_fetch_return
endif
if value(2) == 4
  mpcallsub do_check_deposit
endif
if value(2) == 5
  mpcallsub do_check_deposit_return
endif
if value(2) == 6
  mpcallsub do_check_safeguard_return
endif
if value(2) == 7
  mpcallsub do_check_scout
endif
if value(2) == 8
  mpcallsub do_check_rumor_listen
endif
if value(2) == 10
  mpcallsub do_check_rumor_spread
endif
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>sub_prog do_initialize~
// Establish the master
mpfocus $n
mpfollow self $f
// Add the effect for same-room bonus
mpsetdata settings
mpnextdata 1
mpget char $f id 8
mpaddaffect self $d $9 -1 0 $8 0
// Set up the short and name
mploadstring char self 0 familiarName
mpstring mob self short %familiarName
mpstring mob self name $i %familiarName
// Set up level, hp, ready state
mpset char self level $9
mpmath 9 100 + ($9 * 5)
mpset char self hp $9
mpset char self curhp $9
mpvalueset 2 0
mpvalueset 7 0
~
>give_prog all~
// Check for food
if not objtype() == 19
  break
endif
// Food given, check whether it is enjoyed
mpget char $f id 8
mpget obj $o vnum 9
mpmath foodseed $8 + $9
mpsetdata settings
mpnextdata 8
mpvaluerand 9 0 $d %foodseed
if value(9) != 0
  // Food is not desirable
  mpstring char self s9 echo_on_food_bad
  mpcallsub do_echo $f
  drop \@$o\@
  break
endif
// Food is desirable
mpstring char self s9 echo_on_food_good
mpcallsub do_echo $f
eat \@$o\@
mpvaluedown 0
~
>all_death_prog 100~
// Check for death of master
if not name($t) == $f
  break
endif
// Master died, attempt to loot the safeguard item
mploadstring char self 2 itemName
mploot $f %itemName
if iscarrying($i) == %itemName
  mpechoaround $f As $F falls, $I tugs something free of $S corpse.
endif
// Now chart a path back to the master, regardless of success
flee
flee
flee
mpvalueset 2 6
mpcallsub do_update_path
~
|
V4 56
cat black familiar mob_56~
a black cat~
A black cat pads along silently.
~
This small cat is covered in beautiful, if short, black fur.  Black slits
break the surface of its green eyes, widening as the cat\@s attention turns
to focus on the things around it.  The long dark tail is tipped with a small
patch of white, twitching back and forth at the creature\@s whim, the effect
slightly mesmerizing.  Moving with the grace endemic to its kind, this
feline stalks along in silence.  
~
cat~
water scholar~
AL F DJPSZ N 0
0 20 1d1+299 40d10+100 5d8+20 slash~
claw~
-15 -15 -15 -3
FH B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHVd ACDEFHJKQUV AK medium flesh
>sub_prog do_check_rumor_spread~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still spreading
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Set the cooldown
mpsetdata settings
mpnextdata 6
mpvalueset 6 $d
// Send the echo about complete, and spread the rumor
mpstring char self s9 echo_on_spread_rumor_end
mpcallsub do_echo $f
mploadstring char self 4 rumorToSpread
mpaddrumor \#$F\# %rumorToSpread
~
>sub_prog do_init_special~
~
>data_prog echo_on_food_good~
esay \@purrs\@ Adequate. Adequate.
~
>data_prog echo_on_food_bad~
esay \@asks\@ You expect me to serve you, and you give me this?
~
>data_prog echo_on_random~
emote arches $l back, stretching $l paws with a luxurious yawn.
emote kneads the ground with $l claws.
pmote twists $kself about $F\@s legs, ready to be petted.
emote purrs contentedly.
emote suddenly turns $l head, ears perked, as if hearing something in the distance.
~
>data_prog echo_on_bored~
emote yawns deeply, then begins preening $kself.
~
>data_prog echo_on_cancel~
esay \@yawns\@ Oh, really. If you insist.
~
>data_prog echo_on_spread_rumor_end~
esay \@says with a self-satisfied air\@ They\@ll be talking about that from Krilin to Kor Thrandir.
~
>data_prog echo_on_spread_rumor_start~
mpecho In acknowledgement, $I gives the faintest flick of $l tail.
~
>data_prog echo_on_spread_rumor_waiting~
say If I must. Then pray tell, which of your petty lies shall I spread?
esay Fine then. But tell me what you want me to gossip about, or I\@ll have to invent something about you instead.
say My, my, lies and tricks, gossip and rumor. What shall it be, then?
~
>data_prog echo_on_spread_rumor_refused~
say I\@d rather take a nap. I work best well-rested.
~
>data_prog echo_on_rumors_unsupported~
esay \@says with a feline sneer\@ How petty. And beneath me.
~
>data_prog echo_on_rumor_listen_end~
esay \@says\@ The juiciest bits, I\@ll keep for myself. But I will tell you this:
~
>data_prog echo_on_rumor_listen_start~
say I suppose I can do that much, since my hearing is better than yours.My hearing is better than yours anyway.
esay \@stretches and replies\@ If I must. My hearing is better than yours anyway.
~
>data_prog echo_on_scouting_failure~
tell $N I didn\@t find them. A waste of time.
~
>data_prog echo_on_scouting_success~
tell $N I found them. Ready to pounce?
~
>data_prog echo_scouting_start~
emote pads in a circle, silently poised for the hunt.
~
>data_prog echo_no_pc_to_scout~
esay \@says, both ears perking\@ Who?
~
>data_prog echo_on_safeguard_failure~
esay \@says with a flick of $l tail\@ That plan to deliver the item? Doomed to failure from the start.
~
>data_prog echo_on_safeguard_success~
esay \@says haughtily\@ There. I did it. Happy now?
~
>data_prog echo_safeguard_object_ready~
esay \@says reluctantly\@ I suppose I could do that, if I must.
~
>data_prog echo_no_safeguard_object~
esay \@says in a slightly exasperated tone\@ I really don\@t know what thing you\@re talking about.
~
>data_prog echo_on_deposit_success~
esay \@says haughtily\@ Done. But next time give me something more worthwhile to do.
~
>data_prog echo_on_deposit_failure~
esay \@flicks $l tail haughtily and says\@ That didn\@t work out. And it\@s not my fault.
~
>data_prog echo_nothing_to_deposit~
esay \@says in an annoyed tone\@ An absolute waste of time, delivering nothing.
~
>data_prog echo_on_fetch_failure~
pmote shakes $l head, murmuring about wasted time.
~
>data_prog echo_on_fetch_success~
esay \@says\@ Take it, then.
~
>data_prog echo_on_walk_begun~
esay \@twitches $l whiskers\@ I shall do so, but know this is beneath me.
~
>data_prog echo_on_location_unpathable~
esay \@says in a low purr\@ I can\@t there now. Maybe later.
~
>data_prog echo_on_location_missing~
esay \@replies haughtily\@ We\@ve not marked a place for that.
~
>data_prog echo_on_location_remembered~
pmote draws $kself back into a drawn-out stretch, and briefly kneads at the floor with $l claws.
~
>data_prog echo_on_unrecognized_command~
pmote glances up at $N, then begins to lick $l fur fastidiously.
pmote twitches an ear.
pmote twitches $l tail back and forth, then glances up at $N.
~
>data_prog echo_on_disobedience~
pmote pointedly refuses to look at $N.
pmote growls deep in $l throat.
~
>data_prog echo_on_flee~
pmote draws back, attempting a dignified retreat.
~
>data_prog echo_on_become_object~
pmote pads over to $N and brushes $kself against $N\@s leg.
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring char self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget char self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
speak arcane
$d
~
>sub_prog do_fight_special~
// Do nothing most of the time
if not rand(6)
  break
endif
if isflying($n)
  // Pounce
  mpaddskill self 885 100
  pounce
  mpremoveskill self 885
else
  // Trip
  mpaddskill self 186 100
  mpechoat $n $I darts through your legs, trying to trip you!
  mpechoaround $n $I darts through $N\@s legs, trying to trip $m!
  trip
  mpremoveskill self 186
endif
~
>data_prog settings~
149
1211
12
70
20
10
800
120
6
~
>speech_prog p ~
// Validate master and state
if not name($n) == $f
or value(2) == 0
  break
endif
// Check for spread rumor message
if value(2) == 9
  mpstring char self s9 $x
  mpcallsub do_spread_rumor_stated
  break
endif
// Validate familiar name in statement
if not compx() == $I
  break
endif
mpvalueset 7 0
// Handle commands with no obedience check
// Check for cancelling task
if compx() == nevermind
or compx() == belay
or compx() == retract
or compx() == cancel
or compx() == stop
  if value(2) > 1
    // Action cancel
    mpvalueset 2 1
    mpstring char self s9 echo_on_cancel
    mpcallsub do_echo $f
    break
  endif
endif
// Check for fleeing
if compx() == flee
or compx() == retreat
or compx() == run
  if isfighting($i)
    mpcallsub do_flee
    break
  endif
endif
// Check for becoming an object
if compx() == come
or compx() == approach
or compx() == nearer
or compx() == closer
  mpcallsub do_become_object
  break
endif
// Calculate obedience
mpcallsub do_calculate_obedience
if value(9) != 1
  // Disobeying; send the echo and bail out
  mpstring char self s9 echo_on_disobedience
  mpcallsub do_echo $f
  break
endif
// Familiar will obey command; dispatch appropriately
// Check for remembering a location
if compx() == remember
or compx() == memorize
  mpcallsub do_remember
  break
endif
// Check for fetching an object from remembered location
if compx() == fetch
or compx() == bring
or compx() == retrieve
  mpstring char self s9 $x
  mpcallsub do_fetch
  break
endif
// Check for depositing objects at the remembered location
if compx() == deposit
or compx() == stash
  mpcallsub do_deposit
  break
endif
// Check for establishing the familiar as a scout
if compx() == scout
or compx() == spy
or compx() == watch
  mpstring char self s9 $x
  mpcallsub do_scout
  break
endif
// Check for rumor triggers
if compx() == rumor
or compx() == gossip
or compx() == hearsay
  if compx() == spread
  or compx() == start
    mpcallsub do_spread_rumor
  else
    mpcallsub do_listen_rumor
  endif
  break
endif
// Check for safeguarding an item
if compx() == safeguard
or compx() == protect
or compx() == save
or compx() == salvage
  mpstring char self s9 $x
  mpcallsub do_safeguard_setup
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring char self s9 echo_on_unrecognized_command
  mpcallsub do_echo $f
endif
~
>sub_prog do_calculate_obedience~
// Establish the base value according to charisma and work level
mpget char $f chr 9
mpmath obey $9 - $0
// Modify according to health (-1 for every 10% hurt)
mpget char self hp 9
if value(9) <= 0
  mpvalueset healthPenalty 10
else
  mpget char self curhp 8
  mpmath healthPenalty 10 - (($8 * 10) / $9)
endif
mpmath obey %obey - %healthPenalty
// Validate against the obedience threshold
mpsetdata settings
mpnextdata 2
if value(obey) >= $d
  mpvalueset 9 1
else
  mpvalueset 9 0
endif
~
>fight_prog 100~
// Check whether fighting without master
if not ishere($f)
  flee
  break
endif
// Master is present, so call the specific fight routine
mpcallsub do_fight_special $n
~
>sub_prog do_safeguard_setup~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName obj char $f %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the object
  mpstring char self s9 echo_no_safeguard_object
  mpcallsub do_echo $f
  break
endif
// Object resolves, save it off
mpstring char self s2 %resolvedName
mpstring char self s9 echo_safeguard_object_ready
mpcallsub do_echo $f
~
>sub_prog do_listen_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
if value(4) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// This familiar does rumors, so start him off
mpstring char self s9 echo_on_rumor_listen_start
mpcallsub do_echo $f
emote wanders off in search of gossip.
mpvalueset 2 8
mpvalueup 0
mpgoto 200
~
>sub_prog do_spread_rumor~
// Check whether the familiar supports this
mpsetdata settings
mpnextdata 5
mpvalueset 9 $d
if value(9) == 0
  // This familiar does not do rumors
  mpstring char self s9 echo_on_rumors_unsupported
  mpcallsub do_echo $f
endif
// Check whether the spread cooldown is in effect
if value(6) > 0
  // Still in cooldown, send the echo
  mpstring char self s9 echo_on_spread_rumor_refused
  mpcallsub do_echo $f
  break
endif
// Prepare to hear rumor to spread
mpstring char self s9 echo_on_spread_rumor_waiting
mpcallsub do_echo $f
mpvalueset 2 9
~
>sub_prog do_spread_rumor_stated~
// Save off the rumor
mploadstring char self 9 rumorToSpread
mpstring char self s4 %rumorToSpread
// Begin the waiting period
mpsetdata settings
mpnextdata 5
mpvalueset 4 $d
// Move off to the waiting room
mpstring char self s9 echo_on_spread_rumor_start
mpcallsub do_echo $f
emote wanders off to spread the rumor.
mpvalueset 2 10
mpvalueup 0
mpgoto 200
~
>sub_prog do_scout~
// Resolve and validate the string
mploadstring char self 9 unresolvedName
mpresolve resolvedName pc %unresolvedName
mpstrlen 9 %resolvedName
if value(9) <= 1
  // Failed to resolve the PC
  mpstring char self s9 echo_no_pc_to_scout
  mpcallsub do_echo $f
  break
endif
// PC resolves; set up patience counter and room
mpsetdata settings
mpnextdata 4
mpvalueset 4 $d
mpgetroomvnum 5
mpvalueup 0
// Save off the PC
mpstring char self s3 %resolvedName
mpstring char self s9 echo_scouting_start
mpcallsub do_echo $f
mpvalueset 2 7
~
>sub_prog do_deposit~
// Check whether the familiar has anything to deposit
if carrycount($i) <= 0
  mpstring char self s9 echo_nothing_to_deposit
  mpcallsub do_echo $f
  break
endif
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 4
  mpvalueup 0
endif
~
>sub_prog do_fetch~
// Save off the requested string
mploadstring char self 9 fetchRequest
mpstring char self s1 %fetchRequest
// Attempt to begin walk
mpcallsub do_begin_walk
if value(9) == 1
  mpvalueset 2 2
  mpvalueup 0
endif
~
>sub_prog do_begin_walk~
// Initialize to failure
mpvalueset 9 0
// Check whether a room is remembered
if value(3) <= 0
  mpstring char self s9 echo_on_location_missing
  mpcallsub do_echo $f
  break
endif
// Check whether the room can be pathed
mpfindpath $3 -1 false
mpget char self pathsteps 8
if value(8) < 0
  // Cannot path to the room
  mpstring char self s9 echo_on_location_unpathable
  mpcallsub do_echo $f
  break
endif
// Path was found, echo success and begin walking
mpstring char self s9 echo_on_walk_begun
mpcallsub do_echo $f
mppathstep
mpvalueset 9 1
~
>sub_prog do_remember~
// Send the echo, then get the room vnum
mpstring char self s9 echo_on_location_remembered
mpcallsub do_echo $f
mpgetroomvnum 3
~
>sub_prog do_flee~
mpstring char self s9 echo_on_flee
mpcallsub do_echo $f
flee
flee
flee
mplag $f 1
~
>sub_prog do_become_object~
// Send the echo
drop all
mpstring char self s9 echo_on_become_object
mpcallsub do_echo $f
// Load the object
mpsetdata settings
mpoload $d on $f 24
// Initialize the object, passing short and level
mpstring char self s0 $I
mpget char self level 9
mpcopyvalues all char self obj familiar_obj
mpcallsub obj familiar_obj do_initialize
// Finished; lag the master and purge the mob
mplag $f 1
mppurge self
~
>sub_prog do_update_path~
// Check whether to update at all
mpsetdata settings
mpnextdata 3
if not rand($d)
  if value(2) != 7
    break
  endif
endif
// Check for lack of path
mpget char self pathsteps 9
if value(9) < 0
  // Path is needed, but there is none, so make a new one
  if value(2) == 2
  or value(2) == 4
    // Path to the remembered room
    mpfindpath $3 -1 false
  else
    if value(2) == 7
      // Path to the scout room
      mpfindpath $5 -1 false
    else
      // Path to the master
      mpfindpath $f -1 false
    endif
  endif
  mpget char self pathsteps 9
  if value(9) < 0
    // Still failed to find a path, so adjust states as needed
    if value(2) == 2
      mpvalueset 2 3
    endif
    if value(2) == 4
      mpvalueset 2 5
    endif
    break
  endif
endif
// Path is set up at this point, so follow it
mppathstep
~
>sub_prog do_check_deposit~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so drop everything and path back
drop all
mpvalueset 2 5
mpcallsub do_update_path
~
>sub_prog do_check_deposit_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, report and drop anything
mpvalueset 2 1
if carrycount($i) <= 0
  mpstring char self s9 echo_on_deposit_success
else
  mpstring char self s9 echo_on_deposit_failure
endif
mpcallsub do_echo $f
drop all
~
>sub_prog do_check_fetch~
// Check whether in the target room
if inroom($i) != $3
  break
endif
// In the target room, so get the specified object and path back
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj room here %unresolvedObjName
get \@%resolvedObjName\@
mpvalueset 2 3
mpcallsub do_update_path
~
>sub_prog do_check_fetch_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master; hand over the item and report
mpvalueset 2 1
mploadstring char self 1 unresolvedObjName
mpresolve resolvedObjName obj char $i %unresolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully retrieved item
  mpstring char self s9 echo_on_fetch_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to retrieve item
mpstring char self s9 echo_on_fetch_failure
mpcallsub do_echo $f
~
>sub_prog do_check_safeguard_return~
// Check whether back with the master
if not ishere($f)
  break
endif
// Back with the master, hand over the item and report
mpvalueset 2 1
mploadstring char self 2 resolvedObjName
if iscarrying($i) == %resolvedObjName
  // Successfully safeguarded item
  mpstring char self s9 echo_on_safeguard_success
  mpcallsub do_echo $f
  give \@%resolvedObjName\@ $f
  drop all
  break
endif
// Failed to safeguard item
mpstring char self s9 echo_on_safeguard_failure
mpcallsub do_echo $f
~
>sub_prog do_check_scout~
// Check whether PC is here
mploadstring char self 3 pcName
mpfocus %pcName 1
if not inarea($f1)
  // Did not find the target, adjust patience
  mpvaluedown 4
  if value(4) <= 0
    // Patience has run out, head back
    mpstring char self s9 echo_on_scouting_failure
    mpcallsub do_echo $f
    mpvalueset 2 1
    mpcallsub do_update_path
  endif
  break
endif
// Found the target, inform the master and head back
mpstring char self s9 echo_on_scouting_success
mpcallsub do_echo $f
mpvalueset 2 1
mpcallsub do_update_path
~
>sub_prog do_check_rumor_listen~
// Check the rumor timer
mpvaluedown 4
if value(4) > 0
  // Still listening
  break
endif
// Time completed, return to master
mpvalueset 2 1
mpgoto $f
pmote wanders in, looking for $F.
// Send the echo, and say the rumor
mpstring char self s9 echo_on_rumor_listen_end
mpcallsub do_echo $f
mprumor
~
>sub_prog do_check_idle~
// Adjust boredom
mpvalueup 7
mpsetdata settings
mpnextdata 7
if value(7) == $d
  // Send boredom echo
  mpstring char self s9 echo_on_bored
  mpcallsub do_echo $f
endif
// Give random echo
if rand(5)
  if rand(5)
    // Send random echo
    mpstring char self s9 echo_on_random
    mpcallsub do_echo $f
  endif
endif

// Track to master if not here
if not ishere($f)
  mpcallsub do_update_path
endif
~
>rand_prog 100~
mpvaluedown 6
// Check for unready state
if value(2) == 0
  mpcallsub do_init_special
  mpvalueset 2 1
endif
// Check for pathing states
if value(2) == 2
or value(2) == 3
or value(2) == 4
or value(2) == 5
or value(2) == 6
or value(2) == 7
  mpcallsub do_update_path
endif
// Dispatch according to state
if value(2) == 1
  mpcallsub do_check_idle
endif
if value(2) == 2
  mpcallsub do_check_fetch
endif
if value(2) == 3
  mpcallsub do_check_fetch_return
endif
if value(2) == 4
  mpcallsub do_check_deposit
endif
if value(2) == 5
  mpcallsub do_check_deposit_return
endif
if value(2) == 6
  mpcallsub do_check_safeguard_return
endif
if value(2) == 7
  mpcallsub do_check_scout
endif
if value(2) == 8
  mpcallsub do_check_rumor_listen
endif
if value(2) == 10
  mpcallsub do_check_rumor_spread
endif
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>sub_prog do_initialize~
// Establish the master
mpfocus $n
mpfollow self $f
// Add the effect for same-room bonus
mpsetdata settings
mpnextdata 1
mpget char $f id 8
mpaddaffect self $d $9 -1 0 $8 0
// Set up the short and name
mploadstring char self 0 familiarName
mpstring mob self short %familiarName
mpstring mob self name $i %familiarName
// Set up level, hp, ready state
mpset char self level $9
mpmath 9 100 + ($9 * 5)
mpset char self hp $9
mpset char self curhp $9
mpvalueset 2 0
mpvalueset 7 0
~
>give_prog all~
// Check for food
if not objtype() == 19
  break
endif
// Food given, check whether it is enjoyed
mpget char $f id 8
mpget obj $o vnum 9
mpmath foodseed $8 + $9
mpsetdata settings
mpnextdata 8
mpvaluerand 9 0 $d %foodseed
if value(9) != 0
  // Food is not desirable
  mpstring char self s9 echo_on_food_bad
  mpcallsub do_echo $f
  drop \@$o\@
  break
endif
// Food is desirable
mpstring char self s9 echo_on_food_good
mpcallsub do_echo $f
eat \@$o\@
mpvaluedown 0
~
>all_death_prog 100~
// Check for death of master
if not name($t) == $f
  break
endif
// Master died, attempt to loot the safeguard item
mploadstring char self 2 itemName
mploot $f %itemName
if iscarrying($i) == %itemName
  mpechoaround $f As $F falls, $I tugs something free of $S corpse.
endif
// Now chart a path back to the master, regardless of success
flee
flee
flee
mpvalueset 2 6
mpcallsub do_update_path
~
|
V4 57
unused oldfamiliar~
unused oldfamiliar~
A huge brown rat scurries along.
~
A plump brown rat scurries along here, its tail squirming as it makes its
way about.  Its beady black eyes possess a certain malevolence, flitting
back and forth over everything around it.  
~
cat~
water scholar~
Ae 0 SZ N 0
0 0 1d1+139 0d0+0 1d4+4 none~
hit~
-10 -10 -10 -10
FH A
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ACDEFHJKQUV A medium unknown
>verb_prog testthis~
mpmload 52
~
>speech_prog p Dularz~
mpaddaffect $n 109 99 6 0 0 16384
mpechoat $n A dull black aura surrounds the rat, then slowly spreads to you.
mpechoaround $n A dull black aura surrounds the rat, then slowly spreads to $N.
~
>fight_prog 4~
mpechoat $n The brown rat darts forward suddenly, nipping at your flesh!
mpechoaround $n The brown rat darts forward suddenly, nipping at $N\@s flesh!
mpcast 104 99
~
|
V4 58
unusued oldfamiliar~
unused oldfamiliar~
A tiny demon familiar darts about.
~
The demon is part minature human, and part miniature terror.  Its body is
roughly biped, but small leathery wings give it flight, and yellowed fangs
give it bite.  Darkness seems to follow its path through the air.  
~
demon~
water scholar~
Ae 0 SZ N 0
0 0 1d1+299 0d0+0 2d8+8 none~
hit~
-15 -15 -15 -15
FH AB
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACGHMV ABCDEFGHIJKPQUV A medium unknown
>speech_prog p Loram~
if ismaster($n)
cast \@cure light\@ $n
mplag $n 4
endif
~
|
V4 59
unusued oldfamiliar~
unused oldfamiliar~
A small mass of tentacles darts about the ground.
~
A small mass of glistening black tentacles, the ilamorph darts about in a
seemingly random fashion.  
~
demon~
water scholar~
Ae 0 JSZ N 0
0 0 1d1+499 0d0+0 3d8+5 none~
hit~
-8 -8 -8 -8
0 AB
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMV ABCDEFGHIJKP A medium unknown
>speech_prog p Orbulg~
if ismaster($n)
mpcast 52 99
endif
~
|
V4 60
abishai lesser black demon~
a black-winged abishai~
A black-winged abishai leers around at its environs.
~
A black-winged abishai leers around the room here.  Its dog-like face and
snapping jaws offset a leathery skinned body, and its long tail terminates
in a sharp barb.  Trapped by its lust for material things into service, the
abishai has been ripped from the void to serve its master.  
~
demon~
water scholar~
ABEX B DS E 0
0 0 14d170+850 0d0+0 5d8+20 none~
hit~
-15 -15 -15 -2
0 AB
26 0 0 0 0 0 0 0 0 0 0 0 0 0 -33 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>speech_prog p Gharush~
if ismaster($n)
cast \@fly\@ $n
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
 
~
>rand_prog 2~
emote concentrates, trying to sunder the controls that keep it bound.
~
>rand_prog 2~
emote struggles against its mystical bonds.
~
>bribe_prog 4000~
mpabishai
~
>demon_prog 100~
mpabishai
~
|
V4 61
demon lesser clawed orzub~
a clawed Orzub~
A clawed Orzub slinks along here.
~
Vaguely humanoid in its shape, the Orzub leans forward aggressively upon
its powerful, crouched legs.  Sleek, grey skin is drawn tightly about sinewy
muscles, allowing one to see the heavings of the demon\@s protruding rib
cage.  On either side, long, stick-like arms extend outwards, each one
ending in a razor-sharp, bony sickle that seems to have ripped its way out
from its fleshy cage.  Extending forward from the demon\@s face is a gaping,
canine jaw, lined with a double-layer of smashed, jagged incisors.  Bounding
forward with each step, the Orzub\@s claws seem to whistle through the air
with ominous speed.  
~
demon~
water scholar~
AEX B DS E 0
40 25 11d80+804 0d0+0 5d10+25 none~
hit~
-12 -12 -3 0
0 AB
26 0 0 0 0 0 0 0 0 0 0 0 0 0 -33 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>give_prog tail bodypart~
mporzub
~
>give_prog brain brains bodypart~
mporzub
~
>give_prog guts entrails bodypart~
mporzub
~
>give_prog leg bodypart~
mporzub
~
>give_prog arm bodypart~
mporzub
~
>give_prog head bodypart~
mporzub
~
>give_prog heart bodypart~
mporzub
~
>demon_prog 100~
mporzub
~
|
V4 62
gharku heavy black demon lesser~
a heavy black gharku~
A black gharku pounds along.
~
A powerfully built demon, the gharku stands enshrined in dense, spined
plates of midnight black chitin.  Thick, plated arms - replete with bony
serrations - hang by the gharku\@s side, ending in massive, black pincers,
capable of snapping a man in half.  The gharku\@s hulking weight rests upon
short, squat legs, each one bent ever so slightly at the joint.  The legs
extend onward into bony, clawed feet.  

A seemingly human skull, wrapped tightly in grey, decaying skin, rests atop
a stick of a neck, protruding only slightly forward from its hulking torso. 
Its jaw is set into a permanent grin, jagged and broken teeth, thrusting
forth from shriveled lips.  Bloodshot eyestalks erupt from the gharku\@s
empty sockets, endlessly swinging about in search of prey.  
~
demon~
water scholar~
AEX B DS E 0
40 15 20d200+1056 0d0+0 5d6+15 none~
hit~
-20 -20 -20 -20
0 AB
26 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>give_prog all~
mpgharku
~
>demon_prog 100~
mpgharku
~
|
V4 63
skunk bushy tailed bushy-tailed black mob_63~
a bushy-tailed skunk~
A black skunk waddles along, twin white stripes running along its body.
~
This small skunk is roughly two and a half feet in length, including its
bushy tail.  Its glossy black fur is long and thick, striped in a white \@V\@
which starts at the head and splits to run along its flanks.  Small black
eyes, bright and alert, glance about in its triangular head.  Short legs are
tipped with somewhat dull, curving claws.  
~
cat~
water scholar~
ALN 0 VZ N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
scratch~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ABCDEFHJKQUV 0 medium unknown
V4 70
chagrob Vizier Logor Demon Greater~
Chagrob~
Chagrob, Advisor to the Grand Vizier of Logor, floats here admidst a cloud of darkness.
~
Chagrob, Grand Vizier of the demon city of Logor, floats in a cloud of
pure darkness.  His indescribable form hidden by a thick veil of blackness,
only a pair of red eyes indicates his tangible presence amidst the darkness.
~
demon~
water scholar~
ABELTX B DFJSZ E 0
0 27 20d220+1100 0d0+0 5d10+25 none~
hit~
-25 -25 -25 -25
FHK B
26 0 0 0 75 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>give_prog stone power crystal large faceted stoneofpower~
mpchagrob
~
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>demon_prog 100~
mpchagrob
~
>give_prog stone power crystal large faceted~
mpchagrob
~
>demon_prog 100~
mpchagrob
~
>fight_prog 5~
say Sharbat Gurum Shaga Ogol!
mpechoat $n Chargrob gazes at you, his dark essence insinuating its way into your being!
mpechoaround $n Chargrob gazes at $N, his dark cloud wrapping itself about $N\@s form.
mpcast 107 57
mpcast 104 57
mpcast 143 57
~
|
V4 71
Isetaton Demon Greater Sultan~
Isetaton~
Isetaton the Demon Sultan floats languidly about the room.
~
On first glance, Isetaton\@s form appears to be roughly humanoid - but
closer examination yields a form in large part, if not wholely, alien to
this plane of existence.  Small worm-like tentacles dot his body, grey worms
covered with sucker-like protuberances.  Breaking the integrity of his
flesh, jaws both large and small clatter noisily as Isetaton floats about
the room.  Thin eyestalks which sprout from around his neck scan all
directions about Isetaton, while the eyes set in the center of his face are
little more than blackened orbs.  
~
demon~
water scholar~
ABELTX B DFJSZ E 0
57 27 20d220+1100 0d0+0 5d15+35 bash~
suction~
-25 -25 -25 -20
EFHK BM
26 0 0 20 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>give_prog all~
mpisetaton
~
>demon_prog 100~
mpisetaton
~
>fight_prog 5~
mpecho Isetaton\@s tentacles writhe and twist as his sightless eyes gaze about.
mpcast 52 57
~
|
V4 72
Pricina Queen Succubi Demon Greater~
Pricina~
Pricina wraps herself in her silken hair, red curls framing a flawless body.
~
Draping herself in her long red hair, dusky Pricina stands ungarbed and
seemingly vulnerable.  As she moves about, she seems to take a sort of
perverse delight in the simplest of sensations, her hands caressing
everything that comes within reach.  Stunning in her beauty, the only flaw
in her pale features are her eyes, which are marked with pupils which open
in sharp cat-like slits.  
~
demon~
water scholar~
ABELTX B DFJSZ E 0
57 27 20d220+1100 0d0+0 5d15+30 none~
hit~
-26 -26 -26 -20
FHK B
26 0 0 33 33 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand female 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>give_prog all~
mppricina
~
>demon_prog 100~
mppricina
~
>fight_prog 5~
say A taste of what awaits those who deny me, mortal!
emote makes a small twisting gesture with her hand.
mpcast 306 57
~
>fight_prog 5~
~
|
V4 73
Barkja Sage Abyss greater demon~
Barkja~
Barkja the Infernal Sage peers about the room.
~
Clad in robes of exotic silk, Barkja the Infernal Sage peers about the
room, examining meticulously every detail of the room.  Small pouches and
reagants cover his stick like frame, testament to his abilities as a
magician.  A reknowned scholar even among the denizens of the void, he is
said to have once been Xthjich\@s personal advisor before his defeat at the
hands of the Titans.  
~
demon~
water scholar~
ABELTX B DFJSZ N 0
57 0 20d220+1100 0d0+0 5d10+15 none~
hit~
0 0 0 0
FHK B
26 0 0 20 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>fight_prog 6~
emote gestures contemptuously at $N.
mpforce $n say My soul and my heart for Barkja!
~
>fight_prog 6~
mpcast 107 53
~
>fight_prog 6~
mpcast 306 57
~
>fight_prog 7~
mpcast 52 60
~
>speech_prog dozens~
mpbarkjayes $n 19
~
>speech_prog coffin~
mpbarkjayes $n 18
~
>speech_prog rope~
mpbarkjayes $n 17
~
>speech_prog p flower~
mpbarkjayes $n 16
~
>speech_prog candle~
mpbarkjayes $n 15
~
>speech_prog p mountain~
mpbarkjayes $n 14 
~
>speech_prog darkness~
mpbarkjayes $n 13
~
>speech_prog water~
mpbarkjayes $n 12
~
>speech_prog shoe~
mpbarkjayes $n 11
~
>speech_prog ring~
mpbarkjayes $n 9
~
>speech_prog coin~
mpbarkjayes $n 8
~
>speech_prog eye~
mpbarkjayes $n 7
~
>speech_prog ocean~
mpbarkjayes $n 6
~
>speech_prog shadow~
mpbarkjayes $n 5
~
>speech_prog thunder~
mpbarkjayes $n 4
~
>speech_prog tree~
mpbarkjayes $n 3
~
>speech_prog smoke~
mpbarkjayes $n 2
~
>speech_prog cherry~
mpbarkjayes $n 1
~
>speech_prog e~
mpbarkjayes $n 10
~
>speech_prog p ~
mpbarkjayes $n 99
~
>demon_prog 100~
mpbarkjaset
if demonstate($i)==1
say Squeeze it and it cries tears as red as its flesh, but its heart is made of
say stone. 
else
if demonstate($i)==2
say I am the black child of a white father, a wingless bird, flying even to
say the clouds of heaven. I give birth to tears of mourning in pupils that
say meet me, even though there is no cause for grief, and at once on my
say birth I am dissolved into air. 
else
if demonstate($i)==3
say I am both Mother and Father. 
say I am seldom still 
say yet I never wander. 
say I never birth nor nurse. 
else
if demonstate($i)==4
say Born Motherless and Fatherless, 
say Into this world without a sin 
say Made a load roar as I entered 
say And never spoke again. 
else
if demonstate($i)==5
say There is a thing that nothing is, 
say and yet it has a name. 
say It\@s sometimes tall and sometimes short, 
say joins our talks and joins our sports, 
say and plays at every game? 
else
if demonstate($i)==6
say Through wind and rain I always play, 
say I roam the earth, yet here I stay
say I crumble stones, and fire cannot burn me
say Yet I am soft- you can gauge me with your hand. 
else
if demonstate($i)==7
say Pronounced as one letter, 
say And written with three, 
say Two letters there are, 
say And two only in me. 
say Im double, Im single, 
say Im black blue and grey, 
say Im read from both ends, 
say And the same either way. 
else
if demonstate($i)==8
say I know a thousand faces, 
say and count the tailed heads, 
say feasting bright upon the eyes, 
say of many who have died. 
say wielding well a mighty power, 
say who hath but humble stature. 
say Masses fall upon their knees, 
say to scare behold my only side! 
else
if demonstate($i)==9
say It has no top or bottom but it can hold flesh, bones and blood all at
say the same time. What is this object? 
else
if demonstate($i)==10
say \#The beginning of eternity
say The end of time and space
say The beginning of every end,
say And the end of every place.\#
else
if demonstate($i)==11
say Runs over fields and woods all day
say Under the bed at night sits not alone,
say With long tongue hanging out,
say A-waiting for a bone.
else
if demonstate($i)==12
say It goes where it wills and seeks many places but when it\@s gone it leaves
say few traces.
else
if demonstate($i)==13
say It can\@t be seen, It can\@t be felt, It can\@t be heard, It can\@t be smelt. It 
say lies behind stars, and under hills, and in empty holes it fills. It comes
say first and follows after, Ends life and kills laughter. What is \#it\#?
else
if demonstate($i)==14
say What has roots as nobody sees, Is taller than trees, Up, up it goes, And
say yet never grows?
else
if demonstate($i)==15
say The longer I stand, the shorter I
say grow...What am I?
else
if demonstate($i)==16
say My green body always bare, Any colour my wavy hair, In the ground I
say lay my toes, On my body I wear lots of bows.
else
if demonstate($i)==17
say What\@s longer than ten people but smaller than one, ten warriors cant kill it
say but one can beat it?
else
if demonstate($i)==18
say One man built it but didn\@t want it. One man bought it but didn\@t want it.
say And one man used it but didn\@t know it. What is it?
else
if demonstate($i)==19
say A word I know, 
say Six letters it contains, 
say Subtract just one, 
say And twelve is what remains.
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
~
|
V4 74
Agduk huntsman greater demon~
Agduk~
Agduk the Scion of Xthjich gazes imperiously about the room.
~
Birthed of Xthjich and the Succubi Queen Pricina, Agduk is one of the
thirteen Scions of Xthjich.  His body framed in a chitinous exoskeleton, he
gazes about the room with cat-like eyes looking for his next target.  A
huntsman among demons, his revels in the pleasures of the chase are the
subject of many a whispered tale in the mortal realms.  
~
demon~
water scholar~
ABELTX B DFJSZ E 0
0 0 20d220+1100 0d0+0 5d15+30 none~
hit~
0 0 0 0
CFHK B
26 0 0 50 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 4~
if rand(2)
stand
mprevolt
endif
~
>rand_prog 3~
if rand(5)
stand
mpescape
endif
~
>give_prog all~
mpagduk
~
>demon_prog 100~
mpagduk
~
|
V4 75
Khamurn Magistrate Void Demon~
Khamurn~
Khamurn strides regally about.
~
Khamurn, the Magistrate of the Void and one of the Thirteen Demon Lords
of the Void stands before you.  Appearing as a reptilian humaniod twelve
feet in height and clad in vestments of rich purple silk, the Magistrate
radiates an aura of chilling majesty.  In the light his scales glitter like
emeralds and his razored teeth sparkle like diamonds.  His ruby-like eyes
smoulder with a hateful avarice, beholding all treasures not yet His.  
~
demon~
water scholar~
ABPX B CDFJZc N 0
60 60 1d1+7999 1d1+6000 5d15+30 slash~
claw~
-40 -40 -40 -40
AEFHK ABLMQRb
26 0 0 40 60 20 0 20 20 -5 0 0 0 0 -5 0 60 0 0 -5 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 100 55
ACHMV ABCDEFGHIJKP AGHK large unknown
>speech_prog letsfucksomeshitup~
say Gonna step on some fucka\@s neck!
mpoload 8860
wear sigil
mpoload 7741
wear crown
~
>death_prog 100~
esay \@bellows as his corporeal form shatters\@ I am Avarice! You can no more slay me than you can kill the greed in the hearts of men!
yell I shall return!
emote falls silent, his body crumbling to glittering dust.
mppurge self
break
~
|
V4 76
no name~
(no short description)~
(no long description)
~
~
human~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 77
sentry watchersentry~
a sentry~
A keen-eyed sentry scans the area.
~
Dressed in the gray armor of the watchers, this sentry keenly scans his
surroundings.  
~
human~
water scholar~
ADL 0 DF N 0
0 0 10d20+50 0d0+0 0d0+0 none~
hit~
0 0 0 0
FK 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 -1
AHMV ABCDEFGHIJK A medium unknown
>trigger_prog 100~
mpvalueset cond
mpvalueset tire
mpvalueset mark
mpvalueset fly passed
mpvalueset bleed
if mobvalue(2) == 1
  if value(6) < 15
    mpvalueset cond $F1 is in awful condition
  else
    if value(6) < 30
      mpvalueset cond $F1 is pretty hurt
    else
      if value(6) < 50
        mpvalueset cond $F1 has big nasty wounds and scratches
      else
        if value(6) < 75
          mpvalueset cond $F1 has small wounds and bruises
        else
          if value(6) < 100
            mpvalueset cond $F1 has a few scratches
          else
            mpvalueset cond $F1 is not hurt
          endif
        endif
      endif
    endif
  endif
// vital, wasp strike, impale check 
  if snaffected($f1) == 492
  or snaffected($f1) == 466
  or snaffected($f1) == 227
    mpvalueset bleed , bleeding profusely
  endif
  if value(8) < 10
    mpvalueset tire and looks quite exhausted.
  else
    if value(8) < 50
      mpvalueset tire and looks exhausted.
    else
      if value(8) < 75
        mpvalueset tire and looks slightly exhausted.
      else
        mpvalueset tire and does not look exhausted at all.
      endif
    endif
  endif
  if iscriminal($f1)
    mpvalueset mark The outlaw
  endif
// fly, massfly, gaseous, wings of flame check
//  if snaffected($f1) == 67
//  or snaffected($f1) == 94
//  or snaffected($f1) == 362
//  or snaffected($f1) == 409
  if isflying($f1)
    mpvalueset fly  flew by
  endif
endif
if snaffected($f0) == 356
else
  mpechoat $f0 {gA sentry tells you \@%mark $F1 just %fly me%bleed.  %cond %tire\@{n
// Install Sentry Tool
  mpoload 8615 on $f1
  mpat $f1 SENTRYTOOL $f0
endif
~
>greet_prog 100~
if value(5) == 1
else
  mpfocus $n 1
  if ispc($f1)
    if isimmort($f1)
    or name($f1) == $f0
    else
      if isgroup($f1) & $f0
        if ishere($f0)
        endif
      else
// SNEAK CHECKS
        if israce($f1) == ETHRON
          if sector($f1) == inside
          or sector($f1) == city
          else
            if rand(10)
              break
            endif
          endif
        else
          if skill198($f1) > 90
            if rand(10)
              break
            endif
          endif
        endif
        mpvalueset 5 1
        mpget char $f1 curhp 6
        mpget char $f1 hp 7
        mpget char $f1 curmove 8
        mpget char $f1 move 9
        mpmath 6 $6 * 100 / $7
        mpmath 8 $8 * 100 / $9
        mpsetdata sentrynotify
      endif
    endif
  endif
endif
~
>data_prog sentrynotify~
wh
mptrigger
camo
hide
mpvalueset 5 0
~
>rand_prog 100~
if value(5) == 1
  $d
  mpnextdata
endif
if value(0) == 0
  mpset mob $i mana 100
  mpset mob $i curmana 100
  mpaddskill $i 244 100
  mpaddskill $i 192 100
  mpvalueset 0 1
  mpvalueset 1 300
  tell $f0 I\@ll keep watch here and remain concealed as best I can.
  tell $f0 If you spare me two platinum I will also inform you of the condition of those that cross my path.
  camo
  hide
endif
if value(0) == 1
  mpvaluedown 1
  if value(1) == 0
    mppurge self
  endif
endif
~
>bribe_prog 2000~
mpvalueset 2 1
pmote nods at $N and sinks back into the darkness.
mpset mob self platinum 0
mpset mob self gold 0
mpset mob self silver 0
mpset mob self copper 0
camo
hide
~
>fight_prog 75~
mpvalueset 5 0
tell $f0 $N is trying to kill me!  Help!
flee
camo
hide
~
|
V4 78
retainer retainermob retainer loyal~
the loyal retainer~
A loyal retainer stands at the ready.
~
This man is a loyal retainer, pledged to the service of %s.  While he
does not carry himself with the casual grace of an adventurer, he has
clearly been trained as a man-at-arms.  He serves loyally and faithfully,
bound by oath and years spent following %s.  
~
human~
water scholar~
ADI BG JSZ N 0
0 0 0d0+0 0d0+0 0d0+0 pierce~
stab~
0 0 0 0
FHIKL A
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
>verb_prog p retainerset~
if ispc($n)
  if ismaster($n)
    if isfollow($i)
        if value(4) == 1
        else
          mpaddskill $i 178 100
          mpaddskill $i 447 100
          mpaddskill $i 177 100
          mpaddskill $i 179 100
          mpoload 3410 on $i 16 
          pmote wields a tempered steel polearm.
          mpvalueset 4 1
        endif
      if isbitset($n) == 6147
      else
        mpechoat $n {r[OOC] Retainer: You\@re not authorized to do that yet.{n
        mpechoat $n {r[OOC] Retainer: Pray to the Immortals for approval for your retainer name.{n
        break
      endif
      if value(0) == 1
        mpechoat $n You\@ve already changed the string.
        break
      else
        if compstr(2) ==  
        or compstr(3) == 
          mpechoat $n {WSyntax: retainerset <name> <male/female/neuter>{n
        else
          mpvalueset candidacy $y2
          if compstr(2) == Iandir
          or compstr(2) == Jolinn
          or compstr(2) == Ashur
          or compstr(2) == Rystaia
          or compstr(2) == Rveyelhi
          or compstr(2) == Enaerai
          or compstr(2) == Girikha
          or compstr(2) == Aeolis
          or compstr(2) == Dolgrael
          or compstr(2) == Chadraln
          or compstr(2) == Arkhural
          or compstr(2) == Serachel
          or compstr(2) == Alajial
          or compstr(2) == Sythrak
          or compstr(2) == Bayyal
          or compstr(2) == Tzajai
            mpget char $n curhp 1
            mpmath 2 $1 / 2
            mpset char $n curhp 
            mpechoat $n That really HURT!
            mpechoat $n {RNO.{n
            break
          endif
          mpfocus $n
          if compstr(3) == male
            mpechoat $n Your retainer will remain male.
            mpvalueset 3 1
          endif
          if compstr(3) == female
            mpechoat $n Your retainer is now female.
            mpset mob self sex 2
            mpdesc self littlegirls
            mpvalueset 3 1
          endif
          if compstr(3) == neuter
            mpechoat $n Your retainer now is sexless.
            mpset mob self sex 0
            mpdesc self littleeunuchs
            mpvalueset 3 1
          endif
          if value(3) == 1
            mpstring mob self short %candidacy
            mpstring mob self name $y2 retainer retainermob retainer loyal
            mpstring mob self long %candidacy the retainer stands loyally at the service of $F.
            mpechoat $n Retainer\@s name set to %candidacy.
            mpvalueset 0 1
          else
            mpechoat $n {WSyntax: retainerset <name> <male/female/neuter>{n
          endif
        endif
      endif
    else
      mpechoat $n They\@re not following you.
    endif
  else
    mpechoat $n They\@re not following you.
  endif
else
  mpechoat $n Huh?
endif
~
>data_prog littleeunuchs~
This person is a loyal retainer, pledged to a life of service.  While they
do not carry themself with the casual grace of an adventurer, they have
clearly been trained as a man-at-arms.  They serve loyally and faithfully,
bound by oath and years spent following their charge.
~
>data_prog littlegirls~
This woman is a loyal retainer, pledged to a life of service.  While she does
not carry herself with the casual grace of an adventurer, she has clearly been 
trained as a woman-at-arms.  She serves loyally and faithfully, bound by oath 
and years spent following her charge.
~
|
V4 79
silverveil~
the silver veil runner~
The silver veil runner is here, cursing.
~
~
human~
water scholar~
ABDGLUVX 0 DFLP N 0
60 0 100d100+100 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
if mobvalue(2) == 3
  if snaffected($i) == 671
    break
  else
    mppurge self
  endif
endif
if mobvalue(1) > 0
  mpvaluedown 1
endif
if mobvalue(1) == 0
  if mobvalue(2) == 0
    if isfocused($i)
      if isindoors($i)
        mpecho A pillar of shrieking shadows burst forth from $F\@s corpse, spiralling upwards!
        mpvalueset 2 2
      else
        mpecho Shadows burst from $F\@s corpse, spiralling upwards!
        mpzecho A great column of shrieking darkness spirals upward towards the sky!
        mpvalueset 2 1
      endif
    else
      mpecho A pillar of shrieking shadows burst forth, spiralling upwards!
      mpvalueset 2 2
    endif
    mpvalueset 1 2
  else
    if mobvalue(2) == 1
      mpzecho The darkness fans outwards from the apex of the column, spreading over the world.
      mpvalueset 1 1
      mpvalueset 2 2
    else
      if mobvalue(2) == 2
        mpgecho The night sky darkens.  You feel cold.
        mpsilverset
        mpaddaffect $i 671 60 $0 0 15 0
        mpvalueset 2 3
      endif
    endif
  endif
endif
~
>load_prog 100~
mpvalueset 1 2
~
|
V4 80
spirit scholar 80~
the spirit scholar~
A spirit scholar walks here, searching for something.
~
The Spirit scholar looks intently at his surroundings, eager to find the
things Shilrin has sent him looking for.  
~
human~
water scholar~
AL 0 CDJZ G 0
10 5 5d22+167 10d10+100 2d5+5 energy~
magic~
4 4 4 7
FQ B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 100 -1
AHMV ABCDEFGHIJK A medium flesh
V4 81
spirit scholar 81~
the spirit scholar~
A female spirit scholar walks here, on a quest for the Arch-Mage.
~
The spirit scholar looks intently at her surroundings, eager to find the
things Shilrin has sent her looking for.  
~
ch\@taren~
water scholar~
AL 0 CDJUZ G 0
20 10 12d40+333 20d10+100 4d5+10 energy~
magic~
-2 -2 -2 4
FQ B
26 0 0 -33 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand female 100 -1
AHKMV ABCDEFGIJK E medium flesh
V4 82
spirit scholar 82~
the spirit scholar~
A male spirit scholar passes here, keeping a wary eye out for Shuddeni.
~
The spirit scholar walks carefully but with determination, looking for
the things required by the Arch-Mage.  
~
human~
water scholar~
AL 0 CDJZ G 0
30 15 13d80+923 30d10+100 5d6+15 energy~
magic~
-9 -9 -9 0
FQ B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 100 -1
AHMV ABCDEFGHIJK A medium flesh
V4 83
spirit scholar master 83~
the spirit scholar~
A master of the spirit magics searches the realm, at the orders of the Arch-Mage.
~
The mage seems almost indifferent to the rest of the world as she scans
the area, muttering intently to herself.  
~
ch\@taren~
water scholar~
AL 0 CDFJNUZ G 0
40 20 16d170+976 40d10+100 5d8+20 energy~
magic~
-15 -15 -15 -2
FKQ B
26 0 0 -33 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand female 100 -1
AHKMV ABCDEFGIJK E medium flesh
V4 84
spirit scholar master 84~
the spirit scholar~
Deep in thought, a master of the spirit magics passes through.
~
Keeping a wary eye out for any Shuddeni, the priests walks through
searching for some things as he was bid by the Arch-Mage.  
~
human~
water scholar~
AL 0 CDFJNUZ G 0
50 25 18d200+920 50d10+100 5d10+25 energy~
magic~
-21 -21 -21 -5
FQ B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 100 -1
AHMV ABCDEFGHIJK A medium flesh
V4 85
shuddeni warrior shuddeni10~
a shuddeni warrior~
A thin shuddeni warrior glares menacingly about the area.
~
A thin shuddeni glares about, hand restlessly fingering his sword.  
~
shuddeni~
water scholar~
A 0 AJZ E 0
10 5 5d22+167 0d0+0 2d5+7 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 -20 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMVW ABCDEFGHIJK G medium unknown
V4 86
shuddeni swordsman shuddeni20~
a shuddeni~
A shuddeni swordsman scans the area.
~
This wiry shuddeni holds sword in hand as he scans the area.
~
shuddeni~
water scholar~
A 0 AJZ N 0
20 10 12d40+363 0d0+0 4d5+12 slash~
slash~
-2 -2 -2 4
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 -20 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMVW ABCDEFGHIJK G medium unknown
V4 87
shuddeni swordmaster shuddeni30~
the shuddeni swordmaster~
A shuddeni swordmaster glares imperiously about.
~
Dressed in the armor of Yithoul, this shuddeni swordmaster glares
imperiously about the area.  
~
shuddeni~
water scholar~
A 0 AJZ E 0
30 15 13d80+923 0d0+0 5d6+17 slash~
slash~
-9 -9 -9 0
H 0
26 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 -20 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMVW ABCDEFGHIJK G medium unknown
V4 88
the veteran shuddeni swordmaster~
the veteran shuddeni swordmaster~
A veteran shuddeni swordmaster confidently scans the area.
~
Dressed in regal armor, this veteran shuddeni flourishes his swords with
a casual ease.  
~
shuddeni~
water scholar~
A 0 AJZ E 0
40 20 16d170+976 0d0+0 5d8+22 slash~
slash~
-15 -15 -15 -2
HN 0
26 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 -20 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMVW ABCDEFGHIJK G medium unknown
V4 89
shuddeni scholar shuddeni50~
the shuddeni void scholar~
A shuddeni void scholar stands here.
~
Wearing the flowing robes of Yithoul, this void scholar fingers the
pouches at his waist.  
~
shuddeni~
water scholar~
A 0 AJOUZ E 0
0 30 18d200+920 0d0+0 5d10+25 negative~
life drain~
-21 -21 -21 -5
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 -20 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMVW ABCDEFGHIJK G medium unknown
V4 90
tentacles dark black protuberance~
the black tentacles~
Oozing out of the ground, a nest of black tentacles writhes wildly about.
~
A mass of slender black tendrils oozes out of the ground here, reaching
and grabbing about the room.  Knotted with sticky grey protuberances, they
seem designed to draw and hold their prey.  
~
human~
water scholar~
ABX 0 0 E 0
35 10 12d70+512 0d0+0 5d7+16 negative~
life drain~
-12 -12 -12 -10
FH AB
26 0 0 0 33 0 0 0 0 0 0 0 0 0 -33 0 0 0 0 -33 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>death_prog 100~
mpecho The tentacles dissolve into mist as they thrash their death throes.
mppurge self
~
>rand_prog 75~
mptentacle
~
>exit_prog 100~
mptentacle $n
~
>greet_prog 100~
mptentacle $n
~
|
V4 91
asdkljfjaworighweratij~
the aerial servant~
A vague human outline can be seen swaying slightly above the floor.
~
A vague human outline can barely be seen swaying above the floor.
~
human~
water scholar~
AX 0 BDFTUZ N 0
50 25 18d200+920 0d0+0 5d12+25 energy~
magic~
-20 -20 -20 -6
FK AB
26 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 92
Lraj Halsith demon sultan~
Lraj Halsith~
The demon sultan Lraj Halsith gazes on the mortal world.
~
A contemptous mass of ichor covered black flesh, Lraj Halsith sneers as
he gazes upon the mortal realms.  Long claws and leathery wings frame a
supernormally muscled body, leaving little doubt as to this sultan\@s power. 
~
demon~
water scholar~
AP 0 JOUZ N 0
60 30 1d1+9999 0d0+0 0d0+0 negative~
life drain~
-30 -30 -30 -30
H BHM
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 100 55
ACHMV ABCDEFGHIJKP A medium unknown
V4 93
mirror mob~
the mirror image~
A mirror image is here.
~
~
human~
water scholar~
ADL 0 0 N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 94
runeofeyes~
a rune of eyes~
A rune of eyes is here, being looked through.
~
~
human~
water scholar~
ABDLVX 0 DFJLZ N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 95
bird prey raiderbird~
the bird of prey~
A bird of prey emits a piercing scream as it dives about.
~
An enormous beast, more saurian than bird, hovers in the air beside you. 
Its thick, leathery hide is studded with sharp, bony spines.  On either side
of its muscular body, powerful wings stretch out for over eight spans,
ending in small, yet razor-sharp, claws.  The beast\@s eyes - dark,
reptilian, and unblinking - lie beneath a hooded brow, reflecting a primal,
carnivorous intelligence.  Its angular face ends in a sharp beak, designed
to peck and tear at the flesh of its prey.  
~
bat~
water scholar~
AB F DFSTZ N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
slashing beak~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 -33 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ABCDEFGHIJKP A large unknown
>speech_prog p Fly~
if ismaster($n)
  if isfight($n)
    mpechoat $n You don\@t have enough room to take off properly while fighting.
    mpecharound $n $n tries to mount the bird, but doesn\@t have enough room to take off.
  else
    if isindoors($n)
      mpecho The bird gazes up at the ceiling with a confused look on its face.
    else
      if compstr(2) / Kor
      or compstr(3) / Kor
      or compstr(4) / Kor
      or compstr(5) / Kor
        mpvalueset 9 30130
      endif
      if compstr(2) / Inessa
      or compstr(3) / Inessa
      or compstr(4) / Inessa
      or compstr(5) / Inessa
        mpvalueset 9 15001
      endif
      if compstr(2) / Raider
      or compstr(3) / Raider
      or compstr(4) / Raider
      or compstr(5) / Raider
      or compstr(2) / Canyon
      or compstr(3) / Canyon
      or compstr(4) / Canyon
      or compstr(5) / Canyon
        mpvalueset 9 12101
      endif
      if compstr(2) / Earendam
      or compstr(3) / Earendam
      or compstr(4) / Earendam
      or compstr(5) / Earendam
        mpvalueset 9 6909
      endif
      if compstr(2) / Krilin
      or compstr(3) / Krilin
      or compstr(4) / Krilin
      or compstr(5) / Krilin
        mpvalueset 9 1655
      endif
      if compstr(2) / Var
      or compstr(3) / Var
      or compstr(4) / Var
      or compstr(5) / Var
      or compstr(3) / Bandor
      or compstr(4) / Bandor
      or compstr(5) / Bandor
      or compstr(6) / Bandor
        mpvalueset 9 4437
      endif
      if compstr(2) / Gaald
      or compstr(3) / Gaald
      or compstr(4) / Gaald
      or compstr(5) / Gaald
        mpvalueset 9 19086
      endif
      if value(9) == 0
        pmote twists around to look at $N, beady eyes dull and confused.
        break
      endif
      mpechoat $n You mount the great beast, and begin your ascent!
      if snaffected($n) == 518
        mpechoaround $n A hooded rogue mounts the bird of prey, and soars out of sight!
      else
        mpechoaround $n $N mounts the bird of prey, and soars out of sight!
      endif
      mplag $n 5
      mptransfer $n $9
      mpgoto $9
      mpforce $n look
      mpechoaround $n $N arrives on a great bird of prey!
      mpvalueset 9 0
    endif
  endif
else
  mpnextinterp
endif
~
>rand_prog 100~
if mobvalue(0) == 0
  mproomcmd mptrigger all
  mpvalueset 0 1
endif
~
>trigger_prog 100~
if ispc($n)
  if isbitset($n) == 12102
  else
    if ismaster($n)
      mpechoat $n {RAn otherworldly voice echoes in your head \@As agreed upon by our ancient pact, I have trained these birds to do your bidding.\@{n
      mpechoat $n {RAn otherworldly voice echoes in your head \@Order the bird to {Y\@Fly\@{R to any of the following places:\@{n
      mpechoat $n {RAn otherworldly voice echoes in your head \@Var Bandor, Earendam, Krilin, Kor Thrandir, Inessa, Gaald, and of course, the Canyon.\@{n
      mpbitset $n 12102 1
    endif
  endif
endif
~
|
V4 96
bandit banditcall~
a grizzled bandit~
A grizzled bandit strides through the city.
~
~
human~
water scholar~
A 0 F N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
if value(5) == 0
  mpvaluerand 6 50 100
  mpaddskill $i 199 100
endif
mpvalueup 5
if value(5) == $6
  mpecho $I slinks off, content with $l loot.
  mppurge $i  
  break
endif
mpfocus $r
raiderbanditwork
if rand(33)
  mpwander
endif
~
>verb_prog dropraiderloot~
if valname($n) == $i
  mpget mob $i platinum 1
  mpget mob self gold 2
  mpget mob self silver 3
  mpget mob self copper 4
  if value(1) > 0
  or value(2) > 0
  or value(3) > 0
  or value(4) > 0
    mpat 12103 mpecho $I drops some pillaged loot as he wanders past.
  endif
  mpat 12103 drop all
  mpat 12103 drop $1 platinum
  mpat 12103 drop $2 gold
  mpat 12103 drop $3 silver
  mpat 12103 drop $4 copper
  mpverbstop
else
  mpnextinterp
endif
~
>verb_prog raiderbanditwork~
if valname($n) == $i
  if objhere(10)
  or objhere(11)
  or objhere(116)
    get 1. corpse
    get 1. corpse
    get platinum corpse
    get gold corpse
    get silver corpse
    get copper corpse
    dropraiderloot
  endif
  if rand(50)
    if name($f) / banditcall
    or inhouse($f) == raider
      if rand(1)
        pmote grins wickedly at $F.
      endif
    else
      mpget mob level $i 2
      mpmath 2 $2 - 8
      if level($f) <= $2
      or level($f) < 11
        if rand(2)
          if rand(50)
            pmote leers wickedly at $F.
          else
            snort $f
          endif
        endif
        mpverbstop
        break
      endif
      if rand(50)
        if rand(50)
          steal 1. $f
        else
          steal coins $f
        endif
        dropraiderloot
      else
        mpkill $f
      endif
      mpwander
      mpverbstop
    endif
  endif
else
  mpnextinterp
endif
~
>greet_prog 50~
mpfocus $n
raiderbanditwork
~
>entry_prog 50~
mpfocus $r
raiderbanditwork
~
|
V4 97
bandit banditcall~
a lean and hungry bandit~
A lean bandit makes his way through the city.
~
~
human~
water scholar~
A 0 F N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
if value(5) == 0
  mpvaluerand 6 50 100
  mpaddskill $i 199 100
endif
mpvalueup 5
if value(5) == $6
  mpecho $I slinks off, content with $l loot.
  mppurge $i  
  break
endif
mpfocus $r
raiderbanditwork
if rand(33)
  mpwander
endif
~
>verb_prog dropraiderloot~
if valname($n) == $i
  mpget mob $i platinum 1
  mpget mob self gold 2
  mpget mob self silver 3
  mpget mob self copper 4
  if value(1) > 0
  or value(2) > 0
  or value(3) > 0
  or value(4) > 0
    mpat 12103 mpecho $I drops some pillaged loot as he wanders past.
  endif
  mpat 12103 drop all
  mpat 12103 drop $1 platinum
  mpat 12103 drop $2 gold
  mpat 12103 drop $3 silver
  mpat 12103 drop $4 copper
  mpverbstop
else
  mpnextinterp
endif
~
>greet_prog 50~
mpfocus $n
raiderbanditwork
~
>entry_prog 50~
mpfocus $r
raiderbanditwork
~
>verb_prog raiderbanditwork~
if valname($n) == $i
  if objhere(10)
  or objhere(11)
  or objhere(116)
    get 1. corpse
    get 1. corpse
    get platinum corpse
    get gold corpse
    get silver corpse
    get copper corpse
    dropraiderloot
  endif
  if rand(50)
    if name($f) / banditcall
    or inhouse($f) == raider
      if rand(1)
        pmote grins wickedly at $F.
      endif
    else
      mpget mob level $i 2
      mpmath 2 $2 - 8
      if level($f) <= $2
      or level($f) < 11
        if rand(2)
          if rand(50)
            pmote leers wickedly at $F.
          else
            snort $f
          endif
        endif
        mpverbstop
        break
      endif
      if rand(50)
        if rand(50)
          steal 1. $f
        else
          steal coins $f
        endif
        dropraiderloot
      else
        mpkill $f
      endif
      mpwander
      mpverbstop
    endif
  endif
else
  mpnextinterp
endif
~
|
V4 98
hooded rogue bandit banditcall~
a hooded rogue~
A hooded figure stands here.
~
A hooded %s is here, its identity cunningly hidden.
~
human~
water scholar~
A 0 F N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 100~
if value(5) == 0
  mpvaluerand 6 50 100
  mpaddskill $i 199 100
endif
mpvalueup 5
if value(5) == $6
  mpecho $I slinks off, content with $l loot.
  mppurge $i  
  break
endif
mpfocus $r
raiderbanditwork
if rand(33)
  mpwander
endif
~
>verb_prog dropraiderloot~
if valname($n) == $i
  mpget mob $i platinum 1
  mpget mob self gold 2
  mpget mob self silver 3
  mpget mob self copper 4
  if value(1) > 0
  or value(2) > 0
  or value(3) > 0
  or value(4) > 0
    mpat 12103 mpecho $I drops some pillaged loot as he wanders past.
  endif
  mpat 12103 drop all
  mpat 12103 drop $1 platinum
  mpat 12103 drop $2 gold
  mpat 12103 drop $3 silver
  mpat 12103 drop $4 copper
  mpverbstop
else
  mpnextinterp
endif
~
>greet_prog 50~
mpfocus $n
raiderbanditwork
~
>entry_prog 50~
mpfocus $r
raiderbanditwork
~
>verb_prog raiderbanditwork~
if valname($n) == $i
  if objhere(10)
  or objhere(11)
  or objhere(116)
    get 1. corpse
    get 1. corpse
    get platinum corpse
    get gold corpse
    get silver corpse
    get copper corpse
    dropraiderloot
  endif
  if rand(50)
    if name($f) / banditcall
    or inhouse($f) == raider
      if rand(1)
        pmote grins wickedly at $F.
      endif
    else
      mpget mob level $i 2
      mpmath 2 $2 - 8
      if level($f) <= $2
      or level($f) < 11
        if rand(2)
          if rand(50)
            pmote leers wickedly at $F.
          else
            snort $f
          endif
        endif
        mpverbstop
        break
      endif
      if rand(50)
        if rand(50)
          steal 1. $f
        else
          steal coins $f
        endif
        dropraiderloot
      else
        mpkill $f
      endif
      mpwander
      mpverbstop
    endif
  endif
else
  mpnextinterp
endif
~
|
V4 99
Fire pillagefire~
A roaring blaze~
(no long description)
~
~
human~
water scholar~
AB 0 L N 0
0 0 0d0+0 0d0+0 0d0+0 fire~
flame~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>rand_prog 60~
mpecho The fire continues to blaze throughout the room!
mptrap $r
~
>rand_prog 20~
mpecho The fire runs out of fuel, and slowly extinguishes itself.
mppurge self
~
>greet_prog 50~
mpechoat $n You enter the room to discover it ablaze with the flames of the pillagers!
mptrap $n
~
>greet_prog 50~
~
|
V4 100
snake stickstosnake~
the snake~
A hissing serpent writhes about on the ground.
~
This snake\@s scales are a dark brown, mottled tone.  Its maw bears a pair
of long, sharp fangs, and its eyes are a piercing green.  
~
snake~
water scholar~
A 0 0 N 0
0 20 10d10+200 0d0+0 1d10+20 pierce~
bite~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 -20 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMVXYc ADEFKLQVX A medium unknown
V4 101
pitmasterbot pitbot pit~
The punji pit\@s stakes~
The Pit master bot is here, calling for Blastah.
~
~
human~
water scholar~
ADL 0 DFL N 0
0 0 1d1+1 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
>greet_prog 100~
mptrap $n
~
|
V4 102
shark~
shark~
Shark
~
~
human~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
V4 103
seedling gamaloth~
a seedling of Gamaloth~
A seedling of Gamaloth stands here.
~
~
demon~
water scholar~
A 0 0 N 0
31 16 23d48+963 31d10+100 4d8+16 none~
~
-9 -9 -9 0
0 B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACH ABCDEFGHIJKP 0 medium flesh
V4 110
wolf rangercall dire mob_110~
a dire wolf~
A dire wolf stalks quietly.
~
This large, black-furred dire wolf stalks quietly, looking to be almost
five feet in length from head to rump.  A sleek body leads into heavy
shoulders and a thick, long snout.  Inordinately large, pointed teeth line
the wolf\@s maw which is ringed with a dark-grey shade of matted fur.  The
legs of the dire wolf are shorter than a typical wolf and are not as adept
at speed as they are strength.  
~
wolf~
water scholar~
AN F Z N 0
0 0 0d0+0 0d0+0 0d0+0 pierce~
bite~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ACDEFJKQV A medium unknown
>load_prog 100~
mpseewizi
~
>rand_prog 100~
mpseewizi
~
|
V4 113
Scion oame demon demonbind~
a scion of Oame~
Emanating a foul stench, a scion of Oame is coiled here.
~
The scion of Oame apears as an elaborate knot of writhing tendrils, the hiss
of its scales an endless counterpoint to its presence. Jutting out from the
seething mass are several bent appendages; some end in faceted, lidless eyes,
and others end in sharp, circular mouths. A palpable chill surrounds the
creature, sucking all warmth from the surrounding air, which somehow only
sharpens the nearly unbearable, sickly-sweet scent of rotting flesh that
radiates from its coils.
~
demon~
water scholar~
A 0 DJ E 0
57 29 37d126+1125 57d10+100 7d8+29 cold~
chill~
-25 -25 -25 -8
K B
26 0 0 0 0 0 0 0 0 0 0 0 0 33 -33 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACH ABCDEFGHIJKP A medium flesh
V4 114
bear grizzly rangercall mob_114~
the grizzly bear~
A grizzly bear lumbers along here.
~
This grizzly bear is a towering mass of matted, coarse fur.  On all fours
it dwarfs most humans and standing tall it matches a typical alatharya.  The
grizzly\@s immense haunches and hunched back betray its overwhelming power. 
The paws, mounted on tree trunk-size legs, are covered in muck and dirt, the
razor-sharp claws extending from beneath them like cruel hooks.  The rounded
head is almost indistinguishable from the shoulders, its thick barrel-neck
covered in fat and muscle.  A coat of think brown fur covers the beast save
for the blackened snout.  
~
bear~
water scholar~
AN F 0 N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
claw~
0 0 0 0
DEO 0
26 0 0 0 0 33 0 0 0 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ABCDEFHJKUV A medium unknown
V4 115
Idcizon demon demonbind~
an idcizon~
A fanged idcizon lopes along.
~
The size of a large dog, the Idcizon seems more jaw than anything else. 
Its large hind legs seem designed for loping, and its sizable fangs drip a
green inchor.  Noticeable are the jagged serrations in its fangs,
designed for rending flesh.  

~
demon~
water scholar~
AT 0 DJZ E 0
57 28 18d200+970 0d0+0 5d13+27 pierce~
bite~
-22 -22 -22 -9
FHK B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
V4 116
Vershak demon demonbind~
a winged vershak~
A winged vershak glides through here.
~
The vershak is a swift, lithe demon with the wings of a bat, but a sharp,
toothy beak.  Yellowish claws sprout from its leathery wings, flexing
reflexively as the vershak focuses its beady eyes on whatever strikes its
fancy.  
~
demon~
water scholar~
AT 0 DJVZ E 0
57 28 20d220+700 0d0+0 5d13+27 slash~
claw~
-22 -22 -22 -9
FHK B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>death_prog 100~
emote clatters to the ground, seeming to come apart in a mess of dissolving angles.
mppurge self
~
|
V4 117
grmlarloth blob demon demonbind~
a blob-like grmlarloth~
A blob-like grmlarloth is here, chattering madly.
~
The grmlarloth is a blob-shaped creature, about waist high to a human. 
Its rubbery black flesh is broken by countless small jaws, each of which
opens and closes incessantly, forming an atonal cacophany of clattering.  
~
demon~
water scholar~
A 0 0 N 0
40 20 28d70+1116 40d10+100 5d8+20 pierce~
snapping jaws~
-15 -15 -15 -3
0 B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
V4 118
succubus demon demonbind~
a succubus~
An amalgamation of beauty and horror, a succubus hovers here.
~
A combination of features both horrific and beautiful, this initiate of
Princia hovers before you on spined, batlike wings.  The succubus hovers
unclothed, her soft curves readily visible.  Visible too are her unnaturally
long fingers and toes, the digits elongating into piercing claws.  The flesh
of her hands and feet are black as pitch, a stark contrast to the skin of
milky white covering the rest of her body.  Where white flesh meets black,
the colors spatter into one another as they blend.  The skin of her face is
pulled tight over her skull, the gaunt appearance contrasting the pleasant
softness the rest of her body seems to have.  Her eyes also strike you as
unnatural, the pupils vertical slits, like a cats.  The eyes flash hungrily
as they dart, searching.  
~
demon~
water scholar~
AT 0 DJZ E 0
57 28 18d200+920 0d0+0 5d13+20 negative~
life drain~
-22 -22 -22 -9
FHKN B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand female 0 55
ACHMV ABCDEFGHIJKP A medium unknown
V4 119
Logor minion demon demonbind~
a minion of Logor~
A dark cloud marks the presence of a minion of Logor.
~
The minion of Logor appears as a sickly cloud of darkness, smelling of
tar and brimstone.  Wicked red lights mark its eyes, and its darkness roils
at the presence of life around it.  
~
demon~
water scholar~
AT 0 DFJZ E 0
57 28 20d220+900 0d0+0 5d13+20 defilement~
defilement~
-22 -22 -22 -9
FHK BZ
26 0 0 0 0 0 0 0 0 0 0 0 0 0 -20 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKP A medium unknown
>death_prog 100~
mpecho The minion of Logor\@s red eyes dim and fade, and the cloud dissipates.
mppurge self
~
|
V4 120
badger large shaggy mob_120 rangercall~
a large, shaggy badger~
A large, shaggy badger crouches here, broad and squat.
~
A furred animal nearly the size of an average dog, this badger is covered
in thick, shaggy fur of a silver-tipped dark grey.  Curiously broad and
flat, the creature\@s long, triangular head hosts two suspicious bright eyes
and a large, pale brown nose.  Distinctive white markings along the snout
run into stripes which end at the neck.  Large, shovel-like paws tipped with
sharp claws seem equally well-suited to the frantic digging or equally
energetic slashing fights for which these animals are known.  
~
cat~
water scholar~
ALN F Z N 0
0 0 100d100+100 0d0+0 0d0+0 slash~
clawing slash~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 -10 15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ABCDEFGHIJKQUV A medium unknown
V4 121
hound abuha large wolf wolf-like beast consumptiondemon~
a hound of Abuha~
A large, wolf-like beast, jet-black and hairless, stalks along.
~
In form like a great, hairless wolf, the hound of Abuha stands fully
three feet at the shoulder, its muscular legs and back offset by its
emaciated, almost skeletal, rib cage, face and protruding spine.  The
beast\@s skin is black, and its eyes deep-set burning coals, as though the
conflagration which consumed its flesh now dwindled in those flickering
orbs.  Its long muzzle is thick with serrated teeth, which gleam white
against its snarling, jet-black jowls.  
~
wolf~
water scholar~
A 0 DFJZ E 0
40 20 16d170+976 40d10+100 5d8+20 pierce~
bite~
-15 -15 -15 -2
FHUV LQ
26 90 90 75 0 0 0 0 0 0 0 0 0 33 -15 0 0 0 0 0 0 0 0 -33 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ACDEFHJKQV A medium flesh
>rand_prog 50~
if rand(50)
if isanypchere($i)
mpunfocus
mpfocus $r
if ispc($f)
if level($f) > 39
if isimmort($f)
else
if isghost($f)
else
mpechoat $f $I turns its glowing red eyes toward you, and leaps suddenly at your throat!
mpechoaround $f $I turns its glowing red eyes toward $F, and leaps suddenly to attack!
mpkill $f
endif
endif
endif
endif
mpunfocus
endif
endif
~
|
V4 122
fly khudh\@itzu enormous bloated black consumptiondemon~
a khudh\@itzu fly~
An enormous, bloated, black fly emits a horrendous buzzing.
~
The size of a small rat, this huge, black fly buzzes around the area
erratically.  Its bloated, black abdomen is barely held up by its blurred
wings, yet it moves with frightening speed.  It emits a freakish buzzing,
which seems to resonate through your body.  
~
centipede~
water scholar~
A 0 DJTXZ E 0
20 20 12d40+333 20d10+100 4d5+10 pierce~
sting~
-2 -2 -2 4
U Q
26 0 0 0 0 0 50 30 -25 0 0 0 80 90 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ABGMO ACFKP A medium flesh
>rand_prog 20~
if isanypchere($i)
if rand(50)
mpunfocus
mpfocus $r
if isfocused($i)
if ispc($f)
if isimmortal($f)
break
endif
mpechoat $f A buzzing khudh\@itzu fly suddenly flies into your face!
mpechoaround $f A buzzing khudh\@itzu fly suddenly flies into $F\@s face!
mpkill $f
endif
endif
endif
endif
~
|
V4 123
tree gamaloth blackened tree-like bole consumptiondemon~
the tree of Gamaloth~
Rising fifty feet into the air, a blackened tree-like bole sways gently.
~
This great tree-like pillar rises high into the air, and its black,
many-limbed bole sways gently from side to side, as though in a breeze. 
Both the long limbs, which stretch from the thick base to the tapered tip,
and the high bole itself are covered in wrinkled black bark, resembling
charred skin, ancient and sagging.  The limbs of the creature twitch
slightly, forking into twisted branches toward their ends.  
~
generic~
water scholar~
ABX 0 DJZ E 0
58 28 19d210+3000 55d10+100 10d10+25 slash~
lash~
-24 -24 -24 -7
AHKO ABLQRb
26 0 0 50 0 30 0 0 -30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AH 0 A medium wood
>fight_prog 20~
if rand(50)
mpcast 538 60
endif
~
>rand_prog 40~
mpfocus $r
if isfocused($i)
if ispc($f)
if level($f) > 39
if isimmort($f)
else
if isghost($f)
else
if snaffected($f) == 192
else
if snaffected($f) == 531
else
if snaffected($f) == 244
else
mpechoat $f The tree of Gamaloth senses your presence, and lashes its great limbs out toward you!
mpechoaround $f The tree of Gamaloth suddenly lashes its great limbs toward $F!
mpkill $f
endif
endif
endif
endif
endif
endif
endif
endif
mpunfocus
~
|
V4 124
imp fire tiny humanoid creature flame consumptiondemon~
the fire imp~
A tiny humanoid creature, made completely of flame, wheels and circles about.
~
A tiny humanoid creature, only a half-dozen inches in height, seems to be
made solely from flame.  Its body glows white-hot as it flies in erratic
circles, setting fire to anything it touches.  
~
demon~
water scholar~
AT 0 DFJTZc E 0
40 20 16d170+976 40d10+100 5d8+20 fire~
flame~
-15 -15 -15 -2
FHU BHLOQS
26 75 85 0 0 0 0 0 0 -30 0 0 0 0 0 0 0 0 -50 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMV ABCDEFGHIJKP A medium unknown
>rand_prog 20~
mpfocus $r
if isfocused($i)
if ispc($f)
if level($f) > 24
if isimmort($f)
else
mpechoat $f In its erratic weaving, a fire imp flies right into you!
mpechoaround $f In its erratic weaving, a fire imp collides with $F!
mpkill $f
endif
endif
endif
endif
mpunfocus
~
>fight_prog 20~
if rand(30)
mpcast 400 50
else
if rand(20)
mpcast 129 50
endif
endif
~
>rand_prog 5~
if rand(40)
mpcast 404 60
else
if rand(10)
mpcast 401 40
endif
endif
~
|
V4 125
miasma putrid putrid-smelling green vapor tendrils cloudkill consumptiondemon~
the putrid miasma~
A putrid-smelling green vapor sends probing tendrils in all directions.
~
Flowing in sluggish currents, this sickly miasma oozes about the area,
sending probing tendrils of vapor in all directions.  A bilious stench rises
from the thick green gas, simultaneously fetid and acrid.  
~
generic~
water scholar~
ADX 0 DFJTUXZc E 0
55 28 19d210+1050 55d10+100 6d10+25 defilement~
defilement~
-24 -24 -24 -7
A ABDLPQRUb
26 0 0 0 0 0 0 0 0 50 -30 0 0 80 0 0 0 0 0 50 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
B 0 A medium unknown
>rand_prog 5~
mpseewizi
if mobhere(40)
else
mpmload 40
mpforce cloudkill mpseewizi
mpecho The putrid miasma compresses with a vile hissing, releasing a nauseating brown gas to fill the area.
endif
mpunseewizi
~
>fight_prog 100~
if rand(50)
if rand(40)
mpcast 105 50
else
if rand(50)
mpcast 104 50
else
if rand(60)
mpcast 143 50
else
mpcast 107
endif
endif
endif
mpecho $I disperses briefly, before seething back together in foul confluence.
mpgoto self
endif
~
|
V4 126
doppleganger Chaigian human-like form consumptiondemon~
the Chaigian doppleganger~
A human-like form stands here, its face a smooth, featureless oval.
~
This creature\@s form blurs as you look at it, solidifying again as you
turn your eyes away.  
~
demon~
water scholar~
AH 0 DFJZc E 0
55 60 19d210+1050 55d10+100 6d10+25 negative~
life drain~
-24 -24 -24 -7
FIKN Bb
26 50 50 0 0 0 0 0 0 0 0 0 0 50 -20 0 0 0 0 0 0 0 0 0 -20 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMV ABCDEFGHIJKP A medium flesh
>trigger_prog 100~
if isimmort($n)
else
if level($n) > 30
if isghost($n)
else
mpfocus $n
mpvalueup 1
endif
endif
endif
~
>rand_prog 20~
if isanypchere($i)
mpvalueset 1 0
mpunfocus
mproomcmd mptrigger all
if mobvalue(1) == 1
mpkill $f
endif
endif
~
>fight_prog 20~
if mobvalue(0) == 1
mpecho $I\@s features suddenly melt away!
mpvalueset 0 0
mpstring mob self long A human-like form stands here, its face a smooth, featureless oval.
mpstring mob self short the Chaigian doppleganger
mpstring mob self name doppleganger Chaigian human-like form consumptiondemon
mpset mob self sex 0
endif
~
>entry_prog 100~
if mobvalue(0) == 0
if isnpc($n)
if israce($n) == HUMAN
or israce($n) == AELIN
or israce($n) == SRRYN
or israce($n) == KANKORAN
or israce($n) == ALATHARYA
or israce($n) == NEFORTU
or israce($n) == CH\@TAREN
or israce($n) == ETHRON
or israce($n) == CALADARAN
or israce($n) == SHUDDENI
mpvalueset 0 1
mpstring mob self long $N is here.
mpstring mob self short $N
mpstring mob self name $n doppleganger Chaigian human-like form consumptiondemon
if sex($n) == 1
mpset mob self sex 1
endif
if sex($n) == 2
mpset mob self sex 2
endif
if sex($n) == 0
mpset mob self sex 0
endif
endif
endif
endif
~
>greet_prog 100~
if mobvalue(0) == 0
if isnpc($n)
if israce($n) == HUMAN
or israce($n) == AELIN
or israce($n) == SRRYN
or israce($n) == KANKORAN
or israce($n) == ALATHARYA
or israce($n) == NEFORTU
or israce($n) == CH\@TAREN
or israce($n) == ETHRON
or israce($n) == CALADARAN
or israce($n) == SHUDDENI
mpvalueset 0 1
mpstring mob self long $N is here.
mpstring mob self short $N
mpstring mob self name $n doppleganger Chaigian human-like form consumptiondemon
if sex($n) == 1
mpset mob self sex 1
endif
if sex($n) == 2
mpset mob self sex 2
endif
if sex($n) == 0
mpset mob self sex 0
endif
endif
endif
endif
~
|
V4 127
grmlarloth blob-like blob demon consumptiondemon~
a blob-like grmlarloth~
A blob-like grmlarloth is here, chattering madly.
~
The grmlarloth is a blob-shaped creature, about waist high to a human. 
Its rubbery black flesh is broken by countless small jaws, each of which
opens and closes incessantly, forming an atonal cacophany of clattering.  
~
generic~
water scholar~
A 0 DFJZ E 0
50 25 18d200+920 50d10+100 5d10+25 pierce~
bite~
-21 -21 -21 -5
H Qb
26 0 0 0 0 50 0 0 0 0 0 0 0 90 -30 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
AHMV EFKV A medium flesh
>rand_prog 60~
if rand(99)
if isanypchere($i)
mpunfocus
mpfocus $r
if ispc($f)
if level($f) > 39
if isimmort($f)
else
if isghost($f)
else
mpechoat $f $I oozes with frightening speed toward you and attacks!
mpechoaround $f $I oozes with frightening speed toward $F and attacks!
mpkill $f
endif
endif
endif
endif
mpunfocus
endif
endif
~
|
V4 128
gharku heavy black demon behemoth consumptiondemon~
a heavy black gharku~
A black gharku pounds along.
~
A powerfully built demon, the gharku stands enshrined in dense, spined
plates of midnight black chitin.  Thick, plated arms - replete with bony
serrations - hang by the gharku\@s side, ending in massive, black pincers,
capable of snapping a man in half.  The gharku\@s hulking weight rests upon
short, squat legs, each one bent ever so slightly at the joint.  The legs
extend onward into bony, clawed feet.  

A seemingly human skull, wrapped tightly in grey, decaying skin, rests atop
a stick of a neck, protruding only slightly forward from its hulking torso. 
Its jaw is set into a permanent grin, jagged and broken teeth, thrusting
forth from shriveled lips.  Bloodshot eyestalks erupt from the gharku\@s
empty sockets, endlessly swinging about in search of prey.  
~
demon~
water scholar~
AX 0 DJZ E 0
55 28 19d210+1050 55d10+100 6d10+25 bash~
punch~
-24 -24 -24 -7
0 B
26 50 50 0 30 0 0 0 0 0 0 0 0 70 -20 0 0 0 0 -30 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKNP A large flesh
>rand_prog 40~
if isanypchere($i)
mpunfocus
mpfocus $r
if ispc($f)
if level($f) > 39
if isimmort($f)
else
if snaffected($f) == 192
else
if snaffected($f) == 531
else
if snaffected($f) == 244
else
if isghost($f)
else
mpechoat $f $I comes barreling toward you, its tentacled maw opened hungrily!
mpechoaround $f $I comes barreling toward $F, its tentacled maw opened hungrily!
mpkill $f
endif
endif
endif
endif
endif
endif
endif
mpunfocus
endif
~
|
V4 129
abishai black-winged black demon consumptiondemon~
a black-winged abishai~
A black-winged abishai leers around at its environs.
~
A black-winged abishai leers around the area here.  Its dog-like face and
snapping jaws offset a leathery skinned body, and its long tail terminates
in a sharp barb.  Huge bat-like wings beat furiously, holding the demon
aloft.  
~
generic~
water scholar~
A 0 DFJTZ E 0
53 25 18d200+920 50d10+100 5d10+25 pierce~
bite~
-21 -21 -21 -5
FHM 0
26 50 50 0 0 0 0 0 0 0 0 0 0 0 -33 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 55
AHMV ABCDEFGHIJKPV A medium flesh
>rand_prog 50~
if rand(70)
if isanypchere($i)
mpunfocus
mpfocus $r
if ispc($f)
if level($f) > 39
if isimmort($f)
else
if snaffected($f) == 192
else
if snaffected($f) == 531
else
if snaffected($f) == 244
else
if isghost($f)
else
mpechoat $f $I spies you, screams, and swoops in to attack!
mpechoaround $f $I suddenly screams, and swoops in to attack $F!
mpkill $f
endif
endif
endif
endif
endif
endif
endif
mpunfocus
endif
endif
~
|
V4 130
orzub demon clawed thin grey-skinned creature consumptiondemon~
a clawed Orzub~
A clawed Orzub slinks along here.
~
Vaguely humanoid in its shape, the Orzub leans forward aggressively upon
its powerful, crouched legs.  Sleek, grey skin is drawn tightly about sinewy
muscles, allowing one to see the heavings of the demon\@s protruding rib
cage.  On either side, long, stick-like arms extend outwards, each one
ending in a razor-sharp, bony sickle that seems to have ripped its way out
from its fleshy cage.  Extending forward from the demon\@s face is a gaping,
canine jaw, lined with a double-layer of smashed, jagged incisors.  Bounding
forward with each step, the Orzub\@s claws seem to whistle through the air
with ominous speed.  
~
demon~
water scholar~
A 0 DJZ E 0
50 25 18d200+920 50d10+100 5d10+25 slash~
claw~
-21 -21 -21 -5
FHKN B
26 70 70 0 0 0 0 0 0 0 0 0 0 50 -33 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 55
ACHMV ABCDEFGHIJKPU A medium flesh
>rand_prog 50~
if rand(40)
if isanypchere($i)
mpunfocus
mpfocus $r
if ispc($f)
if level($f) > 34
if isimmort($f)
else
if snaffected($f) == 192
else
if snaffected($f) == 531
else
if snaffected($f) == 244
else
if isghost($f)
else
mpechoat $f Its saber-like claws clicking and whistling through the air, the clawed Orzub races toward you!
mpechoaround $f Its saber-like claws clicking and whistling through the air, the clawed Orzub races toward $F!
mpkill $f
endif
endif
endif
endif
endif
endif
endif
mpunfocus
endif
endif
~
|
V4 131
figure black black-robed robed cultist sothmogga spawn~
a black-robed figure~
A black-robed figure stands here.
~
Wearing robes of black silk, the figure before you has hidden his or her
identity beneath a voluminous hood.  The figure seems to fidget and squirm
underneath the robes, presumably uncomfortable with their fit.  A sharp,
acidic odor wafts from around the figure, somewhat reminiscent of the spell
components used by scholars.  
~
human~
water scholar~
ADLPT B DFJ E 0
53 70 1d1+10000 1d1+10000 5d10+50 acid~
acidic bite~
0 0 0 0
FHK K
26 0 0 0 10 0 0 0 0 0 0 0 0 0 -15 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
>fight_prog 40~
mpvalueset 0 1 4
if mobvalue(0) == 1
cast \@acid blast\@
endif
if mobvalue(0) == 2
cast \@embrace of isetaton\@
endif
if mobvalue(0) == 3
cast \@drain\@
endif
if mobvalue(0) == 4
cast \@weaken\@
endif
~
>speech_prog w h o r e~
mpaddskill $i 52 100
mpaddskill $i 680 100
mpaddskill $i 2 100
mpaddskill $i 143 100
mpaddskill $i 754 100
~
|
V4 132
spawn sothmogga cultist robed figure~
a spawn of Sothmogga~
A black-robed Spawn of Sothmogga stands here.
~
This being is one of the mythical Spawn of Sothmogga.  Once an unborn
Celanim, the coming of Sothmogga\@s negative energies twisted the entity into
an unspeakable abomination.  

Now, the figure is roughly humanoid in shape, but with a body covered with
black, writhing tentacles.  Its flesh is a charcoal black, streaked with
pulses of a deep blue energy.  It wears robes of dark silk, with its hood
and arms rolled back to reveal its true form.  
~
demon~
water scholar~
ADFL 0 DFJZ N 0
53 70 1d1+8000 1d1+8000 5d10+40 acid~
acidic bite~
0 0 0 0
HK B
26 0 0 0 10 0 0 0 0 0 0 0 0 0 15 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMV ABCDEFGHIJKP 0 medium flesh
>speech_prog w h o r e~
mpaddskill $i 52 100
mpaddskill $i 680 100
mpaddskill $i 2 100
mpaddskill $i 143 100
mpaddskill $i 754 100
~
>fight_prog 40~
mpvalueset 0 1 4
if mobvalue(0) == 1
cast \@acid blast\@
endif
if mobvalue(0) == 2
cast \@embrace of isetaton\@
endif
if mobvalue(0) == 3
cast \@drain\@
endif
if mobvalue(0) == 4
cast \@weaken\@
endif
~
|
V4 133
no name~
Gyel-Xan~
Gyel-Xan, leader of the Spawn of Sothmogga, stands here.
~
Gyel-Xan is the leader of the cult of Sothmogga, and foremost among its
Spawn.  Originally one an unborn of the celestial race of the Celanim,
Gyel-Xan, like his fellow spawn, was twisted and corrupted by the coming of
that cosmic horror.  

Gyel-Xan stands about as tall as an alatharya, but his entire body is
covered by ropy, midnight-black tentacles.  An acidic sheen covers his skin,
and only magic prevents the dissolution of his dark silk robes.  Little
trace remains of his Celanimic heritage, save his eyes, which pulse with a
deep blue energy.  
~
demon~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 B
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMV ABCDEFGHIJKP 0 medium flesh
V4 134
rumorbot rumor coordinator susan~
the rumorbot~
The rumorbot spreads her filthy, filthy lies.
~
The rumorbot generates rumors based on typical game events, such as a
character achieving hero level.  She is also the star reporter for the
Midwestern Arcane.  
~
human~
water scholar~
AL 0 DFJPZe N 0
52 26 35d107+1167 52d10+100 6d9+26 none~
hit~
-22 -22 -22 -6
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand female 0 -1
AHMV ABCDEFGHIJK A medium flesh
>verb_prog make_nasty_rumors~
pray $y2 rumor created for $N
// Begin by setting up class info variables
mpvalueset classart a
mpsetdata classes
loop 0 to 29
  if class($n) == $v1
    mpvalueset class $d
  endif
  mpnextdata
endloop
if value(class) / earth
or value(class) / air
or value(class) == alchemist
or value(class) == assassin
  mpvalueset classart an
endif
//
// Next set race variables
mpvalueset raceart a
if israce($n) == human
  mpvalueset race human
endif
if israce($n) == aelin
  mpvalueset race aelin
  mpvalueset raceart an
endif
if israce($n) == alatharya
  mpvalueset race alatharya
  mpvalueset raceart an
endif
if israce($n) == nefortu
  mpvalueset race nefortu
endif
if israce($n) == srryn
  mpvalueset race srryn
endif
if israce($n) == shuddeni
  mpvalueset race shuddeni
endif
if israce($n) == kankoran
  mpvalueset race kankoran
endif
if israce($n) == caladaran
  mpvalueset race caladaran
endif
if israce($n) == ethron
  mpvalueset race ethron
  mpvalueset raceart an
endif
if israce($n) == ch\@taren
  mpvalueset race ch\@taren
endif
if israce($n) == chaja
  mpvalueset race chaja
endif
//
// Next create rumor according to rumor type
//
if compstr(2) == schoolgrad
  if rand(99)
    mpvaluerand gradrumor 1 10
    if value(gradrumor) == 1
      mpaddrumor \#$I\# There\@s a new %class, a young %race %class, who just graduated from the School of Heroes. They call $m $N.
    endif
    if value(gradrumor) == 2
      mpaddrumor \#$I\# Young $N is likely to make a name for $mself soon. A promising %race %class, the trainers say.
    endif
    if value(gradrumor) == 3
      mpaddrumor \#$I\# $N the %class was seen leaving the School of Heroes. I wonder what that %race will make of $mself.
    endif
    if value(gradrumor) == 4
      mpaddrumor \#$I\# Will that young %race %class, $N, survive long outside the School of Heroes? Only time will tell.
    endif
    if value(gradrumor) == 5
      mpaddrumor \#$I\# They say $N, that young %race %class, has killed all the imps in the Tower of Trials. Fortunately imps are easy to replace.
    endif
    if value(gradrumor) == 6
      mpaddrumor \#$I\# $N is one to keep an eye on, they say. A young %race %class, $e is, just graduated from the School of Heroes.
    endif
    if value(gradrumor) == 7
      mpaddrumor \#$I\# $N. You heard $s name from me first. An upcoming %race %class.
    endif
    if value(gradrumor) == 8
      mpaddrumor \#$I\# Hide the rats and lock up the lizards! $N the %race %class has just graduated from the School of Heroes.
    endif
    if value(gradrumor) == 9
      mpaddrumor \#$I\# Don\@t underestimate that %class, $N. Still fairly untrained, but no doubt $e is %raceart %race to watch.
    endif
    if value(gradrumor) == 10
      mpaddrumor \#$I\# I heard that %raceart %race %class named $N is among the latest to join the adventurers graduated from the School of Heroes.
    endif
  else
    mpvaluerand gradlie 1 4
    if value(gradlie) == 1
      mpaddrumor \#$I\# Poor $N. I heard that the rats were too much for $m, so $e failed $s %class training at the School of Heroes.
    endif
    if value(gradlie) == 2
      mpaddrumor \#$I\# The School of Heroes trainers finally barred the doors from that %race %class, $N. Some people just never learn.
    endif
    if value(gradlie) == 3
      mpaddrumor \#$I\# After %raceart %race %class named $N left a mountain of corpses--$s own--in the School of Heroes, $e was finally dismissed in shame.
    endif
    if value(gradlie) == 4
      mpaddrumor \#$I\# I hear %raceart %race %class, $N, got booted from the School of Heroes for \@misuse of imps\@. Whatever that is.
    endif
  endif
  break
endif
//
if compstr(2) == hero
  if value(class) / void
    mpaddrumor \#$I\# The shadows of the void grow stronger in Avendar. The %race $N has reached the pinnacle of study in the %class guild.
    break
  endif
  if value(class) / spirit
    mpaddrumor \#$I\# The light of spirit grows stronger in Avendar. I heard that $N, a %raceart %class, has completed training in the %class guild.
    break
  endif
  if value(class) / fire
    mpaddrumor \#$I\# The fires of $N, the %race %class, will spread throughout the land now that $e has completed $s guild training.
    break
  endif
  if value(class) / water
    mpaddrumor \#$I\# Those in need of healing may find succor--or an icebolt--from the %race %class, $N. $N has completed %class guild training.
    break
  endif
  if value(class) / earth
    mpaddrumor \#$I\# $N, %raceart %race %class, has finally completed $s guild training. What next--will stones fall from the sky?
    break
  endif
  if value(class) / air
    mpaddrumor \#$I\# I heard %classart %class named $N has earned the final rank in $s guild. But you never know...$e could have started the rumor $mself with that ear-trickery magic.
    break
  endif
  if value(class) == fighter
    mpaddrumor \#$I\# I heard that $N, a seasoned soldier of %race-kind, has recently completed $s %class guild-training.
    break
  endif
  if value(class) == swordmaster
    mpaddrumor \#$I\# The blades of $N the %race may soon become legend! They say $e has completed all training in the %class guild.
    break
  endif
  if value(class) == gladiator
    mpaddrumor \#$I\# Beware the spear and net of the new hero of Avendar, $N. A deadly %race with nearly any weapon, and vicious in corner, they say.
    break
  endif
  if value(class) == barbarian
    mpaddrumor \#$I\# The mighty %race %class known as $N has outgrown $s guild, and now seeks the challenges of a true hero. You\@d better stay out of $s path!
    break
  endif
  if value(class) == ranger
    mpaddrumor \#I\# The rangers have a new hero in the %race known as $N. A master of the wild, $e has completed all ranger training.
    break
  endif
  if value(class) == druid
    mpaddrumor \#$I\# The forests and fields have a great protector--or is it a greater danger--in $N, the %race %class. They say $e has just completed $s training in the %class guild.
    break
  endif
  if value(class) == assassin
    mpaddrumor \#$I\# They say that %classart %class, %raceart %race named $N, has mastered the %class guild. Beware blades in the shadows!
    break
  endif
  if value(class) == thief
    mpaddrumor \#$I\# Keep a tight hold on your coinpurse! They say that %classart %class, %raceart %race named $N, has completed all training in $s guild.
    break
  endif
  if value(class) == watcher
    mpaddrumor \#$I\# Maybe the streets will be safer and the criminals fewer now that $N, that %race %class, has finished training in the %class guild.
    break
  endif
  if value(class) == bard
    mpaddrumor \#$I\# No doubt we\@ll be hearing new songs from that %race $N, now that $e has finished $s training in the %class guild.
    break
  endif
  if value(class) == pscionicist
    mpaddrumor \#$I\# Guard your thoughts. They say %raceart %race %class named $N has completed $s guild training and can pluck thoughts from your mind like berries from a ripe bush.
    break
  endif
  if value(class) == alchemist
    mpaddrumor \#$I\# What new and wondrous elixirs will that %race %class $N be able to produce, now that $e has completed $s training in the %class guild?
    break
  endif
endif
//
if compstr(2) == sigil
  if rand(50)
    mpaddrumor \#$I\# They say $N the %race %class has received special notice from the Gods! What would they want with %raceart %race like $m?
  else
    mpaddrumor \#$I\# One of the Gods has noticed %raceart %race %class called $N. The word is that $e now bears a divine sigil.   
    break
  endif
endif
//
if compstr(2) == joinedhouse
  if inhouse($n) == champion
    mpvalueset housejoined Champions of Avendar
  endif
  if inhouse($n) == guardian
    mpvalueset housejoined Guardians of Law
  endif
  if inhouse($n) == raider
    mpvalueset housejoined Raiders of Twilight
  endif
  if inhouse($n) == knight
    mpvalueset housejoined Knights of Balance
  endif
  mpaddrumor \#$I\# I hear that $N, %raceart %race from the %class guild, has joined The %housejoined.
endif
~
>trigger_prog 100~
if isimmort($n)
  break
endif
// ******************************
mpecho RUMOR: trigger_prog now checking for $N
if isbitset($n) == 24028
else
  if level($n) > 10
    if level($n) < 20
      mpbitset $n 24028 1
      mpat $n mpforce $n make_nasty_rumors schoolgrad
      break
    endif
  endif
endif
//
if isbitset($n) == 24029
else
  if level($n) > 50
    mpbitset $n 24029 1
    mpat $n mpforce $n make_nasty_rumors hero
    break
  endif
endif
//
if isbitset($n) == 24030
else
  if iswearslotfull($n) == 20
    \\\\ no rumors for the School or wizi Shadow Mask sigils
    if iswielding($n) == 8511
    or iswielding($n) == 1250
    or iswielding($n) == 1251
    or iswielding($n) == 1253
    or iswielding($n) == 1254
    else
      mpbitset $n 24030 1
      mpat $n mpforce $n make_nasty_rumors sigil
      break
    endif
  endif
endif
//
if isbitset($n) == 24031
else
  if inhouse($n) == champion
  or inhouse($n) == guardian
  or inhouse($n) == raider
  or inhouse($n) == knight
    mpbitset $n 24031 1
    mpat $n mpforce $n make_nasty_rumors joinedhouse
    break
  endif
endif
~
>rand_prog 100~
// RUMORS
//   - PC has passed level 10                (bit 24028)
//   - has reached level 51                  (24029)
//   - has received a nonwizi sigil          (24030)
//   - has joined a house other than shunned (24031)
mpvalueup 0 1
if value(0) == 100
  mpvalueset 0 0
  if port() == 9999
    mpmasstrigger
  endif
endif
~
>data_prog races~
aelin
alatharya
caladaran
chtaren
chaja
ethron
human
kankoran
nefortu
shuddeni
srryn
~
>data_prog classes~
water scholar
earth scholar
void scholar
spirit scholar
air scholar
fire scholar
water templar
earth templar
void templar
spirit templar
air templar
fire templar
thief
watcher
assassin
bandit
no class scoundrel
no class scoundrel
fighter
swordmaster
barbarian
gladiator
no class scoundrel
ranger
gleeman
bard
no class scoundrel
alchemist
psionicist
druid
~
>verb_prog rumorme~
// manual rumor trigger for testing purposes
mpmasstrigger
mpvalueset 0 0
~
|
V4 135
bot publisher webinfo mob_135~
the webinfo publisher bot~
The webinfo publisher bot wades through the slush pile.
~
Sets up webwho, webrumor, weblevel, and webdeath
~
human~
water scholar~
AL 0 DFJLPZe N 0
60 26 35d107+1167 52d10+100 6d9+26 none~
hit~
-22 -22 -22 -6
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium flesh
>data_prog who_npcs~
This is the random npc list.
undead miner
phase spider
seraph
imp
zombie soldier
cat
ogre
hill giant
griffin
duck
titan
demon
Sy\@ceeran Warder
Ajim-Chiaj scout
golem
frog
lich servant
lich guard
death knight
khil\@ayum
sprite
sylph
dancer
rat-catcher
snake
skeleton
Zilba Gralci
smith
steam lizard
large rock lizard
greater shura
lesser shura
maglat
griffinrider
owl
bjorcha bull
duskin ewe
lion
srorsian
ethron ranger
caladaran druid
kankoran barbarian
human bandit
aelin bard
nefortu thief
shuddeni priest
alatharya gladiator
chaja bodyguard
ch\@taren slave
trap bot
~
>verb_prog gowebinfo~
mpvalueset 0 0
mpvalueset 1 0
mpvalueset 2 0
mpvalueset 3 0
mpvalueset 4 0
mpvalueset 5 0
mpmasstrigger
//
// DO THE WEBWHO
// 0 = immortals (-Notify) total
// 1 = mortals total
// 2 = random NPC total
// 3 = holds current mortal level check
// 4 = total mortal levels
// 5 = average mortal level
// 
if value(1) > 0
  mpmath 5 $4 / $1
endif
if value(1) == 0
  mpsetdata who_npcs
  // There aren\@t any PCs on, so we\@ll do a laggy NPC count.
  mpvaluerand whonpcloop 1 40
  loop 1 to %whonpcloop
    mpnextdata
    mpvalueset whonpcs $d
  endloop
  loop 1 to 100
    mpgoto 132
    mpgoto $v1.%whonpcs
    if inroom($i) == 132
    else
      mpvalueup 2 1
    endif
  endloop
  mpgoto 132
  if value(2) >= 50
    mpvalueset webwhotext There are 100 or more $ds currently in Avendar.
  else
    if value(2) > 1
      mpvalueset webwhotext There are $2 $ds currently in Avendar.
    else
      mpvalueset webwhotext There is 1 $d currently in Avendar.
    endif
  endif
else
  // There are PCs on, yay!
  if value(1) == 1
    mpvalueset webwhotext There is 1 character (level $5) adventuring now.
  else
    mpvalueset webwhotext There are $1 characters (avg. level $5) adventuring now.
  endif
endif
if port() == 9999
  mpdesc \@helpfile WEBWHO\@ \@%webwhotext\@ 
endif
~
>trigger_prog 100~
if isimmort($n)
  if name($n) == notify
  else
    mpvalueup 0 1
  endif
else
  mpget char $n level 3
  mpvalueup 4 $3
  mpvalueup 1 1
  if remembers($n)
  else
    mpremember $n
    mpmload 136
    mpforce mob_136 mpfocus $n
    mpstring mob mob_136 short the webinfobot for $N
    mpstring mob mob_136 long The webinfobot is tracking $N.
  endif
endif  
~
>speech_prog p ~
if name($n) == rumorbot rumor coordinator susan
  if port() == 9999
    mpdesc \@helpfile WEBRUMOR\@ \#$x\#
  endif
endif
~
>time_prog 0~
mpforce rumorbot mprumor
~
>hour_prog 100~
gowebinfo
~
|
V4 136
bot webinfoservant servant mob_136~
a webinfo servant bot~
A webinfo servant bot is here, informing about SOMEONE.
~
It helps to set up HELP WEBDEATH and HELP WEBLEVEL.
~
human~
water scholar~
AL 0 DFJLPZe N 0
52 26 35d107+1167 52d10+100 6d9+26 none~
hit~
-22 -22 -22 -6
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
>rand_prog 25~
if port() == 9999
  if isfocused($i)
    if isghost($f)
      if remembers($f)
      else
        mpremember $f
        mpdesc \@helpfile WEBDEATH\@ \@$F has died recently.\@
      endif
    else
      if remembers($f)
        mpforget $f
      endif
      if value(0) == 0
        mpget char $f level 0
      else
        mpget char $f level 1
        if value(1) > $0
          mpdesc \@helpfile WEBLEVEL\@ \@$F has reached level $1 in $S guild.\@
          mpvalueset 0 $1
        endif
      endif
    endif
  else
    mppurge self
  endif
else
  mppurge self
endif
~
|
V4 137
bot vault cleanup~
the vault cleanup bot~
The vault cleanup bot is here, purging stones of power.
~
The vault cleanup bot removes stones from inactive houses.  He also
enjoys sunsets, long walks on the Lidraeun beaches, and Dwarven Wine made
from the finest of plump helmets.  
~
human~
water scholar~
AL 0 DFJLPZe N 0
52 26 35d107+1167 52d10+100 6d9+26 none~
hit~
-22 -22 -22 -6
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium flesh
>time_prog 18~
mpmasstrigger
loop 0 to 3
  mpvalueup $v1 1
  mpsetdata houses
  mpnextdata $v1
  mpvalueset house $d
  mpsetdata vaults
  mpnextdata $v1
  mpvalueset vault $d
  if value($v1) == 180
  \\\\ first purge of a stone, there were no housed chars after 3 RL days
  or value($v1) == 240
  \\\\ a stone is then purged for each RL day thereafter
    mpvalueset $v1 0
    mpgoto %vault
    if objhere(12000)
      mppurge stoneofpower
      pray A stone of power was purged from the %house due to inactivity.
    endif
    mpgoto 133
    if value($v1) == 240
      mpvalueset $v1 180
    endif
  endif
endloop
~
>trigger_prog 100~
if isimmort($n)
else
  if inhouse($n) == shunned
    mpvalueset 0 0
  endif
  if inhouse($n) == guardian
    mpvalueset 1 0
  endif
  if inhouse($n) == raider
    mpvalueset 2 0
  endif
  if inhouse($n) == champion
    mpvalueset 3 0
  endif
endif
~
>data_prog vaults~
12202
12011
12119
12067
~
>data_prog houses~
Coven of the Shunned
Guardians of Law
Raiders of Twilight
Champions of Avendar
~
|
V4 150
templar ancient mob_150~
an ancient templar~
An ancient templar sits cross-legged on the ground.
~
This ancient human is exceptionally tall, towering over six and a half
feet.  Bone thin, his proud cheekbones stand out against his weathered
flesh, marking him of noble heritage.  Offsetting this noble demeanor is the
ramshackle nature of his attire -- dirty rags cover his chest, and filthy,
lice-ridden hide serves as his leggings.  His grey hair is matted and
shoulder length, with frayed ends periodically braided.  Despite his
unconventional attire, the most striking feature about the man are his eyes.
Unwavering, and touched with the fervor of a zealot, their piercing
intensity is underscored by an eerie gold light which suffuses the orbs of
his eyes.  
~
human~
water scholar~
ADJKLTb 0 DFJZ G 0
57 28 20d220+1100 0d0+0 5d13+27 none~
hit~
-22 -22 -22 -9
FHK 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 -1
AHMV ABCDEFGHIJK A medium unknown
>verb_prog p clear_the_tent~
emote departs.
mpgoto 8894
emote arrives.
yell The Boar!  The Boar for the Light!
~
>data_prog aramril~
esay rasps You seek to use the Staff to retake the Brotherhood\@s tower, then...
esay \@speaks in a harsh voice, rusty from disuse\@ You must know of the Staff\@s nature, then.
emote pauses, taking another sip of water.
esay \@takes a deep breath\@ Vysara and I rose up through the school together, and then in our respective guilds.
esay states He was from a village in the northeastern Brintors, I from the Broken Lands southeast of Earendam.
say We all know of the terrors of the War of Night, and the shuddeni resurgences.
emote slowly rolls his head around his shoulders in a slow circle, the vertebrae in his neck emitting a loud series of pops.
esay continues He and I had spent our youths - nay, our lives - researching the harmonics of earth combined with...
esay \@coughs again, less painfully\@ ...the free energies of the pure soul.
say We both felt the necessity for a fastness such as Kor Thrandir.  We were part of the founding group.
esay \@continues, a ghost of a smile crossing his lips\@ Ah, to be young again - how proud we were!  We anticipated the need  for the Seal before it had even been brought up.
esay \@explains, still speaking slowly\@ Using our knowledge of stone and stock, will and life, we attempted to close the  breach.
say And yet, with our combined might, we could not shut the way.
esay \@flexes a long, broad hand, the knuckles cracking in series\@ We found our weirds and cantrips lacking in substance.
\@Some devilry of the shuddeni, or a simple failure on our part.  It didn\@t matter.
esay explains We needed Earth magics, tied into the plane of Order, for substance and strength and immutability.
esay explains We needed the sanctity of the pure Spirit, to make something inviolable by the shuddeni.
esay explains And we needed the Ancient magics.  For in those secrets lie the knowledge of closings and of the True Names of  things.
say And thus we sought the one last surviving magus of that most primal of all powers.
esay states We quickly determined that a focus of power would be needed to bind the necessary energy.
emote stretches his lanky arms, bending them around with astonishing flexibility.
esay resumes ...The easy part, of course, is always planning.  A quest we then had to undertake, for the druids of Firiel.
say In exchange, they gave us a branch of heartwood from the Great Tree itself.
esay \@strokes his matted hair.  He continues\@ Then began the workings of the mei\@tzec.
\@Small pieces we had to barter for, from varied and diverse places.
esay lists One shard, recovered from fishermen of Ilodaiya.  Another from the Lsakia in the south.
esay continues And so on, until we deemed we had enough.  Working the metal was equally exhaustive.
esay continues Suffice to say, it took nearly a years\@ worth of forging, guided meditations, spiritual gifts from our people,  prayer and more prayer.
esay \@exhales, eyes growing distant\@ And thus we made the substance called \@elirium\@.  It was beautiful, even in its raw  form.
esay reminisces The ch\@taren said its natural shape reminded them of the ancient sculptures of Availlae.
emote slowly rubs his hands together in an evaluative manner, lost in thought.
esay \@starts slightly, continuing\@ Regardless.  The Staff is in the here and now, and it is up to us to use it.
beckon $f
emote stretches his lanky arms again, drawing a large breath.
esay lectures The affinity this Staff holds to the plane of Earth is strong.
esay \@points out\@ It has been told in tales of moving mountains.  Doubtless, it has the ability.
esay mentions Yet such an effort might consume the staff.  It can, however, shift significant weights without straining its  powers overmuch.
esay \@laughs dustily\@ I did in fact drop the upper Dantaron when I first made it.
say It used to have the same water table as the plains of Shargob -- bedrock and all.
esay instructs When you have need to make stone and earth itself motile, call upon the staff.
esay adds But do not use this power lightly.  Its response may be more than you anticipate, and it will draw its power back  from the earth but very slowly, so as not to disrupt certain elemental Balances.
pmote spends several minutes demonstrating the use and purpose of certain runes with $F.
esay demonstrates Use in combat will call for the earth to swallow your opponents.  When not fighting, it will transform your flesh diamond-hard.
mpbitset $f 341 1
ooc $f You now know how to \@invoke vysara earth\@.
furrow
esay \@tenses suddenly, growling\@ What am I doing?
esay \@begins to speak quickly, in low understones\@ You were giv\@n life by the Lord, and you waste away here.
esay reprimands Silent dedication, ascetic living - these do not kill shuddeni.  These do not preserve goodly men.
emote stares down at his hands.
echo After a long moment, the templar raises his head.
esay \@whispers to himself, the sound oddly loud\@ The Boar shall march to the lands of the living, then.
emote raises one aged hand, clenching it slowly into a fist.  His eyes close.
mpvalueset 8 9
esay \@calls out\@ Father Jolinn, I ask for your blessing!  I ask for my strength, one last time!
mpecho For a long moment, there is nothing but silence.
mpecho A delicate strain of glorious, achingly beautiful music filters through the air for the most fleeting of moments.
emote gasps, suddenly bathed in brilliant blue light!
mpdesc self extra_crispy_desc
emote is obscured by a cloud of swirling bluish globes which vanish as abruptly as they appear.
mpforce $f garbme
mpecho As the orbs slowly wink out of existence, $I reappears, covered in glowing, transparent armor.
mpstring mob self long An ancient templar stands here proudly, garbed in astral armor.
emote looks around the cave, expression that of a man suddenly-woken.
mpvalueset 8 8
esay states You now have knowledge of the staff, $F, as much as I can give.
mpechoat $f Involuntarily, words spring to your lips:
mpforce $f esay voices In the name of the Light, I will bear the Staff of Vysara to the Tower!
esay asks Where is the war council of the Alliance located?
mpvalueset 9 0
~
>speech_prog Earendam~
if value(8) == 7
  esay nods Very well, then.  The Boar marches forth.  Lord Jolinn bless you and guide you in your quest.
  emote jogs from the cave.
  esay \@calls over his shoulder at $F\@ Oh, try wearing the Staff again!
  mpgoto 11439
  mpvalueset 8 0
endif
~
>data_prog extra_crispy_desc~
This ancient human is exceptionally tall, towering over six and a half
feet.  Bone thin, his proud cheekbones stand out against his weathered
flesh, marking him of noble heritage.  His grey hair is combed into a long
mane, tied back in a braided tail.  His physique is of one of extremely
advanced age, yet he moves with grace and strength.  The most striking 
feature about the man are his eyes.  Unwavering, and touched with the 
fervor of a zealot, their piercing intensity is underscored by an eerie 
gold light which suffuses the orbs of his eyes.
~
>data_prog original_desc~
This ancient human is exceptionally tall, towering over six and a half
feet.  Bone thin, his proud cheekbones stand out against his weathered
flesh, marking him of noble heritage.  Offsetting this noble demeanor is the
ramshackle nature of his attire -- dirty rags cover his chest, and filthy,
lice-ridden hide serves as his leggings.  His grey hair is matted and
shoulder length, with frayed ends periodically braided.  Despite his
unconventional attire, the most striking feature about the man are his eyes.
Unwavering, and touched with the fervor of a zealot, their piercing
intensity is underscored by an eerie gold light which suffuses the orbs of
his eyes.  
~
>data_prog vysara~
nod self
emote stirs, moving slowly and stiffly.
emote opens his mouth, nothing but a raspy croak coming from his throat.
emote unfolds himself from his cross-legged pose, crawling stiffly over to the pool.
mpstring mob self long An ancient templar stands here, clad only in a loincloth.
drink
mpecho Slowly, painfully, the templar takes his feet.  He is surprisingly tall.
emote coughs dustily, clearing his throat.
esay \@blinks his intense gaze, eyes refocusing\@ You...have...it...?
emote coughs again, clearing his throat.
esay apologizes I...have not spoken in some time...
esay repeats You have the staff of my companion Vysara, long passed into Paradise.
esay \@asks, speaking very slowly and exactly\@ What is...your intent...with such a thing of power?
pmote regards $F curiously.
mpvalueset 9 0
~
>rand_prog 100~
if value(6) > 0
  mpvaluedown 6
endif
if value(9) == 1
  if rand(40)
    mpnextdata
    $d
  endif
endif
~
>give_prog staff vysara thick maple obj_356~
shake
emote chuckles sadly.
\@No, it will do no good in my hands.
give obj_356 $n
drop obj_356
~
>speech_prog scourge~
if value(8) == 0
  mpvalueset 8 40
  esay \@coughs, admitting\@ I know nothing of this ...Scourge, myself.
endif
if value(6) == 0
  mpvalueset 6 40
  esay \@coughs, admitting\@ I know nothing of this ...Scourge, myself.
endif
~
>speech_prog Aramril~
if remembers($n)
  if value(7) != 2
    mpecho The templar\@s eyes seem to flash with even greater zeal.
    mpsetdata aramril
    mpvalueset 9 1
    mpvalueset 7 2
  endif
endif
~
>speech_prog Vysara~
if ispc($n)
if iscarrying($n) == 356
  if iswielding($n) == 356
    if value(8) == 0
      if value(7) == 0
        if isbitset($n) == 341
        else
          mpsetdata vysara
          mpvalueset 9 1
          mpfocus $N
          mpremember $n
          pmote looks at $F.
          mpvalueset 7 0
        endif
      endif
    else
      if value(8) == 8
        if isbitset($n) == 340
          if isbitset($n) == 339
            esay adds Indeed, you seem to have full knowledge of its abilities.
          else
            esay notes You ought speak to Nora on the history of the spirit magics.
          endif
        else
          esay recommends You ought seek out the one other surviving maker of the staff, 
          say His knowledge of its most ancient of powers is unsurpassed -- he helped make it, after all.
        endif
        mpvalueset 8 7
      else
        if isimmort($n)
          mpechoat $n 8 isn\@t 8
        endif
      endif
    endif
  else
    emote stirs, looking around.
    esay \@looks at $N, then croaks\@ For a moment...I thought...
    emote falls silent once more.
  endif
else
  if isevil($n)
    emote remains noticeably silent.
  else
    emote seems to stir for a brief moment.
  endif
endif
endif
~
>verb_prog p garbme~
if isimmort($n)
or value(9) == 9
  mpoload 1583
  mpoload 3015
  mpoload 3016
  mpoload 3017
  mpoload 3018
  mpoload 3020
  mpoload 3021
  mpat 9700 wear all
  mpstring mob self long An ancient templar stands proudly here, polearm in hand.
  if value(9) != 9
    mpseewizi
    mpechoat $n Locked and loaded.
    mpunseewizi
  endif
endif
~
|
V4 151
wraith Zyal~
the wraith of Zyal~
A wraith of a srryn floats here, hunched over obscenely.
~
A cold, septic miasma swirls around this wraith, which appears as a
shadowy srryn.  Hunched over, the wraith of Zyal moves with an alarming
speed, swirling malevolently at will.  Within the shadows, he is clad in the
armor he bore as a templar.  
~
spirit~
water scholar~
ADLT 0 DFJTZ N 0
57 28 20d220+1100 0d0+0 5d13+27 none~
hit~
-22 -22 -22 -9
FHK DKLRb
26 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ADHLMV ABCDEFGHIJK K medium unknown
V4 152
Tszar Sth darklord saurian srryn~
Tszar Sth~
Tszar Sth, Saurian Darklord, is here.
~
Tszar Sth is an immense srryn, whose leathery arms and legs bulge with
sinew and muscle.  He wears the ritual garb of a shaman of Sitheus proudly,
letting the robes of a saurian darklord accentuate his already formidabble
features.  Also in evidence are a collection of fiercesome weapons and
loathesome reagants, marking his calling as a templar.  
~
srryn~
water scholar~
ADLT 0 DFJZ E 0
60 28 20d220+1100 0d0+0 5d13+27 none~
hit~
-22 -22 -22 -9
CFHKMNV 0
26 0 0 0 0 0 0 0 20 -20 0 0 20 0 0 0 0 20 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMX ABCDEFGIJKLQUVX C medium unknown
V4 153
demilich skull vaesh~
Vaeshir, the demilich~
Vaeshir, the demilich, floats here.
~
The demilich Vaeshir floats here, its form an ebony skull wreathed in an
ethereal blue flame.  One of the most powerful forms of undead, the demilich
before you contains is all that remains of the physical form of the archmage
Vaeshir, tied to a spirit which is free to roam the multiverse.  

Unthinkably powerful and intelligent, the demilich emanates and aura of fear
and dread, cloaking itself in black magic.  Its skull is free from any sign
of decay or age, and it almost seem to grin, its teeth replaced with
flawless fire opals.  
~
spirit~
water scholar~
ADL 0 DFTZ N 0
0 0 1d1+20000 0d0+0 1d40+40 bash~
blast~
0 0 0 0
FH DKLMRb
26 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand male 0 -1
ADHLMV ABCDEFGHIJK 0 medium flesh
V4 154
Tzet-Shasarik~
Tzet-Shasarik~
The midnight-black form of a young void dragon stands here.
~
A sinuous, serpentine form, the dragon Tzet-Shasarik rears above you, his
sleek, night-black scales shimmering softly.  Long, razor claws extend from
the creature\@s front feet, each one inscribed with the intricate image of a
haunting, eyeless mask.  
~
dragon~
water scholar~
A 0 JT N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 B
26 0 20 0 0 20 -20 0 20 -20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ACHMVZ ABCDEFGHIJKPQUVX 0 medium flesh
V4 155
hag old crone woman thief~
an old hag~
An old hag is here.
~
This old hag is dressed in the rags of one of Var Bandor\@s urchins.  She
cackles wickedly to herself, lost in her own sordid ruminations.  Belying
her tattered clothes and filthy flesh, though, are her eyes, which keenly
follow every detail of her surroundings.  
~
human~
water scholar~
ADLST 0 DFJZ N 0
57 28 20d220+1100 0d0+0 5d13+27 pierce~
stab~
-22 -22 -22 -9
FHK 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK A medium unknown
V4 156
wizi mobile2 guy~
the wizi mobile guy~
The wizi mobile guy is here.
~
~
human~
water scholar~
ADL 0 L N 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
>verb_prog p look mobile~
if mobvcheck($n) > 5
mpinterpret $n $x
break
endif
if class($n) == 2
if intelligence($n) > 18
if remembers($n)
else
mpinterpret $n $x
mpforce $n look fux0r
mpechoat $n Staring at the mobile, you begin the outlines of a pattern.  
mpechoat $n Perhaps if you examined it again, it will make itself apparent.
mpremember $n
mpmemvset 1 $n
endif
if remembers($n)
if mobvcheck($n) == 1
mpforce $n look mobile37
mpmemvup $n
break
endif
if mobvcheck($n) == 2
mpforce $n look mobile38
mpmemvup $n
break
endif
if mobvcheck($n) == 3
mpforce $n look mobile39
mpmemvup $n
break
endif
if mobvcheck($n) == 4
mpforce $n look mobile40
mpmemvup $n
break
endif
if mobvcheck($n) == 5
mpforce $n look mobile41
mpmemvup $n
mpforce $n look fux0r
mpknockout $n
mpaddaffect $n 127 58 5 0 0 131072
mpechoat $n You collapse.
mpset skill $n gate 100
mpset skill $n nexus 100
mpset skill $n inscribe 100
mpset char $n wis 15
break
endif
endif
else
mpinterpret $n $x
endif
else
mpinterpret $n $x
endif
~
>speech_prog p Zero Me~
mpmemvset 0 $n
mpecho I zeroed out $N
~
|
V4 157
raven black mob_157 rangercall~
a black raven~
A sleek, black raven is here.
~
A small bird about two feet in length, this black raven has few
distinguishing characteristics.  It has a strong, straight beak and short,
stocky legs.  Small eyes have an almost avaricious alertness to them.  Short
and pudgy, the bird seems deceptively quick, powering itself about with
purpose.  
~
song bird~
water scholar~
ALN F DEFT N 0
51 0 100d100+5000 0d0+0 0d0+0 slash~
talons~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMVW ABCDEFGHIJKP A medium unknown
>load_prog 100~
// Static Skills for the beast here
mpaddskill self 245 100
mpaddskill self 507 100
~
>verb_prog ravensearch~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpfocus $n 1
      if isghost($f1)
      else
        mpvaluerand skillcheck 0 90
        if skill[272]($f1) > %skillcheck
          mpget mob $f0 level 5
          mpset mob $f0 level 90
          search
          mpset mob $f0 level 5
          mplag $n 2
          mpforce $f1 look
        endif
      endif
    endif
  endif
endif
~
>verb_prog ravenstrike~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if value(1) > 0
          mplag $n 1
          mpechoat $f1 The raven ruffles its feathers and caws in defiance.
          mpechoaround $f1 A raven ruffles its feathers and caws.
        else
          mplag $n 2
          mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
          if skill[272]($f1) > %skillcheck
// mptrigger figures out who the mob is fighting
            mpfocus $i 1
            mproomcmd mptrigger all
// check versus mob level
            mpget mob $f1 level 5
            mpmath 5 ($5 + 15) * 145 / 100
            if rand($5)
// check versus the target int
              mpvaluerand statcheck 20 30
              if ispc($f0)
                mpget char $f0 int 5
              else
                mpget mob $f0 int 5
              endif
              if value(5) < %statcheck
                mpvalueset 1 12
                mpechoat $f0 The black raven flies at your face, clawing and screeching!
                mpechoaround $f0 A black raven flies at $F0\@s, screeching and clawing at $S0 face!
                mpoload 8751 on $f0
              else
                mpechoat $f0 The black raven flies at your face but you are not distracted.
                mpechoaround $f0 A black raven flies at $F0\@s face, but fails to distract $M0.
              endif
            else
              mpechoat $f0 The black raven flies at your face but you are not distracted.
              mpechoaround $f0 A black raven flies at $F0\@s face, but fails to distract $M0.
            endif
          else
            mpechoat $f0 The black raven flies at your face but you are not distracted.
            mpechoaround $f0 A black raven flies at $F0\@s face, but fails to distract $M0.
          endif
        endif
      endif
    endif
  endif
endif
~
>verb_prog ravenwatch~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if compstr(2) == 
          if value(6) == 1
            mpvalueset 6 0
            mpechoat $f1 The raven no longer looks vigilant.
          else
            mpechoat $f1 The raven looks at your curiously.
            o $f1 You must indicate a target.  Syntax: ravenwatch <target>
          endif
        else
          mplag $n 2
          mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
          if skill[272]($f1) > %skillcheck
            mpfocus $y2 0
            if ispc($f0)
              if isimmort($f0)
              or snaffected($f0) == 303
                o $f1 The raven must be able to see your target to activate this ability.
              else
                mpvalueset 6 1
                mpvalueset 7 0
                mpvalueset 8 0
                mpvalueset 9 0
                mpechoat $f1 The raven sharpens its gaze and looks more vigilant.
              endif
            else
              mpechoat $f1 The raven looks at you curiously.
              o $f1 Only PCs currently in the realm are valid targets.
            endif
          else
            mpechoat $f1 You fail to communicate properly with the raven.
          endif
        endif
      endif
    endif
  endif
endif
~
>rand_prog 100~
// Cooldowns on variables 0 to 2
// Passive non-combat skills
if value(0) > 0
  mpvaluedown 0
endif
if value(1) > 0
  mpvaluedown 1
endif
if value(2) > 0
  mpvaluedown 2
endif
// sharp vision skill
if snaffected($i) == 245
else
  mpaddaffect $i 245 51 10 0 0 0 A
endif
// ravenwatch skill - cooldown variable 0, off/on variable 6
if rand(90)
  if value(6) == 1
    if value(0) == 0
      if inarea($f0)
        if sector($f0) == underwater
        or sector($f0) == underground
        or snaffected($f0) == 308
        else
          if sector($f1) == underwater
          or sector($f1) == underground
          else
            mpechoat $f1 The raven caws loudly, alerting you to the presence of $F0.
            mpechoaround $f1 A black raven caws loudly.
            mpvalueset 0 8
          endif
        endif
      endif
    endif
  endif
endif
~
>fight_prog 100~
// Turn off selected non-combat skills
mpvalueset 6 0
mpvalueset 7 0
mpvalueset 8 0
mpvalueset 9 0
// Cooldowns on variables 0 to 2
// Passive combat skills
if value(0) > 0
  mpvaluedown 0
endif
if value(1) > 0
  mpvaluedown 1
endif
if value(2) > 0
  mpvaluedown 2
endif
// Common passive skill
// mptrigger figures out who the mob is fighting
mproomcmd mptrigger all
if rand(50)
// check versus mob level
  mpget mob $i level 5
  mpmath dmgamount $5 / 2
  mpmath 5 ($5 + 15) * 145 / 100
  if rand($5)
// check versus the target dex
    mpvaluerand statcheck 20 30
    if ispc($f0)
      mpget char $f0 dex 5
    else
      mpget mob $f0 dex 5
    endif
    if value(5) < %statcheck
      mpdammess $f0 %dmgamount peck
      mpdamtype $f0 1 1 %dmgamount 2
    endif
  endif
endif
~
>trigger_prog 100~
// Checks to see who the animal is fighting
if isfighting($i) == $n
  mpfocus $n 0
endif
~
>speech_prog report~
if isimmort($n)
  say F0 is $F0
  say F1 is $F1
  say N is $N
endif
~
>verb_prog grizzlycharge~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if compstr(2) == 
          if value(6) == 0
            mpechoat $f1 The grizzly growls defiantly.
            o $f1 You must indicate a target.  Syntax: grizzlycharge <target>
          else
            mpechoat $f1 The grizzly calms down.
            mpvalueset 6 0
          endif
        else
          if value(0) > 0
            mpechoat $f1 The grizzly snorts exhaustedly and refuses your command.
            mpechoaround $f1 The grizzly snorts at $F1.
          else
            mplag $n 2
            mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
            if skill[272]($f1) > %skillcheck
              mpfocus $y2 0
              if ispc($f0)
                if isimmort($f0)
                or sector($f1) != forest
                or snaffected($f1) == 192
                or snaffected($f1) == 303
                  mpechoat $f1 The grizzly growls defiantly.
                  o $f1 You must be in the forest and able to see your target to activate this ability.
                else
                  mpvalueset 0 16
                  mpvalueset 6 1
                  mpvalueset 7 0
                  mpvalueset 8 0
                  mpvalueset 9 0
                  mpechoat $f1 The bear paws at the forest floor and snarls in rage.
                  mpechoaround $f1 A bear paws at the forest floor and snarls in rage.
                endif
              else
                mpechoat $f1 The grizzly growls defiantly.
                o $f1 Only PCs currently in the realm are valid targets.
              endif
            else
              mpechoat $f1 You fail to communicate properly with the bear.
            endif
          endif
        endif
      endif
    endif
  endif
endif
~
>greet_prog 100~
if value(6) == 1
  if name($n) == $f0
    if snaffected($f1) == 303
      mpechoat $f0 The grizzly bear bellows at your intrusion and attacks!
      mpechoaround $f0 The grizzly bear bellows at $F0\@s arrival and charges $M0!
      mpkill $f0
      mpvalueset 6 0
    endif
  endif
endif
~
>verb_prog grizzlystrike~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if value(1) > 0
          mplag $n 1
          mpechoat $f1 The grizzly emits a low, gutteral roar.
          mpechoaround $f1 A grizzly emits a low, gutteral roar.
        else
          mplag $n 2
          mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
          if skill[272]($f1) > %skillcheck
// mptrigger figures out who the mob is fighting
            mpfocus $i 1
            mproomcmd mptrigger all
// check versus mob level
            mpget mob $f1 level 5
            mpmath 5 ($5 + 15) * 145 / 100
            if rand($5)
// check versus the target str
              mpvaluerand statcheck 15 30
              if ispc($f0)
                mpget char $f0 str 5
              else
                mpget mob $f0 str 5
              endif
              if value(5) < %statcheck
                mpvalueset 1 12
                mpvalueset 7 3
                mpvalueset 6 0
                mpvalueset 8 0
                mpvalueset 9 0
                mpechoat $f0 The grizzly lunges at you and strikes you heavily in the chest!
                mpechoaround $f0 The grizzly lunges at $F0 and strikes $M0 heavily in the chest!
                mpget mob $f1 level 5
                mpmath dmgamount $5 * 2
                mpdammess $f0 %dmgamount strike
                if snaffected($f0) == 110
                or snaffected($f0) == 393
                or snaffected($f0) == 354
                or snaffected($f0) == 219
                or snaffected($f0) == 689
                or snaffected($f0) == 551
                or snaffected($f0) == 508
                  mpmath 7  - 2
                endif
                if class($f0) == 25
                or class($f0) == 14
                  mpmath 7  - 1
                endif
                if size($f0) > medium
                  mpmath 7  - 2
                else
                  if size($f0) < medium
                    mpmath 7  + 1
                  endif
                endif
                if value(7) > 0
                  mpechoat $f0 The strength of the blow knocks you over!
                  mpechoaround $f0 The strength of the blow knocks $F0 over!
                endif
              else
                mpechoat $f0 The grizzly lunges at you but you avoid its powerful strike.
                mpechoaround $f0 The grizzly lunges at $F0 but they avoid the strike.
              endif
            else
              mpechoat $f0 The grizzly lunges at you but you avoid its powerful strike.
              mpechoaround $f0 The grizzly lunges at $F0 but they avoid the strike.
            endif
          else
            mpechoat $f0 The grizzly lunges at you but you avoid its powerful strike.
            mpechoaround $f0 The grizzly lunges at $F0 but they avoid the strike.
          endif
      endif
    endif
  endif
endif
~
>verb_prog bearstrike~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if value(1) < 25
          mplag $n 1
          emote emits a low, tired growl.
        else
          mplag $n 2
          mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
          if skill[272]($f1) > %skillcheck
// mptrigger figures out who the mob is fighting
            mproomcmd mptrigger all
// check versus the target dex
            mpvaluerand statcheck 15 30
            if ispc($f0)
              mpget char $f0 dex 5
            else
              mpget mob $f0 dex 5
            endif
            if value(5) < %statcheck
// check versus mob level
              mpget mob $i level 5
              mpmath 5 ($5 + 15) * 145 / 100
              if rand($5)
                mpvalueset 3 0
                pmote snarls with bloodlust and mauls $F0 repeatedly!
                if value(1) > 100
                  mpvalueset 3 10
                else
                  if value(1) > 75
                    mpvalueset 3 6
                  else
                    if value(1) > 50
                      mpvalueset 3 3
                    else
                      mpvalueset 3 2
                    endif
                  endif
                endif
                mpvalueset 1 0
                mpget mob $i level 5
                loop 1 to $3
                  mpvaluerand dmgamount 1 $5
                  mpdammess $f0 %dmgamount mauling
                  mpdamtype $f0 1 1 %dmgamount 3
                endloop
              endif
            else
              mpechoat $f0 The black bear attempts to maul you but you avoid the strike.
              mpechoaround $f0 The black bear attempts to maul $F0 but misses.
            endif
          else
            mpechoat $f0 The black bear attempts to maul you but you avoid the strike.
            mpechoaround $f0 The black bear attempts to maul $F0 but misses.
          endif
        endif
      endif
    endif
  endif
endif
~
>verb_prog bearguard~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if value(6) == 1
          mplag $n 1
          mpvalueset 6 0
          mpechoat $f1 The bear grunts and loses its interest in protecting you.
          mpechoaround $f1 The bear grunts.
        else
          if hitprcnt($i) < 75
          or isfighting($i)
            mplag $n 1
            mpechoat $f1 The bear snarls with bloodlust and ignores you.
          else
            mplag $n 3
            mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
            if skill[272]($f1) > %skillcheck
              if snaffected($f1) == 87
              or snaffected($f1) == 96
                o $f1 The bear must be able to see you to activate this ability.
              else
                mpvalueset 6 1
                mpvalueset 7 0
                mpvalueset 8 0
                mpvalueset 9 0
                mpechoat $f1 The bear begins to circle you and growl at nearby threats.
                mpechoaround $f1 The bear begins to circle $F1 and growl at those near $M1.
              endif
            else
              mpechoat $f1 You fail to communicate properly with the bear.
            endif
          endif
        endif
      endif
    endif
  endif
endif
~
>verb_prog hawkstrike~
if ispc($n)
//  if ischarmed($i)
//    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
//      if isghost($f1)
//      else
        if value(1) > 0
          mplag $n 1
          mpechoat $f1 The hawk ruffles its feathers and caws in defiance.
          mpechoaround $f1 A hawk ruffles its feathers and caws.
        else
          mplag $n 2
          mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
          if skill[272]($f1) > %skillcheck
// mptrigger figures out who the mob is fighting
            mpfocus $i 1
            mproomcmd mptrigger all
// check versus mob level
            mpget mob $f1 level 5
            mpmath 5 ($5 + 15) * 145 / 100
            if rand($5)
// check versus the target dex
              mpvaluerand statcheck 20 30
              if ispc($f0)
                mpget char $f0 dex 5
              else
                mpget mob $f0 dex 5
              endif
              if value(5) < %statcheck
                mpvalueset 1 12
                mpechoat $f0 The hawk flies at you, raking its claws across your face!
                mpechoaround $f0 A hawk flies at $F0, raking its claws across $S0 face!
                mpget mob $f1 level 5
                mpmath dmgamount $5
                mpdammess $f0 %dmgamount raking claws
                mpdamtype $f0 1 1 %dmgamount 3
                mpaddskill $f1 236 100
                gouge
                mpremoveskill $f1 236
              else
                mpechoat $f0 The hawk flies at you but you avoid its raking claws.
                mpechoaround $f0 A hawk flies at $F0 but they avoid the raking claws.
              endif
            else
              mpechoat $f0 The hawk flies at you but you avoid its raking claws.
              mpechoaround $f0 A hawk flies at $F0 but they avoid the raking claws.
            endif
          else
            mpechoat $f0 The hawk flies at you but you avoid its raking claws.
            mpechoaround $f0 A hawk flies at $F0 but they avoid the raking claws.
          endif
//      endif
//    endif
//  endif
endif
~
>verb_prog homehawk~
mpfocus $y3 1
if ismaster($f1)
  if value(6) == 1
    mpvalueset 6 0
    if compstr(2) == yes
      mpechoat $f1 The hawk returns to you, cawing to signal you that $F0 passed its location.
      mpechoaround $f1 A hawk returns to travel with $F1.
      mpgoto $f1
    else
      mpechoat $f1 The hawk returns to you, signalling that it has not spotted its target.
      mpechoaround $f1 A hawk returns to travel with $F1.
      mpgoto $f1
    endif
  endif
endif
~
>verb_prog hawksentry~
if ispc($n)
  if ischarmed($i)
    if ismaster($n)
      mpunfocus 0
      mpfocus $n 1
      if isghost($f1)
      else
        if compstr(2) == 
          if value(6) == 0
            mpechoat $f1 The hawk looks at you curiously.
            o $f1 You must indicate a target.  Syntax: hawksentry <target>
          endif
        else
          mplag $n 2
          mpvaluerand skillcheck 0 90
// Do skill check for appropriate skill (call animal)
          if skill[272]($f1) > %skillcheck
            mpfocus $y2 0
            if ispc($f0)
              if isimmort($f0)
              or isindoors($f1)
              or snaffected($f0) == 192
              or snaffected($f0) == 303
                mpechoat $f1 The hawk looks at you curiously.
                o $f1 The hawk must be outside and able to see your target to activate this ability.
              else
                mpvalueset 6 1
                mpvalueset 7 0
                mpvalueset 8 0
                mpvalueset 9 0
                mpechoat $f1 The hawk ascends into the sky, disappearing from sight.
                mpechoaround $f1 A hawk flies up into the sky and disappears from sight.
                mpmload 8790
                hawkmobsentry $f0 $f1
                mpgoto 8600
              endif
            else
              mpechoat $f1 The hawk looks at you curiously.
              o $f1 Only PCs currently in the realm are valid targets.
            endif
          else
            mpechoat $f1 You fail to communicate properly with the hawk.
          endif
        endif
      endif
    endif
  endif
endif
~
|
V4 158
plucky red hen~
a plucky hen~
A plucky red hen sits here, clucking loudly at your suggestions.
~
~
water fowl~
water scholar~
A 0 Tb N 0
0 0 9d9+1000 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 CD
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMVW ABCDEFGHIJKP 0 medium flesh
>rand_prog 100~
mproomcmd mptrigger all
~
>trigger_prog 100~
if ispc($n)
if remembers($n)
else
tell $n Cluck!
tell $n Remember to put your suggestions in this format:
tell $n <spell/skill name>: <new/improved echo>
tell $n Cluck cluck cluck!
mpremember $n
endif
endif
~
|
V4 159
stonepowermovebot~
the stonepowermovebot~
A nondescript figure stands here.
~
You shouldn\@t see this.  This mob exists to help move stones
of power to vaults, if the stone is left outside the House.
~
human~
water scholar~
AL 0 DFJZe N 0
60 1 1d1+1000 1d1+1 1d2+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
V4 160
bot minister illusions~
the minister for the restriction of illusions~
A bot is here, placing restrictions on illusions.
~
~
human~
water scholar~
AL 0 DFJLZe N 0
60 1 1d1+0 1d1+1 1d2+0 none~
hit~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AHMV ABCDEFGHIJK 0 medium flesh
>rand_prog 100~
loop 1 to 2
  mpfocus $v1.leviathan
  if name($f) / leviathan
    if ischarmed($f)
      if sector($f) == swim
      or sector($f) == noswim
      or sector($f) == underwater
        break
      else
        mpat $f mpecho The illusion of $F isn\@t believable, being away from the water.
        mpat $f mppurge $f
      endif
    endif
  endif
endloop
~
|
V4 165
golem spiritgolem construct gleaming glass spirit spirit-light light humanesque mob_165~
a golem of spirit~
A gleaming construct of glass and spirit-light stands here, formed into a humanesque golem.
~
This golem shines a bright blue from its inner light which flickers,
pulses, and flashes with a joyful exuberance.  Its surface, encrusted with
thin plates of jointed glass, is near-perfectly smooth and clear, though
small slivers of illumination shimmer through the ill-fitted seams.  Two
motes glow consistently on the appendage that can best be described as its
head.  
~
generic~
water scholar~
ADL 0 S N 0
0 5 1d1+0 0d0+0 0d0+0 holy~
wrath~
0 0 0 0
F 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 166
golem construct dirty opaque ice watergolem humanesque mob_166 water~
a golem of water~
A construct of dirty, opaque ice stands here, formed into a humanesque golem.
~
Composed of an ever-forming and ever-changing state of opaque ice, dirty
slush and water rivulets, this water golem has a vague humanoid shape about
it.  Two small, symmetrically spaced orbs blink every so often, shattering
ice-crusted eyelids which constantly form in a slow cycle of water, dirty
slush and ice.  Though its surface is a patchwork of various stages of water
formation, the golem seems to be quite solid.  
~
generic~
water scholar~
ADL 0 S N 0
0 0 1d1+0 0d0+0 0d0+0 cold~
freezing grip~
0 0 0 0
C 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
>fight_prog 5~
mpecho $I closes its eyes for a moment, and a soft glow suffuses it.
mpcast 77 51 $i
~
|
V4 167
golem construct burning firegolem glowing slag humanesque mob_167 fire~
a golem of fire~
A burning construct of glowing slag stands here, formed into a humanesque golem.
~
Wrought of perpetually smouldering fire, this hulking golem has a
humanesque form.  Two symmetrically spaced orbs flicker with flame and serve
as eyes on what can best be described as its head, and its skin is a
mishmash of overlapping scraggy charcoal.  Tiny channels of lava carve
through the hotter spots upon its surface, and minute avalanches of ash
tumble down the cooler spots.  
~
generic~
water scholar~
ADL 0 S N 0
0 5 1d1+0 0d0+0 1d1+5 fire~
searing grip~
0 0 0 0
F 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 168
golem earthgolem glistening construct animated clay humanesque mob_168 earth~
a golem of earth~
A glistening construct of animated clay stands here, formed into a humanesque golem.
~
Constructed of various earth textures and glistening stone, this golem
has a humanesque form.  Two small, cloudy diamonds veined with impurities
serve as eyes on what can be best described as its head.  Its skin is
mud-slicked in some places, and patches of the gelatinous substance
haphazardly connect jagged miniature mountain ranges to soft, rich loam, and
rash-like spots of sand to pitted rock.  
~
generic~
water scholar~
ADL 0 S N 0
0 0 1d1+500 0d0+0 1d1+2 bash~
pound~
0 0 0 0
C 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 169
golem airgolem grey construct gray cloud cloudweave humanesque mob_169 air~
a golem of air~
A grey construct of cloudweave has been formed into a humaneseque golem.
~
Woven of fog wisps, precipitation and gentle currents, this hulking golem
swirls with a humanesque form.  Insubstantial grey cloudweave rolls through
its opaque inner core, and occasional thunder from within is muted by its
seemingly solid skin.  A near-constant electric crackle emanates from what
can be best described as its head, and the sound is only interrupted when it
blinks its lightning-jagged eyes.  
~
generic~
water scholar~
ADL 0 ST N 0
0 3 1d1+0 0d0+0 0d0+0 lightning~
shocking grip~
0 0 0 0
FHN 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 170
golem nature construct humanesque mob_170~
a golem of nature~
A feral, humanesque construct stands here, covered in scales, fur, and feathers.
~
An assemblage of scales, pelts and feathers, this hulking golem looks far
from humanesque.  Bipedal elephantine legs allow for movement, and its short
furred ears, curved yellowed tusks, and lashing striped tail seem held
together with thin fibers of creeping foliage.  Two small black serpentine
eyes glisten wetly in what can best be described as its head when struck
with lowlight.  
~
generic~
water scholar~
ADL 0 S N 0
0 3 1d1+0 0d0+0 1d1+2 slash~
claw~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 10 10 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 171
golem ancientgolem solid construct transparent shimmering sand humanesque mob_171 ancient~
a golem of ancient~
A solid construct of transparent, shimmering sand has been formed into a humanesque golem.
~
A hulking, humanesque figure is here, bulky body formed from a mass of
ever-swirling transparent sands.  The granulated crystal is in constant
motion, sifting and spinning, though the overall shape and form of the golem
do not change.  The sand shimmers with ancient powers, a faint iridescence
reflecting off of the moiling surface with a glistening sheen.  A round head
carries two slightly luminescent eyes of golden quartz, the raw stones
possessing an oddly alert look to them.  
~
generic~
water scholar~
ADL 0 S N 0
0 2 1d1+250 0d0+0 1d1+1 energy~
magic~
0 0 0 0
K 0
26 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 172
golem transmogrifygolem transmogrify construct squirming flickering patched variety mob_172 transmogrification transmogrificationgolem~
a golem of transmogrification~
A flickering, squirming construct patched together from a variety of materials stands here.
~
A seemingly slapdash construction of metal, wood, clay, sand, flesh, and
several other less-easily identifiable materials, this golem seems to be in
a constant state of flux.  Rippling and shifting patches roil across the
surface of its body, the wood decaying and re-forming, metal rusting and
corroding before becoming bright again.  Flesh seems to wither and age, and
then to regain its vitality.  The entire golem seems fluid and shifting, and
often flows around or through obstacles rather than avoiding them.  Two
gleaming eyes of greasy quicksilver, rippling as the golem moves, sit in the
round head.  
~
generic~
water scholar~
ADL 0 SU N 0
0 5 1d1+0 0d0+0 0d0+0 bash~
punch~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 173
golem voidgolem void fleshy hairless construct pale corpselike mob_173~
a golem of void~
A fleshy, hairless construct stands here, pale and corpselike.
~
This construct is made from nude, hairless-pink flesh, which has an
unhealthy, inflamed look to it.  The motions of the thing are rubbery, but
supported as if by some unearthly string.  The distinctly humanesque arms
and legs, however end in stumps of tentacular bundles rather than digits. 
There is no exact head which can be identified on the construct, but there
are a single large, nodular mound which rises off its torso.  No openings or
separate organs are visible which might indicate any sort of sensory
apparatus other than touch, though two faint depressions occupy the spaces
normally reserved for eyes.  
~
generic~
water scholar~
ADL 0 S N 0
0 0 1d1+0 0d0+0 0d0+0 negative~
unholy touch~
0 0 0 0
CI 0
26 0 0 0 0 0 0 0 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AMV ABCDEFGHIJK 0 medium flesh
V4 174
homonculus %s~
a homonculus of %s~
A homonculus of %s is here.
~
~
doll~
water scholar~
ADHL 0 0 N 0
0 5 10d20+100 0d0+0 1d1+1 pierce~
poke~
-5 -5 -5 -5
0 ILMNPQR
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AEHJMVc ABCDEFGHIJK 0 medium flesh
>fight_prog 100~
flee
~
|
V4 175
zombie undead cursezombie~
a zombie of the corpse of %s~
An animate corpse of %s stumbles along here.
~
This hideous shambling beast is formed of rotting flesh and grotesquely
exposed bone.  The average person would gag at the sight of it, and it gives
off a noxious odor.  
~
doll~
water scholar~
AO 0 0 E 0
0 0 0d0+0 0d0+0 0d0+0 none~
hit~
0 0 0 0
0 ILMNPQR
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AEHJMVc ABCDEFGHIJK A medium unknown
V4 191
wailing spirit~
a wailing spirit~
A wailing spirit is here, crying out for justice.
~
~
spirit~
water scholar~
A 0 DFTZ N 0
58 0 1d100+1 0d0+0 0d0+0 holy~
wrath~
0 0 0 0
0 CDKLRb
26 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
ADHLMV ABCDEFGHIJK K medium unknown
>speech_prog p Spirit, some Hamlet, if you please.~
emote stands upright, and clears its throat.
mpvalueset 1 1
mpvalueset 2 0
~
>rand_prog 100~
if mobvalue(1) > 0
  if mobvalue(1) == 1
     esay recites To be, or not to be: that is the question:
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 2
     esay recites Whether \@tis nobler in the mind to suffer
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 3
     esay recites The slings and arrows of outrageous fortune,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 4
     esay recites Or to take arms against a sea of troubles,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 5
     esay recites And by opposing end them? To die: to sleep;
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 6
     esay recites No more; and by a sleep to say we end
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 7
     esay recites The heart-ache and the thousand natural shocks
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 8
     esay recites That flesh is heir to, \@tis a consummation
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 9
     esay recites Devoutly to be wish\@d. To die, to sleep;
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 10
     esay recites To sleep: perchance to dream: ay, there\@s the rub;
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 11
     esay recites For in that sleep of death what dreams may come
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 12
     esay recites When we have shuffled off this mortal coil,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 13
     esay recites Must give us pause: there\@s the respect
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 14
     esay recites That makes calamity of so long life;
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 15
     esay recites For who would bear the whips and scorns of time,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 16
     esay recites The oppressor\@s wrong, the proud man\@s contumely,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 17
     esay recites The pangs of despised love, the law\@s delay,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 18
     esay recites The insolence of office and the spurns
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 19
     esay recites That patient merit of the unworthy takes,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 20
     esay recites When he himself might his quietus make
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 21
     esay recites With a bare bodkin? who would fardels bear,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 22
     esay recites To grunt and sweat under a weary life,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 23
     esay recites But that the dread of something after death,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 24
     esay recites The undiscover\@d country from whose bourn
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 25
     esay recites No traveller returns, puzzles the will
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 26
     esay recites And makes us rather bear those ills we have
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 27
     esay recites Than fly to others that we know not of?
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 28
     esay recites Thus conscience does make cowards of us all;
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 29
     esay recites And thus the native hue of resolution
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 30
     esay recites Is sicklied o\@er with the pale cast of thought,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 31
     esay recites And enterprises of great pith and moment
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 32
     esay recites With this regard their currents turn awry,
     mpvalueup 1
     break
  endif
  if mobvalue(1) == 33
     esay recites And lose the name of action
     bow
     mpvalueset 1 0
     mpvalueset 2 0
     break
  endif
  mpvalueset 1 0
  break
endif
if rand(2)
  mptrigger self
endif
~
>speech_prog p Continue, spirit.~
emote nods acquiescently.
say As you wish.
mpvalueset 1 $2
mpvalueset 2 0
~
>speech_prog p Rest, rest, perturbed spirit!~
say As you wish.
mpvalueset 2 $1
mpvalueset 1 0
~
>speech_prog Shakespeare~
mptrigger self
~
>trigger_prog 100~
mpvaluerand 0 1 19
if mobvalue(0) == 1
  esay recites Be not afraid of greatness: some are born great, some achieve greatness, and some have greatness thrust upon them.
  break
endif
if mobvalue(0) == 2
  esay recites say Romeo, Romeo, wherefore art thou, / Romeo? / Deny thy father, and refuse thy name...
  break
endif
if mobvalue(0) == 3
  esay recites This above all; to thine own self be true.
  break
endif
if mobvalue(0) == 4
  esay recites It is not in the stars to hold our destiny but in ourselves.
  break
endif
if mobvalue(0) == 5
  esay recites Our doubts are traitors and make us lose the good we oft might win by fearing to attempt.
  break
endif
if mobvalue(0) == 6
  esay recites To die, to sleep --
  esay recites To sleep, perchance to dream, ay there\@s the rub,
  esay recites For in that sleep of death what dreams may come
  esay recites When we have shuffled off this mortal coil,
  esay recites Must give us pause; there\@s the respect
  esay recites That makes calamity of so long life.
  break
endif
if mobvalue(0) == 7
  esay recites Our doubts are traitors,
  esay recites And make us lose the good we oft might win
  esay recites By fearing to attempt.
  break
endif
if mobvalue(0) == 8
  esay recites No legacy is so rich as honesty.
  break
endif
if mobvalue(0) == 9
  esay recites There are more things in heaven and earth, Horatio,
  esay recites Than are dreamt of in your philosophy
  break
endif
if mobvalue(0) == 10
  esay recites Cowards die many times before their deaths;
  esay recites The valiant never taste of death but once.
  break
endif
if mobvalue(0) == 11
  esay recites The lady doth protest too much, methinks.
  break
endif
if mobvalue(0) == 12
  esay recites The fashion wears out more apparel than the man.
  break
endif
if mobvalue(0) == 13
  esay recites Age cannot wither her, nor custom stale
  esay recites Her infinite variety: other women cloy
  esay recites The appetites they feed, but she makes hungry
  esay recites Where most she satisfies.
  break
endif
if mobvalue(0) == 14
  esay recites Alas, poor Yorick! I knew him Horatio, a fellow of infinite jest, of most excellent fancy...
  break
endif
if mobvalue(0) == 15
  esay recites All the world\@s a stage,
  esay recites And all the men and women merely players.
  esay recites They have their exits and their entrances,
  esay recites And one man in his time plays many parts,
  esay recites His acts being seven ages.
  break
endif
if mobvalue(0) == 16
  esay recites He was my friend, faithful, and just to me;
  esay recites But Brutus says, he was ambitious,
  esay recites And Brutus is an honorable man.
  esay recites He hath brought many captives home to Rome,
  esay recites Whose ransoms did the general coffers fill.
  esay recites Did this in Caesar seem ambitious?
  esay recites When the poor have cried, Caesar hath wept.
  esay recites Ambition should me made of sterner stuff,
  esay recites Yet Brutus says, he was ambitious;
  esay recites And Brutus is an honorable man.
  break
endif
if mobvalue(0) == 17
  esay recites But then I sigh, and with a piece of scripture,
  esay recites Tell them that God bids us do good for evil.
  esay recites And thus I clothe my naked villainy
  esay recites With odd old ends stolen forth of holy writ,
  esay recites And seem I a saint, when most I play the Devil
  break
endif
if mobvalue(0) == 18
  esay recites Angels and ministers of grace defend us.
  esay recites Be thou a spirit of health, or goblin damned,
  esay recites Bring with thee airs from heaven, or blasts from hell,
  esay recites Be thy intents wicked, or charitable,
  esay recites Thou com\@st in such a questionable shape,
  esay recites That I will speak to thee.
  break
endif
if mobvalue(0) == 19
  esay recites As flies to wanton boys, are we to the gods;
  esay recites They kill us for their sport.
  break
endif
~
|
V4 192
lion tawny sleek mob_192~
a tawny lion~
A sleek, tawny lion paces here.
~
~
cat~
water scholar~
ALNT 0 VZ N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
slashing claws~
0 0 0 0
FHV 0
26 0 0 -10 0 0 0 0 -8 -2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand either 0 -1
AGV ACDEFHJKQUV 0 medium flesh
V4 193
ram~
ram~
Ram
~
~
dog~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
~
0 0 0 0
H 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ABCDEFGHIJKUV 0 medium flesh
V4 194
mob_194 barracuda fish~
a large, dark-green barracuda with large fang-like teeth.~
A sleek, dark-green barracude with large fang-like teeth is here.
~
~
pig~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
~
0 0 0 0
0 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ACDEFHJKO 0 medium flesh
V4 195
panther lithe black mob_195~
a lithe black panther~
A lithe black panther stalks here, muscles rippling beneath shiny fur.
~
This sable-furred panther is roughly five feet in length, not including
the long tail which whips about almost with a mind of its own.  Sleek and
inexcusably predatorial, the panther\@s cordlike musculature shows clearly
under the skin and pelt.  Purposefully-angled legs end in lethally-clawed
paws, and a boxy head holds large, toothy jaws.  Large, gleaming eyes of a
green-speckled yellow gaze balefully about, long whiskers twitching
impatiently.  
~
cat~
water scholar~
ALNT 0 VZ N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
raking claws~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 -8 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGV ACDEFHJKQUV 0 medium flesh
V4 196
python snake mob_196 rangercall~
a large python~
A long, olive-scaled python slithers here.
~
A long, thick-bodied snake, the giant python\@s scales are a vivid olive
contrasted with deep brown bands.  A full five meters in length, the scales
of the snake shimmer and undulate as it moves.  A forked tongue darts at the
air, sensing the surroundings, and a small row of teeth jut out at the very
front of the python\@s mouth.  A collection of deep-green scales surround its
maw, giving it an eerie look of malice.  
~
snake~
water scholar~
ADGN F DFJPVZ N 0
0 0 0d0+0 0d10+100 1d0+0 pierce~
bite~
9 9 9 9
FH A
26 0 0 0 0 0 0 0 0 -20 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGXYc ADEFKLQVX 0 small flesh
V4 197
srorsian lizard rangercall mob_197~
a large, brown-scaled srorsian~
A large, brown-scaled srorsian lumbers here.
~
A large, brown-scaled lizard, the srorsian lumbers about upon four stumpy
legs.  Its large, arching back tapers into a long, thick tail about five
feet in length.  Its head is small, compared to the rest of the creature and
its black eyes wander in apparent non-interest.  With its mouth hanging open
you can see a distinct row of sharp teeth.  
~
lizard~
water scholar~
AN F 0 N 0
0 0 0d0+0 0d0+0 0d0+0 slash~
crushing jaws~
0 0 0 0
HMV 0
26 0 0 0 0 0 0 33 0 -33 0 0 0 0 0 0 0 0 66 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGXc ABCDEFHJKQUV A medium unknown
V4 198
bjorcha~
bjorcha~
Bjorcha
~
~
dog~
water scholar~
A 0 0 N 0
0 0 0d0+0 0d0+0 0d0+0 none~
~
0 0 0 0
H 0
26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ABCDEFGHIJKUV 0 medium flesh
V4 199
large grey rat mob_199 rangercall~
a large, grey rat~
A large, grey rat crouches here.
~
~
cat~
water scholar~
ALN F Z N 0
0 0 100d100+100 0d0+0 0d0+0 slash~
clawing slash~
0 0 0 0
FH 0
26 0 0 0 0 0 0 0 -10 15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0
stand stand none 0 -1
AGHMV ABCDEFGHIJKQUV A medium unknown
#0



#OBJECTS
V13
1
coin silver gcash silvercoin~
a silver coin~
One miserable silver coin.~
~
silver~
money 0 0 0 A
1 0 0 0 0
0 10 0 0 P
0
V13
2
coin gold gcash goldcoin~
a gold coin~
One gold coin is here.~
~
gold~
money 0 0 0 A
0 1 0 0 0
0 10 0 0 P
0
V13
3
coins gold gcash~
%d gold coins~
A pile of gold coins.~
~
gold~
money 0 0 0 A
0 0 0 0 0
0 10 0 0 P
0
V13
4
coins silver gcash~
%d silver coins~
A pile of silver coins.~
~
silver~
money 0 0 0 A
0 0 0 0 0
0 10 0 0 P
0
V13
5
coins %s gcash~
%ld %s coins~
A pile of %s coins.~
~
metal~
money 0 0 0 A
0 0 0 0 0
0 10 0 0 P
0
V13
6
desk worn wooden~
a wooden desk~
A well-worn wooden desk is here.~
~
wood~
container 0 0 0 0
500 AC 0 20 0
60 0 0 4 P
0
V13
7
paper sheaf elegant~
a sheaf of paper~
A sheaf of paper filled with elegant script is here.~
~
parchment~
treasure GS 0 F AO
0 0 0 0 0
50 10 0 2 P
0
E
paper~
The paper reads,
Possibilities are virtually endless. Some examples:
Andilma, Sumerindo, Alenwal, Unterime, Tarimarce
(next season?)
Lortal ar onyeline arwarye lon narrasar.
~
V13
8
potion ehiqegieegh~
a potion of ehiqegieegh~
A potion of ehiqegieegh is here.~
~
glass~
potion GS 0 F AO
60 'ehiqegieegh' '' '' ''
51 1 0 1 P
0
V13
9
philter brown liquid lycanthropy~
a philter of lycanthropy~
A philter of brown liquid is here.~
~
glass~
potion GS 0 0 AO
60 'giant strength' 'wolfform' 'bearform' 'bearform'
60 20 9000 1 P
1
V13
10
corpse npccorpse~
the corpse of %s~
The corpse of %s is lying here.~
~
food~
npc_corpse 0 0 0 0
0 0 0 A 0
0 1000 0 4 D
0
V13
11
corpse pccorpse~
the corpse of %s~
The corpse of %s is lying here.~
~
food~
pc_corpse O 0 0 0
0 0 0 A 0
0 1000 0 4 D
0
V13
12
head bodypart~
the head of %s~
The severed head of %s is lying here.~
~
food~
trash 0 0 0 A
0 0 0 0 0
0 50 0 2 D
0
V13
13
heart bodypart~
the heart of %s~
The torn-out heart of %s is lying here.~
~
food~
food 0 0 0 A
16 50 0 0 0
0 20 0 1 D
0
V13
14
arm bodypart~
the arm of %s~
The sliced-off arm of %s is lying here.~
~
food~
food 0 0 0 A
20 50 0 0 0
0 50 0 1 D
0
V13
15
leg bodypart~
the leg of %s~
The sliced-off leg of %s is lying here.~
~
food~
food 0 0 0 A
20 50 0 0 0
0 50 0 1 D
0
V13
16
guts entrails bodypart~
the guts of %s~
A steaming pile of %s\@s entrails is lying here.~
~
food~
food 0 0 0 A
5 50 0 A 0
0 20 0 1 D
0
V13
17
brain brains bodypart~
the brains of %s~
The splattered brains of %s are lying here.~
~
food~
food 0 0 0 A
10 50 0 0 0
0 20 0 1 D
0
V13
18
tail bodypart~
the tail of %s~
The tail of %s is lying here.~
~
food~
food 0 0 0 A
10 50 0 0 0
0 10 0 1 D
0
V13
19
staff redwood red wood~
a redwood staff~
A large staff of redwood rests here.~
~
wood~
staff AGS 0 0 AO
60 1 1 'possession' 0
60 80 0 3 P
1
V13
20
omelette spoiled quantity foul smelling foul-smelling eggs egg ground meat vegetables~
a spoiled omelette~
A quantity of foul-smelling eggs, ground meat, and vegetables lies here.~
~
food~
food 0 0 0 A
50 50 0 A 0
0 10 0 1 P
0
E
omelette spoiled quantity foul smelling foul-smelling eggs egg ground meat vegetables~
This omelette, cooked from several bird eggs, has somehow spoiled.  The
eggs are tinged with an unhealthy bluish-green, and the morsels of sausage
and vegetable which stud the omelette\@s surface are covered with a fur of
mold.  A strong reek of decay wafts from the omelette.  
~
V13
21
ball light~
a bright ball of light~
A bright ball of light shimmers in the air.~
~
energy~
light A 0 0 A
0 0 999 0 0
0 0 0 1 P
0
V13
22
spring~
a magical spring~
A magical spring flows from the ground here.~
~
water~
fountain G 0 0 0
100000 100000 'water' 0 0
0 0 0 5 P
0
V13
23
disc disk floating black~
a floating disc~
A floating black disc hangs in the air.~
~
energy~
container GMPYZa 0 0 Q
0 E 0 0 0
0 0 0 2 P
0
V13
24
cabinet teak large~
a teak cabinet~
A large teak cabinet is fitted into the corner of the room.~
~
wood~
container 0 0 0 0
500 ACD 41 50 0
50 0 0 4 P
1
V13
25
gate portal nexusgate~
a shimmering gate~
A shimmering black gate rises from the ground, leading to parts unknown.~
~
shadow~
portal GT 0 0 0
0 0 0 0 0
0 0 0 4 P
0
V13
26
tanhide hide tanned cap~
a cap made from the hide of %s~
A thick cap made from the skin of %s is here.~
~
hide~
armor P 0 0 AE
0 0 0 0 0
0 30 0 2 P
0
V13
27
tanhide hide tanned skin vest~
a vest made from the hide of %s~
A thick hide vest made from the skin of %s is here.~
~
hide~
armor P 0 0 AD
0 0 0 0 0
0 60 0 2 P
0
V13
28
tanhide hide tanned skin gloves~
a pair of gloves made from the hide of %s~
A thick pair of hide gloves made from the skin of %s is here.~
~
hide~
armor P 0 0 AH
0 0 0 0 0
0 20 0 1 P
0
V13
29
tanhide hide tanned skin boots~
a pair of boots made from the hide of %s~
A thick pair of hide boots made from the skin of %s is here.~
~
hide~
armor P 0 0 AG
0 0 0 0 0
0 40 0 2 P
0
V13
30
tanhide hide tanned skin sleeves~
a set of sleeves made from the hide of %s~
A thick pair of sleeves made from the skin of %s is here.~
~
hide~
armor P 0 0 AI
0 0 0 0 0
0 20 0 2 P
0
V13
31
tanhide hide tanned skin leggings~
a pair of leggings made from the hide of %s~
A pair of leggings made from the skin of %s is here.~
~
hide~
armor P 0 0 AF
0 0 0 0 0
0 20 0 2 P
0
V13
32
tanhide hide tanned skin bracer~
a bracer made from the hide of %s~
A bracer made from the skin of %s is here.~
~
hide~
armor P 0 0 AM
0 0 0 0 0
0 20 0 1 P
0
V13
33
tanhide hide tanned skin belt~
a belt made from the hide of %s~
A belt made from the skin of %s is here.~
~
hide~
armor P 0 0 AL
0 0 0 0 0
0 20 0 2 P
0
V13
34
tanhide hide tanned skin collar~
a collar made from the hide of %s~
A collar made from the skin of %s is here.~
~
hide~
armor P 0 0 AC
0 0 0 0 0
0 10 0 1 P
0
V13
35
tanhide hide tanned skin coat~
a coat made from the skin of %s~
A coat made from the skin of %s is here.~
~
hide~
armor DP 0 0 AK
0 0 0 0 0
0 80 0 2 P
0
V13
36
rangerspring spring water~
a small spring~
A small spring provides pure drinking water.~
~
water~
fountain a 0 0 0
0 0 'water' 0 0
0 0 0 5 P
0
V13
37
rangerfood meat strips food ~
some strips of meat~
Some strips of meat sit on the ground here.~
~
food~
food 0 0 0 A
40 50 0 0 0
0 0 0 1 P
0
E
meat~
These strips of meat appear to have come from wild game.
~
E
strips~
These strips of meat appear to have come from wild game.
~
E
food~
These strips of meat appear to have come from wild game.
~
V13
38
bottle wide-necked murky philter~
a murky philter~
A wide-necked bottle filled with murky liquid rests here.~
~
glass~
potion GS 0 0 A
60 'sanctuary' 'stone skin' 'diamond skin' ''
55 50 42000 1 P
0
V13
39
arch stone portal mystic~
the mystic portal~
An arch of stone, inscribed with glowing runes, is set into the wall.~
~
stone~
portal 0 0 0 0
0 A A 501 0
60 0 0 4 P
0
V13
40
blank object~
(no short description)~
(no description)~
~
unknown~
trash 0 0 0 0
0 0 0 0 0
0 0 0 2 P
0
V13
41
key crystal~
a crystal key~
A key of pure crystal rests here.~
~
crystal~
key FGS 0 F A
0 0 0 0 0
50 10 0 0 P
0
V13
42
Spirit stone~
a spirit stone~
An iridescent stone lies on the ground.~
~
energy~
treasure A 0 0 AO
0 0 0 0 0
0 10 0 2 P
0
V13
43
ice shield~
a shield of pure ice~
A mass of ice formed into the shape of a shield lies here.~
~
ice~
armor GKSUY 0 0 AJ
0 0 0 0 0
1 80 0 2 P
0
V13
44
runed sapphire shield~
a runed sapphire shield~
A sapphire shield engraved with runes of life lies here.~
~
sapphire~
armor GKSUY 0 0 AJ
0 0 0 0 0
1 90 0 2 P
0
V13
45
vial fluid sickly black catalyst~
a vial of catalyst~
A vial filled with a sickly black fluid rests on the ground.~
~
glass~
treasure 0 0 F AO
0 0 0 0 0
10 10 300 2 P
0
V13
46
vial %s poison~
a vial of %s poison~
A vial of colorless fluid lies on the ground.~
~
glass~
trash 0 0 0 AO
0 0 0 0 0
0 0 0 2 P
0
V13
47
dart poison~
a sharp dart~
A sharp-tipped dart lies on the ground.~
~
feather~
trash 0 0 0 AO
0 0 0 0 0
0 0 0 2 P
0
V13
48
mantle earth~
a mantle of earth~
A mantle of earth lies here on the ground.~
~
stone~
armor GSUY 0 0 AK
0 0 0 0 0
0 100 0 2 P
0
V13
49
icy prison~
an icy prison~
An icy prison rises out of the ground.~
~
ice~
trash OSYa 0 0 0
0 0 0 0 0
1 0 0 2 P
0
V13
50
crystal magicwand spellcrystal quartz %s~
a crystal containing the spell of %s~
A perfect faceted quartz crystal rests on the ground here.~
~
crystal~
wand 0 0 0 AO
0 0 0 'ghost' 0
0 10 0 1 P
0
E
crystal~
A flawlessly carved crystal of perfect quartz, this magical stone hums
softly in the air.  In the light, you notice a soft blue flickering which
skitters about the inside of the stone.  
~
V13
51
tongue blood~
the corpse of the amber dragon~
The corpse of the amber dragon is lying here.~
~
flesh~
fountain PQa 0 0 P
10 10 'blood' 0 0
52 3000 0 5 P
0
V13
52
fang~
a python\@s fang~
A sharp looking fang lies here.~
~
bone~
weapon Ea 0 0 ANP
exotic 5 5 2 0
pierce~
52 10 250 2 P
0
O pierce~
>speech_prog p ~
if isowner($n)
  mploadstring obj $i 9 name
  if compx() == %name
    //
    if compx() == off
    or compx() == down
      //===============
      // duration check
      //===============
      if value(9) > 0
        mpechoat $n Having just settled in this position, %name is reluctant to move yet.
      else
        //=============
        // get mob info
        //=============
        if name() / raven
          mpvalueset mobvnum 50
          mpvalueset mobname raven familiar coal-black coal black mob_50 %name
          mpvalueset famaffect 1213
        endif
        if name() / python
          mpvalueset mobvnum 52
          mpvalueset mobname python familiar mottled snake serpent mob_52 %name
          mpvalueset famaffect 1214
        endif
        if name() / fox
          mpvalueset mobvnum 53
          mpvalueset mobname fox familiar red mob_53 %name
          mpvalueset famaffect 1210
        endif
        if name() / bat
          mpvalueset mobvnum 54
          mpvalueset mobname bat familiar black mob_54 %name
          mpvalueset famaffect 1209
        endif
        if name() / toad
          mpvalueset mobvnum 55
          mpvalueset mobname toad familiar leathery mob_55 %name
          mpvalueset famaffect 1212
        endif
        if name() / cat
          mpvalueset mobvnum 56
          mpvalueset mobname cat black familiar mob_56 %name
          mpvalueset famaffect 1211
        endif
        //===========
        // set up mob
        //===========
        mpmload %mobvnum
        mpforce familiar mpfocus $o
        mpget char $o level 8
        mpget char $o id 9
        mpforce familiar mpstring mob familiar short %name
        mpforce familiar mpstring mob familiar name %mobname
        //
        // affect for same-room bonus
        mpaddaffect %name %famaffect $8 -1 0 $9 0
        //
        // values, level, hp
        mpcopyvalues all obj $i char %name
        mpset mob %name level $8
        mpmath 8 100 + ($8 * 5)
        mpset mob %name hp $8
        mpset mob %name curhp $8
        //
        // group setup
        //mpflag mob %name aff - charm
        mpfollow %name $o
        mpforce $o group %name
        //mpflag mob %name aff + charm
        //=======================
        // done, so lag and purge
        //=======================
        mplag $o 2
        mppurge self
      endif
    endif
  endif
endif
~
|
V13
53
egg~
a gray drake\@s egg~
A hard, discoloured egg lies here.~
~
ivory~
treasure a 0 0 AP
0 0 0 0 0
52 50 0 0 P
0
V13
54
herbs exotic dragonstongue~
some dragonstongue herbs~
Some exotic herbs are growing here.~
~
herb~
trash a 0 0 AP
0 0 0 0 0
52 5 0 2 P
0
V13
55
no name~
(no short description)~
(no description)~
~
unknown~
trash 0 0 0 0
0 0 0 0 0
0 0 0 2 P
0
V13
56
heirloom placeholder~
(no short description)~
(no description)~
~
unknown~
armor a 0 0 A
0 0 0 0 0
0 0 0 0 P
0
V13
57
heart pit corrupted hollow~
the corrupted heart~
(no description)~
~
unknown~
portal d 0 0 0
0 V V 8118 0
51 0 0 0 P
0
>verb_prog p enter~
if name($i) / $y2
  mpechoat $n Ew, gross!
endif
mpnextinterp
~
|
V13
59
skull Vila demilich archmage lich~
the skull of the demilich Vila~
The skull of the demilich Vila floats here.~
The skull of the demilich Vila is a yellowed lump of bone, its features
worn smooth by the sands of time.  Its eyes flicker with a dim red light,
and a faint septic aroma wafts from its calcified exterior.  Strikingly,
each of its teeth has been replaced by a perfectly faceted diamond.  

The archmage Vila was a great human scholar, who lived during the golden age
of humanity following the War of Fire.  Tempted and seduced by the ancient
magics of the Nyakigah Sha Yith (The Black Libram of Souls), he turned his
considerable talent to the dark arts.  

It is unclear what his true motive was, but Vila left Avendar, to find
planes more conducive to certain unsettling creations.  In one of these dark
places, he created Sothmogga, a cosmic horror which lived only to devour and
consume living energies.  

Using his own considerable talents as a planar traveler, Vila created a
gateway for Sothmogga to travel to a place where it could feed and grow.  He
lead the thing to the Grove of the Celanim, a world populated by beings of
almost pure energy.  Living near the planes of light, the Celanim lived in
splendor, tending their exquisitely lovely trees.  

Heedless of their danger, the Celanim never knew the great Sothmogga was
upon them.  The tentacular horror roared through the Grove, laying waste to
the once proud and powerful people.  It grew as it fed, drawing sustenance
from the life energy of the place.  When it was completely fed, it had more
than quadrupled in size, and vastly grown in dark power.  

So powerful was the beast that the archmage could no longer control it.  It
turned its sight to the prime material, hoping to consume its teeming life. 
Fortunately for Avendar, the great templar Converu met the demonic Sothmogga
at its portal to our world, and impaled it in single combat with Anirim\@s
spear.  

Vila, justfiably fearing the vengeance both divine as well from Celanim,
fled into the planes.  Over the centuries he was hunted by his numerous
enemies, all determined to bring him to justice.  Forced to draw on the
Black Libram to elude pursuit, he realized that the tome was coming to
dominate his actions.  

Learning of the deepest secrets of the Sha Yith, Vila sought to preserve
himself in a transcendent form of undeath as a demilich.  His spirit would
be completely free to roam the planes, while the remnants of his mortal form
would decay to a skull.  

At least partially successful, Vila managed to transfer part of his power
into a skull.  Unfortunately, he had by this time given up the tome, and
rushed to complete the process despite the presence of other powers.  He
found his spirit completely fettered to the skull.  Having successfully
changed his form, his enemies found the trail to the scholar cold.  However,
other, more demonic powers had taken an interest in the scholar would be
immortal...  
~
bone~
treasure a 0 0 APQ
0 0 0 0 0
60 10 895439 1 P
1
A
41 10
A
12 50
A
13 50
E
lich~
The skull of the demilich Vila is a yellowed lump of bone, its features
worn smooth by the sands of time.  Its eyes flicker with a dim red light,
and a faint septic aroma wafts from its calcified exterior.  Strikingly,
each of its teeth has been replaced by a perfectly faceted diamond.  
~
E
archmage~
The skull of the demilich Vila is a yellowed lump of bone, its features
worn smooth by the sands of time.  Its eyes flicker with a dim red light,
and a faint septic aroma wafts from its calcified exterior.  Strikingly,
each of its teeth has been replaced by a perfectly faceted diamond.  
~
E
demilich~
The skull of the demilich Vila is a yellowed lump of bone, its features
worn smooth by the sands of time.  Its eyes flicker with a dim red light,
and a faint septic aroma wafts from its calcified exterior.  Strikingly,
each of its teeth has been replaced by a perfectly faceted diamond.  
~
E
vila~
The skull of the demilich Vila is a yellowed lump of bone, its features
worn smooth by the sands of time.  Its eyes flicker with a dim red light,
and a faint septic aroma wafts from its calcified exterior.  Strikingly,
each of its teeth has been replaced by a perfectly faceted diamond.  
~
E
skull~
The skull of the demilich Vila is a yellowed lump of bone, its features
worn smooth by the sands of time.  Its eyes flicker with a dim red light,
and a faint septic aroma wafts from its calcified exterior.  Strikingly,
each of its teeth has been replaced by a perfectly faceted diamond.  
~
>speech_prog p Sothmogga~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@The most glorious of my creations! The Nyakigah Sha Yith gave me the power, and my own skill made it Art.\@
opecho {Y\@So good of the Titans to leave it on display in perpetuity in their quaint castle, for all to remember me.\@{X 
endif
endif
~
>speech_prog p Celanim~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@They hunted me across time, space, and the multiverse itself. What you see of me is what I had to do to escape them.\@{X
endif
endif
~
>speech_prog p Nyakigah Sha Yith~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@I suspect the tome was either an artifact of the ancient alatharya, or even extraplanar in origin. It... spoke to me at times.
opecho \@In the end, I left it, rather than become slave to a book. Not before I learned the Truth, of course.\@{X
endif
endif
~
>speech_prog p Anirim~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@His spear was one of the most potent artifacts I have ever encountered. Only the Nyakigah Sha Yith was as powerful.\@{X
endif
endif
~
>speech_prog p Converu~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@He had to come along and spoil our fun, didn\@t he?\@{X
endif
endif
~
>speech_prog p Tentacle~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@Yes, a tentacle.\@{X
endif
endif
~
>speech_prog p ethron~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@Their children squeal when you turn their blood to acid, you know.\@{X
endif
endif
~
>speech_prog p ch\@taren~
if objvalue(1) == 0
if isworn($o)
opecho {YThe skull of the demilich Vila says, \@A bit like the Celanim, but not as tasty.\@{X
endif
endif
~
>rand_prog 1~
if isworn($o)
if objvalue(1) == 0
opvaluerand 2 1 10
if objvalue(2) == 1
opecho {YThe skull of the demilich Vila says, \@A man? Yes... Yes... I was once a man.\@{X
endif
if objvalue(2) == 2
opecho {YThe skull of the demilich Vila says, \@A man? Yes... Yes... I was once a man.\@{X
endif
if objvalue(2) == 3
opecho {YThe skull of the demilich Vila says, \@Having your flesh peeled off of your bones is a marvelously enlightening experience.\@{X
endif
if objvalue(2) == 4
opecho {YThe skull of the demilich Vila says, \@Will your enemies even bother to bury you?\@{X
endif
if objvalue(2) == 5
opecho {YThe skull of the demilich Vila says, \@I almost miss having nerves. The pain is just not the same without them.\@{X
endif
if objvalue(2) == 6
opecho {YThe skull of the demilich Vila says, \@..Do you hear that? ..No.. of course you don\@t..\@{X
endif
if objvalue(2) == 7
opecho {YThe skull of the demilich Vila says, \@..Oh.. You\@re still alive?\@{X
endif
if objvalue(2) == 8
opecho {YThe skull of the demilich Vila says, \@I would tell you the things I\@ve seen, but I would have to rip out your eyes first.\@{X
endif
if objvalue(2) == 9
opecho {YThe skull of the demilich Vila says, \@Do I miss the pleasures of the flesh? Yes.. almost as much as the pains.\@{X
endif
if objvalue(2) == 10
opecho {YThe skull of the demilich Vila says, \@You haven\@t lived until you\@ve died, I can assure you.\@{X
endif
endif
endif
~
|
V13
60
axe test thing~
test axe~
A test axe.~
~
unknown~
weapon 0 0 0 AN
axe 0 0 -1 F
hit~
0 0 0 2 P
0
O hit~
V13
61
gloves silver pair~
a pair of fine silver mesh gloves~
A pair of beautiful silver gloves lie here.~
~
silver~
armor AIKa 0 0 AH
7 7 7 5 0
50 20 42297 1 P
0
A
13 10
A
12 15
A
20 -1
A
19 3
V13
62
ring silver~
a brilliant silver ring~
A dazzling silver ring lies on the ground.~
~
silver~
treasure IKP 0 0 AB
0 0 0 0 0
50 1 1377660 0 P
0
A
17 -10
A
12 50
A
13 50
A
20 -3
V13
63
mace unholy Yogaal~
the unholy mace of Yogaal~
A black iron mace rests on the ground.~
~
iron~
weapon AHJMa 0 0 AN
mace 4 11 9 0
life drain~
0 180 92172 2 P
0
E
yogaal~
Born by the shuddeni templar Yogaal in the War of Endless Night, this
black iron mace glows with an eerie black light.  
~
O life drain~
>fight_prog 3~
opecho The mace of Yogaal glows an ominous black.
opcast 52 40
~
|
V13
64
blade energy~
a blade of pure energy~
A shining blade of energy is here.~
~
energy~
weapon AIKLa 0 0 AN
sword 9 5 10 0
wrath~
50 120 506064 2 P
0
A
19 4
A
18 3
O wrath~
V13
65
codex ancient blood riddle~
an ancient codex written in blood~
An ancient codex written in blood lies here.~
~
parchment~
treasure BE 0 0 A
0 0 0 0 0
60 20 0 0 P
0
E
codex~
The words of the ancient codex are written in blood.
 
In darke of night when stars align,
the evil stirs, the shadows stare.
A ripple spreads across the voide,
The Lord of Ancient Evils\@ lair.
To call the Lord from his repose,
The Yldere Recype of Zyrn:
Sparkling tears in icy floes,
A draughte of red-golde wyne of wyrm,
A hingeless box grey-stoned in hue,
The death-tooth of the footless one,  
A lady captured in the stone,  
The greens of verdant terror\@s home.
These things once gathered, summon forthe
the Lraj Halsith, to vex the eorthe.
~
V13
66
stone spirit fire gleaming~
a spirit stone~
A spirit stone, gleaming with inner fire, lies here.~
~
energy~
treasure A 0 0 AO
0 0 0 0 0
60 5 0 2 P
0
E
stone~
On the stone is this inscription:  \@To learn of and prepare for the day of dread, speak these words:
        tell the riddle
~
>speech_prog p tell the riddle~
opecho The spirit stone suddenly flares, and a voice whispers:
opecho In darke of night when stars align,
opecho The evil stirs, the shadows stare.
opecho A ripple spreads across the voide,
opecho The Lord of Ancient Evils\@ lair.
opecho To call the Lord from his repose,
opecho The Yldere Recype of Zyrn:
opecho Sparkling tears in icy floes,
opecho A draughte of red-golde wyne of wyrm,
opecho A hingeless box grey-stoned in hue,
opecho The death-tooth of the footless one,  
opecho A lady captured in the stone,  
opecho The greens of verdant terror\@s home.
opecho These things once gathered, summon forthe
opecho the Lraj Halsith, to vex the eorthe.
~
|
V13
67
grapes bunch fresh green obj_67 food~
a bunch of grapes~
A bunch of fresh green grapes is here.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 1 P
0
E
grapes~
This bunch of bright green grapes smells sweet and looks sweeter.  Each
grape is plump and spherical, some larger than others.  Each is ripened to
perfection, and a single, deep green leaf curls off its stem.  
~
E
bunch~
This bunch of bright green grapes smells sweet and looks sweeter.  Each
grape is plump and spherical, some larger than others.  Each is ripened to
perfection, and a single, deep green leaf curls off its stem.  
~
E
fresh~
This bunch of bright green grapes smells sweet and looks sweeter.  Each
grape is plump and spherical, some larger than others.  Each is ripened to
perfection, and a single, deep green leaf curls off its stem.  
~
E
green~
This bunch of bright green grapes smells sweet and looks sweeter.  Each
grape is plump and spherical, some larger than others.  Each is ripened to
perfection, and a single, deep green leaf curls off its stem.  
~
E
food~
This bunch of bright green grapes smells sweet and looks sweeter.  Each
grape is plump and spherical, some larger than others.  Each is ripened to
perfection, and a single, deep green leaf curls off its stem.  
~
E
obj_67~
This bunch of bright green grapes smells sweet and looks sweeter.  Each
grape is plump and spherical, some larger than others.  Each is ripened to
perfection, and a single, deep green leaf curls off its stem.  
~
V13
68
%s herb~
a bit of %s~
A bit of %s lies on the ground here.~
~
plant~
pill SU 0 0 A
0 'ghost' 'ghost' 'ghost' 'ghost'
1 2 0 0 P
0
V13
69
blank~
(a blank item used for \#natural armor\# spell)~
A blank item template for the \#natural armor\# spell is here.~
~
plant~
armor GPSUY 0 0 A
0 0 0 0 0
0 50 0 2 P
0
V13
70
helm Alkamar~
the Helm of Alkamar~
An ancient war helm lies here.~
~
unknown~
armor 0 0 0 AE
12 12 12 12 0
52 80 32343 2 P
0
A
18 2
A
19 3
>remove_prog 100~
opechoat $n Your sight dims as you remove the helm of Alkamar.
opremaffect 45
opremaffect 86
~
>wear_prog 100~
opechoat $n You feel a tingle in your eyes as you don the helm of Alkamar.
opaddaffect 45 51 -1 0 0 8
opaddaffect 86 51 -1 0 0 512
~
|
V13
71
Sword Mir-Adan Mir Adan ~
the Sword of Mir-Adan~
A beautifully crafted ancient sword lies here.~
~
unknown~
weapon A 0 0 AN
sword 9 5 3 0
slash~
52 180 457143 2 P
0
A
19 1
A
18 3
O slash~
>remove_prog 100~
opechoat $n You feel heavier as the sword of Mir-Adan leaves your hand.
opremaffect 67
opremaffect 206
opremaffect 338
~
>wear_prog 100~
opechoat $o As you wield the sword of Mir-Adan, you and the air around you seems lighter.
opaddaffect 67 51 -1 0 0 524288
opaddaffect 206 51 -1 0  0 0
opaddaffect 338 51 -1 0 0 134217728 
~
|
V13
72
crown diamond Nilundar~
the Crown of Nilundar~
A diamond crown rests silently on the ground.~
~
diamond~
jewelry A 0 0 AE
0 0 0 0 0
52 0 61330 2 P
0
A
13 20
A
12 30
A
17 -10
A
20 -4
>wear_prog 100~
if objvalue(0) > 0
opvaluedown 0 
opechoat $n One of the diamonds in the crown of Nilundar flashes briefly, 
opechoat $n then dims as you don the crown.
opechoat $n You are surrounded by a white aura.
opaddaffect 119 60 7 0 0 128
endif
~
>take_prog crown diamond Nilundar~
if objvalue(1) == 1
else
opvalueset 1 1
opvaluerand 0 30 100
endif
~
|
V13
73
bracelet Phanimran~
the Bracelet of Phanimran~
A golden bracelet, adorned with gems, lies on the ground.~
~
gem~
jewelry 0 0 0 AM
0 0 0 0 0
52 30 0 1 P
0
>fight_prog 5~
if isworn($o)
opvaluerand 0 1 6
if objvalue(0) ==1 
opechoat $o The sapphire on the bracelet of Phanimran glows a bright blue.
opcast 77 51
endif
if objvalue(0) == 2
opechoat $o The topaz on the bracelet of Phanimran flashes briefly. 
opcast 133 51
endif
if objvalue(0) == 3
opechoat $o A dull black glow pulses from the opal on the bracelet of Phanimran
opcast 52 60
endif
if objvalue(0) == 4
opechoat $o A violent red flash pulses from the ruby on the bracelet of Phanimran.
opcast 205 51
endif
if objvalue(0) == 5
opechoat $o AThe diamond on the bracelet of Phanimran flashes briefly.
opcast 89 51
opcast 89 51
endif
if objvalue(0) == 6
opechoat $o A soft white glow emanates from the pearl on the bracelet of Phanimran.
opcast 131 51
endif
endif
~
|
V13
74
Garran Hammer~
the Hammer of Garran~
The hammer of Garran lies on the ground.~
~
unknown~
weapon A 0 0 AN
mace 4 12 6 0
shock~
52 200 333667 2 P
1
A
1 2
A
18 2
A
19 2
A
5 2
O shock~
>fight_prog 5~
opechoat $o As you strike with the Hammer of Garran, a mighty boom fills the air!
opecharound $o $o strikes with the Hammer of Goran, releasing a mighty thunderclap!
opcast 356 51
~
|
V13
75
dagger Yazor~
the Dagger of Yazor~
A wicked looking dagger lies on the ground.~
~
unknown~
weapon 0 0 0 AN
dagger 4 12 2 0
stab~
0 100 330212 1 P
0
A
19 2
A
18 2
O stab~
>fight_prog 5~
if isworn($o)
opvaluerand 0 1 2
if objvalue(0) == 1
opechoaround $o $O\@s dagger stabs forward suddenly, stabbing deeply!
opechoat $o The dagger of Yazor stabs of its of its own occured, stabbing your foe!
opcastoff 105 60
else
opechoaround $o $O\@s dagger stabs forward suddenly, stabbing deeply!
opechoat $o The dagger of Yazor stabs of its of its own occured, stabbing your foe!
opcast 143 51
endif
endif
~
|
V13
76
amulet sun moon~
the Amulet of the Sun and Moon~
An amulet depicting the sun eclipsing the moon lies here.~
This ancient and powerful magic item was recovered from a long-hidden
cache of age-old alatharya artifacts.  It was unearthed by the adventurer
Sydonus many centuries, and drifted from hand to hand from years afterwards.
Its location was unknown for over a century, but it has recently resurfaced.
It is known to channel the energies of the sunlight during the day, and the
negative energies of the void after nightfall.  
~
onyx~
jewelry A 0 0 AC
0 0 0 0 0
52 40 41944 1 P
1
A
13 15
A
12 15
A
18 2
A
19 2
>remove_prog 100~
opechoat $o The amulet of the Sun and Moon tingles as you remove it from around your neck.
opremaffect $o 308
opremaffect $o 428
opremaffect $o 117
~
>wear_prog 100~
opechoat $o The amulet of the Sun and Moon tingles as you wear it around your neck.
~
>fight_prog 5~
if isday($i)
opcast 285 51
else
opcast 8 51 
endif
~
>time_prog 18~
opechoat $o As the sun sets, the amulet\@s glow fades, and its dark side begins to pulse with a dark light.
opechoaround $o The light from $O\@s amulet fades, and it begins to absorb the light around it.
opaddaffect 308 51 -1 0 0 
opremaffect 117
opremaffect 428
~
>time_prog 6~
opechoat $o With the coming of dawn, the dark side of the amulet fades, and the light side glows yellow.
opechoaround $o $O\@s amulet glows with a golden light.
opaddaffect 117 51 -1 0 0 536870912
opaddaffect 428 51 -10 0 0
opremaffect 308
~
|
V13
77
ring adi~
the Ring of Adi~
A strange metallic ring lies here.~
~
unknown~
jewelry B 0 0 AB
0 0 0 0 0
52 10 0 0 P
1
>remove_prog 100~
opremaffect  76
~
>rand_prog 100~
if objvalue(0) == 1
opechoat $o A storm of thoughts flitters through your mind. 
opechoat $o The world around you seems somehow... less important.
opechoaround $o $O gets a wild look in $s eye!
opvaluerand 0  80 150
opaddaffect 278 51 8 27 0 0
else
opvaluedown 0
endif
~
>wear_prog 100~
opechoat $o  You feel buoyed with energy as you wear the Ring of Adi.
opaddaffect 76 51 -1 2 4 2097152
 
~
|
V13
79
stone rune~
the rune of stars~
A black runed, dotted with diamonds, lies on the ground.~
~
stone~
treasure A 0 0 AO
0 0 0 0 0
0 20 0 2 P
1
V13
80
war helmet srryn~
an ancient srryn war helmet~
An ancient Srryn war helmet sits on the ground.~
~
scale~
armor P 0 0 AE
10 10 10 10 0
0 0 63648 2 P
0
A
19 4
A
18 4
E
helmet~
Used by the Srryn warlords in the War of Fire, this ancient helmet was a
prize captured from the vaults of Var Bandor by the Raiders, and came to be
worn by the Saurian Warlord Dyrck.
~
>fight_prog 10~
~
|
V13
81
ring midnight opal sligura~
the midnight opal ring of Sligura~
A ring of midnight opal rests on the ground.~
~
opal~
armor P 0 0 AB
10 10 10 10 0
0 0 2649000 0 P
0
A
13 100
A
12 50
E
opal~
Worn by the Archmage of Void Sligura, this midnight opal ring was imbued
with the strange powers of the Srryn after he aided them in the raid on Var
Bandor which saw the return of the magics of fire.  

~
E
ring~
Worn by the Archmage of Void Sligura, this midnight opal ring was imbued
with the strange powers of the Srryn after he aided them in the raid on Var
Bandor which saw the return of the magics of fire..f
~
E
midnight~
Worn by the Archmage of Void Sligura, this midnight opal ring was imbued
with the strange powers of the Srryn after he aided them in the raid on Var
Bandor which saw the return of the magics of fire.  
~
V13
82
small pouch leather~
a small leather pouch~
A small leather pouch is here.~
~
leather~
container 0 0 0 A
500 0 0 50 100
1 0 0 2 P
0
V13
83
bone powdered powder crushed~
some powdered bone~
Some powdered bone lies here.~
~
bone~
trash 0 0 0 A
0 0 0 0 0
1 0 0 2 P
0
V13
84
stick charcoal~
a stick of charcoal~
A stick of charcoal is here.~
~
stone~
trash 0 0 0 A
0 0 0 0 0
1 0 0 2 P
0
V13
85
silver dust fine~
a bit of fine silver dust~
A bit of fine silver dusts is here.~
~
silver~
trash 0 0 0 A
0 0 0 0 0
1 0 0 2 P
0
V13
86
summoning pentagram~
a pentagram of summoning~
A sinister looking pentagram is inscribed here.~
~
silver~
trash 0 0 0 P
0 0 0 0 0
0 0 0 2 P
0
E
pentagram~
The pentagram of summoning consists of two concentric circles, one
slightly larger than the other.  Running along the band between the two are
a series of diabolic runes, each of a sinister cast.  The pentagram is
inscribed within these two circles, the vertices location adjacent to five
of the runes.  
~
E
summoning~
The pentagram of summoning consists of two concentric circles, one
slightly larger than the other.  Running along the band between the two are
a series of diabolic runes, each of a sinister cast.  The pentagram is
inscribed within these two circles, the vertices location adjacent to five
of the runes.  
~
E
bone~
The pentagram of summoning consists of two concentric circles, one
slightly larger than the other.  Running along the band between the two are
a series of diabolic runes, each of a sinister cast.  The pentagram is
inscribed within these two circles, the vertices location adjacent to five
of the runes.  
~
V13
87
trigon binding~
a trigon of binding~
A trigon of binding is inscribed in charcoal here.~
~
unknown~
trash 0 0 0 P
0 0 0 0 0
0 0 0 2 P
0
E
trigon~
The trigon of binding is equiangular, with each side precisely the same
length.  Facing northward, a small rune is inscribed at each vertex,
exterior to the triangle.  The triangle circumscribes a circle, within which
an elaborate rune is drawn.  
~
E
binding~
The trigon of binding is equiangular, with each side precisely the same
length.  Facing northward, a small rune is inscribed at each vertex,
exterior to the triangle.  The triangle circumscribes a circle, within which
an elaborate rune is drawn.  
~
E
charcoal~
The trigon of binding is equiangular, with each side precisely the same
length.  Facing northward, a small rune is inscribed at each vertex,
exterior to the triangle.  The triangle circumscribes a circle, within which
an elaborate rune is drawn.  
~
V13
88
silver circle protection~
a circle of protection~
A silver circle of protection is inscribed on the ground here.~
~
silver~
trash 0 0 0 P
0 0 0 0 0
0 0 0 2 P
0
E
circle~
The circle of protection consists of two circles, both concentric with
the other.  Two perpindicular diameters bisect both circles.  Four small
runes areinscribed in each of the four quadrants of the larger circle, and a
much larger rune is inscribed in the geometric center of the small circle.  
~
E
protection~
The circle of protection consists of two circles, both concentric with
the other.  Two perpindicular diameters bisect both circles.  Four small
runes areinscribed in each of the four quadrants of the larger circle, and a
much larger rune is inscribed in the geometric center of the small circle.  
~
E
silver~
The circle of protection consists of two circles, both concentric with
the other.  Two perpindicular diameters bisect both circles.  Four small
runes areinscribed in each of the four quadrants of the larger circle, and a
much larger rune is inscribed in the geometric center of the small circle.  
~
V13
89
rose red beautiful~
a beautiful red rose~
A beautiful red rose lies here, glistening and perfect.~
~
plant~
special S 0 0 AO
0 0 0 0 0
1 2 0 1 P
0
V13
90
message runic rune runes~
a runic message~
A runic message is here, concealed from prying eyes.~
~
unknown~
treasure 0 0 0 0
0 0 0 0 0
0 0 0 0 P
0
E
runic~
~
E
rune~
~
V13
93
no name~
(no short description)~
(no description)~
~
unknown~
trash 0 0 0 0
0 0 0 0 0
0 0 0 0 P
0
V13
94
blade sword light~
a blade of light~
A blade of light lies here.~
~
energy~
weapon AGKSY 0 0 AN
sword 5 9 15 0
searing light~
52 90 0 2 P
5
E
pure~
This weapon is made from a pure white light, and pulses with a vital
energy.  
~
E
blade~
This sword is made from a pure white light, and pulses with a vital
energy.  

~
E
sword~
This sword is made from a pure white light, and pulses with a vital
energy.  
~
O searing light~
V13
95
Looter\@s belt looter raider~
a looter\@s belt~
A looter\@s belt lies in a pile on the ground~
~
cloth~
container 0 0 0 AL
200 A 0 200 50
0 0 0 2 P
0
A
19 3
V13
96
necklace ears teeth~
a necklace of %d ears~
A necklace of ears lies on the ground.~
~
carrion~
armor P 0 0 AC
0 0 0 0 0
0 0 0 1 P
1000
V13
97
reaver generic~
a generic dark iron weapon~
A generic dark iron weapon lies here.~
~
iron~
weapon CGJLPT 0 0 AN
exotic 7 5 9 0
life drain~
50 110 9750 2 P
1000
A
18 1
A
19 2
O life drain~
>verb_prog p triggermakescythe~
if name($o)/shunnedsmith
        opvalueset 1 10
        opfocus $y2
        opset obj reaver weight 180
endif
~
>verb_prog p triggermakedagger~
if name($o)/shunnedsmith
        opvalueset 1 9
        opfocus $y2
        opset obj reaver weight 50
endif
~
>verb_prog p triggermakewhip~
if name($o)/shunnedsmith
        opvalueset 1 7
        opfocus $y2
        opset obj reaver weight 40
endif
~
>verb_prog p triggermakestaff~
if name($o)/shunnedsmith
        opvalueset 1 8
        opfocus $y2
        opset obj reaver weight 120
endif
~
>verb_prog p triggermakeflail~
if name($o)/shunnedsmith
        opvalueset 1 6
        opfocus $y2
        opset obj reaver weight 100
endif
~
>verb_prog p triggermakeglaive~
if name($o)/shunnedsmith
        opvalueset 1 5
        opfocus $y2
        opset obj reaver weight 180
endif
~
>verb_prog p triggermakemace~
if name($o)/shunnedsmith
        opvalueset 1 4
        opfocus $y2
        opset obj reaver weight 190
endif
~
>verb_prog p triggermakespear~
if name($o)/shunnedsmith
        opvalueset 1 3
        opfocus $y2
        opset obj reaver weight 140
endif
~
>verb_prog p triggermakeaxe~
if name($o)/shunnedsmith
        opvalueset 1 2
        opfocus $y2
        opset obj reaver weight 210
endif
~
>verb_prog p triggermakesword~
if name($o)/shunnedsmith
        opvalueset 1 1
        opfocus $y2
        opset obj reaver weight 110
endif
~
|
V13
98
carved wooden spear~
a carved wooden spear~
A carved wooden spear lies on the ground here.~
~
wood~
weapon PS 0 0 AN
spear 1 1 2 0
pierce~
15 150 3 3 P
0
O pierce~
V13
99
carved wooden longbow bow~
a carved wooden longbow~
A longbow carved from wood lies on the ground here.~
~
wood~
bow PS 0 0 AO
0 A A 0 0
58 100 0 3 P
0
V13
100
short arrow~
a short arrow~
A short arrow lies on the ground here.~
~
wood~
arrow S 0 F A
2 110 0 0 0
pierce~
50 4 20 1 P
0
A
28 1
O pierce~
V13
101
medium arrow~
a medium arrow~
A medium arrow lies on the ground here.~
~
wood~
arrow S 0 F A
2 100 0 0 0
pierce~
11 4 25 1 P
0
A
28 2
O pierce~
V13
102
long arrow~
a long arrow~
A long arrow lies on the ground here.~
~
wood~
arrow S 0 F A
2 90 0 0 0
pierce~
10 4 30 1 P
0
A
28 3
O pierce~
V13
103
barbed arrow~
a barbed arrow~
A barbed arrow lies on the ground here.~
~
wood~
arrow S 0 0 A
2 100 529 0 0
pierce~
58 4 200 1 P
0
A
28 1
O pierce~
V13
104
fiddleheads~
a few fiddleheads~
A few fiddleheads lie on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
105
lotus root~
a lotus root~
A lotus root lies on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
106
chanterelle mushrooms~
some chanterelle mushrooms~
Some chanterelle mushrooms lie on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
107
yucca fruit~
a yucca fruit~
A yucca fruit lies on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
108
arrowhead tuber~
an arrowhead tuber~
An arrowhead tuber lies on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
109
watercress leaves~
a few watercress leaves~
A few watercress leaves lie on the ground.~
~
unknown~
trash 0 0 0 0
0 0 0 0 0
0 0 0 0 P
0
V13
110
finger~
a finger from the corpse of %s~
A finger from the corpse of %s is here.~
~
flesh~
trash P 0 0 AO
0 0 0 0 0
0 1 0 2 P
0
V13
111
ear~
an ear from the corpse of %s~
An ear from the corpse of %s is here.~
~
flesh~
trash P 0 0 AO
0 0 0 0 0
0 1 0 2 P
0
V13
112
head~
the head from the corpse of %s~
The head from the corpse of %s is here.~
~
flesh~
trash P 0 0 AO
0 0 0 0 0
0 120 0 2 P
0
V13
113
tooth~
a tooth from the corpse of %s~
A tooth from the corpse of %s is here.~
~
bone~
trash P 0 0 AO
0 0 0 0 0
0 0 0 2 P
0
V13
114
hair~
some hair from the corpse of %s~
Some hair from the corpse of %s is here.~
~
hide~
trash 0 0 0 AO
0 0 0 0 0
0 0 0 2 P
0
V13
115
skull~
the skull from the corpse of %s~
The skull from the corpse of %s is here.~
~
bone~
trash P 0 0 AO
0 0 0 0 0
0 40 0 2 P
0
V13
116
corpse pccorpse dessicated~
the dessicated corpse of %s~
The dessicated husk of %s\@s corpse lies here.~
~
food~
trash O 0 0 0
0 0 0 0 0
0 1000 0 2 P
0
V13
117
hand~
a hand from the corpse of %s~
A hand from the corpse of %s is here.~
~
bone~
trash P 0 0 AO
0 0 0 0 0
0 5 0 1 P
0
V13
118
entrails obj_118~
some entrails from the corpse of %s~
Entrails from the corpse of %s.~
~
blood~
trash U 0 0 AO
0 0 0 0 0
0 40 0 2 P
0
V13
119
tongue~
a tongue from the corpse of %s~
A tongue from the corpse of %s.~
~
flesh~
trash U 0 0 AO
0 0 0 0 0
0 7 0 0 P
0
V13
120
skull demilich vaesh~
the skull of the archmage Vaeshir~
The sinister ebony skull of the archmage Vaeshir lies here.~
~
bone~
treasure a 0 0 AOP
0 0 0 0 0
51 10 0 1 P
0
E
skull~
The skull of the archmage Vaeshir is made from a burnished, almost
ebony-black bone.  Transformed by the horrific demilich ritual, the skull
flickers with a sullen, animate red light.  The teeth of the thing have been
replaced by fire opals, each priceless and completely without flaw.  
~
E
demilich~
The skull of the archmage Vaeshir is made from a burnished, almost
ebony-black bone.  Transformed by the horrific demilich ritual, the skull
flickers with a sullen, animate red light.  The teeth of the thing have been
replaced by fire opals, each priceless and completely without flaw.  
~
E
vaesh~
The skull of the archmage Vaeshir is made from a burnished, almost
ebony-black bone.  Transformed by the horrific demilich ritual, the skull
flickers with a sullen, animate red light.  The teeth of the thing have been
replaced by fire opals, each priceless and completely without flaw.  
~
V13
121
tome oneness knowing self locked~
the Tome of Oneness and Knowing~
A locked tome lies here.~
~
dragonhide~
treasure Ga 0 0 AOP
0 0 0 0 0
60 20 0 2 P
0
V13
122
heart obj_122~
a heart from the corpse of %s~
A heart from the corpse of %s.~
~
flesh~
food 0 0 0 AO
0 50 0 A 0
0 30 0 0 P
0
V13
123
sword wickedly barbed~
a wickedly barbed sword~
A wickedly barbed sword lies here.~
~
iron~
weapon HMZaf 0 0 AN
sword 8 6 2 0
stab~
52 150 520000 3 P
0
O stab~
>take_prog sword wickedly barbed~
mpechoat $n The sword flickers and evaporates, as if it were but a dream.
mpechoaround $n The sword flickers and evaporates as $N takes it, as if it were but a dream.
oppurge self
break
~
|
V13
124
brains obj_124~
the brains from the corpse of %s~
Brains from the corpse of %s are sitting here.~
~
flesh~
trash U 0 0 AO
0 0 0 0 0
0 40 0 0 P
0
V13
125
eye obj_125~
an eye from the corpse of %s~
An eye from the corpse of %s is here.~
~
flesh~
trash U 0 0 AO
0 0 0 0 0
0 0 0 0 P
0
V13
126
carved wooden mace~
a carved wooden mace~
A carved wooden mace lies on the ground here.~
~
wood~
weapon PS 0 0 AN
mace 0 0 1 0
crush~
60 150 0 2 P
0
O crush~
V13
127
crude net~
a crude net~
A crude net lies in a pile on the ground.~
~
plant~
net PS 0 0 AO
0 0 0 0 0
58 50 0 3 P
0
V13
129
arrow ranger handmade~
a handmade arrow~
A handmade arrow is here on the ground~
~
wood~
arrow S 0 0 A
11 100 0 0 0
pierce~
60 5 0 0 P
0
O pierce~
V13
130
bundle sticks moss firekit fire kit~
a bundle of sticks and moss~
A small bundle of sticks and moss lies on the ground, tied together with rope.~
~
wood~
treasure 0 0 0 A
0 0 0 0 0
0 20 0 0 P
0
E
bundle sticks moss firekit fire kit~
This small parcel of sticks and moss is bundled together with a short
length of rope.  You may be able to {rmake{x a {rcampfire{x with it.  
~
>verb_prog p make campfire~
if isowner($n)
if sector($o) == underwater
or sector($o) == swim
  mpechoat $n Fire and water simply don\@t mix well.
break
endif
if sector($o) == air
  mpechoat $n You have nothing to build a fire on.
break
endif
mpechoat $n You untie a bundle of sticks and moss, stringing a longer stick with the rope.
mpechoaround $n $N unties a bundle of sticks and moss, stringing a longer stick with the rope.
mpechoat $n You quickly use your firebow to start a small campfire.
mpechoaround $n $N quickly uses $s firebow to start a small campfire.
opoload 3609
oppurge self
mpverbstop
else
mpnextinterp
endif
~
|
V13
131
frond edible kelp~
a frond of edible kelp~
A frond of edible kelp lies on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
132
dandelion greens~
a few dandelion greens~
A few dandelion greens lie on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
133
chunk meat~
some meat~
Some meat is here.~
~
flesh~
food 0 0 0 A
0 50 0 0 0
0 10 0 0 P
0
V13
140
gamaloth fob obj_140~
the Gamaloth fob~
The Gamaloth fob ensures your visit is unforgettable.~
~
unknown~
trash d 0 0 A
0 0 0 0 0
52 0 0 0 P
0
>verb_prog enter~
if iscarrying($n) == 140
    if inroom($o) == 152
        if compstr(2) == heart
        or compstr(2) == pit
        or compstr(2) == hollow
            mpechoaround $o $O squeezes into the heart and vanishes.
            mpechoat $o You squeeze yourself into the palpitating aperture of the heart, and are sucked into blackness.
            mptransfer $o 8120
            mpforce $o look
        else
            mpnextinterp
        endif
    endif
    if inroom($o) == 146
        if compstr(2) == pit
        or compstr(2) == gaping
            mpechoaround $o $O clambers under the bough and dives into the pit.
            mpechoat $o You clamber under the bough and dive into the pit.
            mptransfer $o 22533
            mpforce $o look
        else
            mpnextinterp
        endif
    endif
    if inroom($o) == 141
        if compstr(2) == fleshy
        or compstr(2) == pit
        or compstr(2) == ring
            mpechoaround $o $O enters the pit, and it contracts, pulling $m through.
            mpechoat $o You step into the pit, and it contracts around you, pulling you into the darkness.
            mptransfer $o 13825
            mpforce $o look
        else
            mpnextinterp
        endif
    endif
    if inroom($o) == 148
        if compstr(2) == hole
        or compstr(2) == pit
        or compstr(2) == roots
            mpechoaround $o $O climbs down into the hole.
            mpechoat $o You climb into the hole, and the grasping roots seize you, pulling you downwards.
            mptransfer $o 19603
            mpforce $o look
        else
            mpnextinterp
        endif
    endif
    if inroom($o) == 147
        if compstr(2) == depression
        or compstr(2) == pit
        or compstr(2) == membrane
            mpechoaround $o The membrane bursts open in a shower of foul pus, and $O falls through!
            mpechoat $o The membrane bursts like a plague ulcer as you touch it, and you fall into the darkness within.
            mptransfer $o 2892
            mpforce $o look
        else
            mpnextinterp
        endif
    endif
    if inroom($o) == 151
        if compstr(2) == fissure
        or compstr(2) == pit
        or compstr(2) == jagged
            mpechoaround $o $O plunges into the fissure and disappears into the abyss.
            mpechoat $o You plunge into the fissure and fall through the darkness.
            mptransfer $o 15286
            mpforce $o look
        else
            mpnextinterp
        endif
    endif
endif
~
>tick_prog 100~
if value(0) > 0
    if value(6) == 1
        mpvalueup 0
    else
        mpvaluedown 0
        if snaffected($o) == 128
        else
            mpechoat $o The corruption of the Grove seeps into your bones.
            mpaddaffect 128 51 -1 0 0 53687091
        endif
        if rand(50)
            mpechoat $o Gamaloth\@s hunger gnaws at you from afar.
            mpget char $o hp 7
            mpmath 8 $7 / 20
            mpvaluerand 4 10 $8
            mpdamage $o 1 1 $4
        endif
    endif
else
    mpechoat $o The lingering taint of Oame finally recedes.
    mpremaffect 128
    mppurge self
endif
~
>rand_prog 100~
mpvalueset 5 139
mpvalueset 6 0
loop 1 to 14
    mpvalueup 5
    if inroom($o) == $5
        mpvalueset 6 1
    endif
endloop
if value(6) == 1
    mpvalueup 0
endif
~
>verb_prog initialize~
if ispc($n)
or isnpc($n)
else
    mpvalueset 0 1
endif
~
|
V13
142
tiny bow tie~
a tiny bow tie~
A miniscule bow tie lies here, tinged in faded dark blue.~
~
cloth~
trash TU 0 0 ACO
0 0 0 0 0
10 0 0 0 P
0
E
tiny bow tie~
Almost impossibly small, this dark blue bow tie isn\@t even large enough
for a child.  Crafted as though for a doll, the peculiar accessory seems to
carry with it an almost dignified sense of culture -- or would, were it not
coated in a sticky layer of slimy fluid.  
~
O ~
V13
143
pair tiny spectacles~
a pair of tiny spectacles~
A tiny pair of spectacles lies here, the lenses glinting.~
~
oak~
trash TU 0 0 AEO
0 0 0 0 0
10 0 0 0 P
0
A
12 1
E
pair tiny spectacles~
This tiny pair of spectacles was clearly not made for a human face, or
even a nefortu\@s.  The miniscule lenses have been carefully polished, though
the frames are slightly sticky.  On closer inspection, it becomes evident
that the frames have been whittled from small twigs, which must have
naturally formed a shape close to their final form.  
~
O ~
V13
144
familiar familiar_obj python snake mottled~
a python~
A darkly mottled python is wound in a relaxed coil along one arm.~
~
scale~
special EMTYZa 0 0 PT
0 0 0 0 0
0 30 0 2 P
0
O coiled around arm~
>data_prog echo_on_fight~
mpechoat $o $I cooly observes the battle from the vantagepoint of your arm.
mpechoat $o $I slithers its coils further up your arm, to avoid any interference with the fray.
mpecho $I watches on in silence as the battle progresses.
mpecho Blinking slitted eyes, $I dispassionately observes the conflict.
~
>data_prog echo_on_unrecognized_command~
mpechoat $o $I shifts its gaze to you for a moment, then looks away.
mpechoat $O $I shifts $l coils slightly on your arm.
~
>data_prog echo_on_ready_to_become_mobile~
mpechoat $o The python adjusts its coils around your arm, tongue flicking in the air.
~
>data_prog echo_on_remaining_object~
mpecho $I hisses softly, clearly comfortable where it is.
~
>data_prog echo_on_become_mobile~
mpecho $I unwinds and slides gracefully down from $O.
~
>data_prog settings~
52
25
~
>speech_prog p ~
// Validate master and familiar
mploadstring obj self 0 familiarname
if not name($n) == $o
or not compx() == %familiarname
or value(2) == 0
  break
endif
// Check for becoming a mobile
if compx() == off
or compx() == down
or compx() == away
or compx() == space
or compx() == back
or compx() == out
  // Check whether the familiar has had enough time in position
  if value(1) <= 0
    // Sufficient time as obj, so become a mobile
    mpcallsub do_backoff
  else
    // Insufficient time as obj
    mpstring obj self s9 echo_on_remaining_object
    mpcallsub do_echo $o
  endif
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring obj self s9 echo_on_unrecognized_command
  mpcallsub do_echo $o
endif
~
>sub_prog do_backoff~
// Turn the obj into a mob, then lag and purge
mpcallsub do_become_mobile
mplag $n 1
mppurge self
~
>sub_prog do_become_mobile~
// Send the echo
mpstring obj self s9 echo_on_become_mobile
mpcallsub do_echo $o
// Load the mobile
mpsetdata settings
mpmload $d
// Initialize the mobile
mpget obj self level 9
mpcopyvalues all obj self char familiar
mpcallsub mob familiar do_initialize $o
~
>rand_prog 100~
mpvaluedown 1
if value(1) == 0
  // Ready to become a mobile again, send the echo
  mpstring obj self s9 echo_on_ready_to_become_mobile
  mpcallsub do_echo $o
endif
if value(2) == 0
  mpvalueset 2 1
endif
~
>sub_prog do_initialize~
// Set level and name
mpset obj self level $9
mploadstring obj self 0 familiarName
mpstring obj self name $i $I %familiarName
// Set cooldown timers for the object
mpsetdata settings
mpnextdata 1
mpvalueset 1 $d
mpvalueset 2 0
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>fight_prog 100~
// Check for fight echoes
if rand(5)
  if rand(5)
    // Send echo
    mpstring obj self s9 echo_on_fight
    mpcallsub do_echo $o
  endif
endif
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring obj self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget obj self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
$d
~
>death_prog 100~
// Master died, convert to mobile and purge
mpcallsub do_become_mobile
mppurge self
~
|
V13
145
familiar familiar_obj toad leathery~
a leathery toad~
A leathery toad clings to the shoulder of its mage.~
~
flesh~
special MTYZa 0 0 PT
0 0 0 0 0
0 20 0 1 P
0
O sitting on shoulder~
>data_prog echo_on_fight~
mpecho {Y$I observes, \@Going well enough, I suppose.\@{x
mpecho {Y$I comments, \@A hemoplague in time saves nine.\@{x
mpecho {Y$I notes, \@There are at least 37 ways for this to end, but only 3 or 4 of those likely.\@{x
mpecho {Y$I suggests, \@Six more solid blows should do the job, or we\@re wasting our time.\@{x
mpechoat $O $I flicks out its tongue, catching a drop of blood.
mpechoat $O $I mumbles something about practice versus theory.
mpechoat $O $I ducks, pressing itself flat down on your shoulder.
mpechoat $O $I nearly falls off your shoulder, then scrabbles for a better grip.
~
>data_prog echo_on_unrecognized_command~
mpechoat $O The leathery toad on your shoulder clears its throat.
~
>data_prog echo_on_ready_to_become_mobile~
mpechoat $O The leathery toad stretches out its hind legs, one after the other, then nods.
~
>data_prog echo_on_remaining_object~
mpechoat $O The leathery toad frowns and croaks something about needing time to collect thoughts.
~
>data_prog echo_on_become_mobile~
mpecho A leathery toad hops down from $N, landing with a dignified thud.
~
>data_prog settings~
55
40
~
>speech_prog p ~
// Validate master and familiar
mploadstring obj self 0 familiarname
if not name($n) == $o
or not compx() == %familiarname
or value(2) == 0
  break
endif
// Check for becoming a mobile
if compx() == off
or compx() == down
or compx() == away
or compx() == space
or compx() == back
or compx() == out
  // Check whether the familiar has had enough time in position
  if value(1) <= 0
    // Sufficient time as obj, so become a mobile
    mpcallsub do_backoff
  else
    // Insufficient time as obj
    mpstring obj self s9 echo_on_remaining_object
    mpcallsub do_echo $o
  endif
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring obj self s9 echo_on_unrecognized_command
  mpcallsub do_echo $o
endif
~
>sub_prog do_backoff~
// Turn the obj into a mob, then lag and purge
mpcallsub do_become_mobile
mplag $n 1
mppurge self
~
>sub_prog do_become_mobile~
// Send the echo
mpstring obj self s9 echo_on_become_mobile
mpcallsub do_echo $o
// Load the mobile
mpsetdata settings
mpmload $d
// Initialize the mobile
mpget obj self level 9
mpcopyvalues all obj self char familiar
mpcallsub mob familiar do_initialize $o
~
>rand_prog 100~
mpvaluedown 1
if value(1) == 0
  // Ready to become a mobile again, send the echo
  mpstring obj self s9 echo_on_ready_to_become_mobile
  mpcallsub do_echo $o
endif
if value(2) == 0
  mpvalueset 2 1
endif
~
>sub_prog do_initialize~
// Set level and name
mpset obj self level $9
mploadstring obj self 0 familiarName
mpstring obj self name $i $I %familiarName
// Set cooldown timers for the object
mpsetdata settings
mpnextdata 1
mpvalueset 1 $d
mpvalueset 2 0
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>fight_prog 100~
// Check for fight echoes
if rand(5)
  if rand(5)
    // Send echo
    mpstring obj self s9 echo_on_fight
    mpcallsub do_echo $o
  endif
endif
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring obj self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget obj self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
$d
~
>death_prog 100~
// Master died, convert to mobile and purge
mpcallsub do_become_mobile
mppurge self
~
|
V13
146
familiar familiar_obj bat black~
a black bat~
A black bat clutches at its mage and hangs upside down.~
~
flesh~
special EMTYZa 0 0 PT
0 0 0 0 0
0 30 0 1 P
0
O hanging from ear~
>data_prog echo_on_fight~
mpecho {Y$I chitters excitedly \@Make it bleed slow, don\@t want to waste any.\@{x
mpecho {Y$I squeaks, \@So much blood...So much BLOOD!\@{x
mpecho $I digs clawed wings into $O\@s neck, and licks its lips at the excitement.
mpecho {Y$I says \@Is it dead?! Don\@t kill it, just incapacitate it.\@{x
mpecho {Y$I says \@What a feast!\@{x
~
>data_prog echo_on_unrecognized_command~
mpecho $I\@s ears perk up and twitch slightly.
~
>data_prog echo_on_ready_to_become_mobile~
mpecho $I begins to grow more active, crawling and scratching at $O\@s neck.
~
>data_prog echo_on_remaining_object~
mpechoat $o {Y$I groans, \@If you\@re trying to torture me, you\@re doing a good job of it.\@{x
mpechoaround $o $I squeaks and blinks its gleaming red eyes, but stays upon $O\@s ear.
~
>data_prog echo_on_become_mobile~
mpecho $I drops from $O\@s ear and begins to flap about the area.
~
>data_prog settings~
54
25
~
>speech_prog p ~
// Validate master and familiar
mploadstring obj self 0 familiarname
if not name($n) == $o
or not compx() == %familiarname
or value(2) == 0
  break
endif
// Check for becoming a mobile
if compx() == off
or compx() == down
or compx() == away
or compx() == space
or compx() == back
or compx() == out
  // Check whether the familiar has had enough time in position
  if value(1) <= 0
    // Sufficient time as obj, so become a mobile
    mpcallsub do_backoff
  else
    // Insufficient time as obj
    mpstring obj self s9 echo_on_remaining_object
    mpcallsub do_echo $o
  endif
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring obj self s9 echo_on_unrecognized_command
  mpcallsub do_echo $o
endif
~
>sub_prog do_backoff~
// Turn the obj into a mob, then lag and purge
mpcallsub do_become_mobile
mplag $n 1
mppurge self
~
>sub_prog do_become_mobile~
// Send the echo
mpstring obj self s9 echo_on_become_mobile
mpcallsub do_echo $o
// Load the mobile
mpsetdata settings
mpmload $d
// Initialize the mobile
mpget obj self level 9
mpcopyvalues all obj self char familiar
mpcallsub mob familiar do_initialize $o
~
>rand_prog 100~
mpvaluedown 1
if value(1) == 0
  // Ready to become a mobile again, send the echo
  mpstring obj self s9 echo_on_ready_to_become_mobile
  mpcallsub do_echo $o
endif
if value(2) == 0
  mpvalueset 2 1
endif
~
>sub_prog do_initialize~
// Set level and name
mpset obj self level $9
mploadstring obj self 0 familiarName
mpstring obj self name $i $I %familiarName
// Set cooldown timers for the object
mpsetdata settings
mpnextdata 1
mpvalueset 1 $d
mpvalueset 2 0
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>fight_prog 100~
// Check for fight echoes
if rand(5)
  if rand(5)
    // Send echo
    mpstring obj self s9 echo_on_fight
    mpcallsub do_echo $o
  endif
endif
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring obj self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget obj self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
$d
~
>death_prog 100~
// Master died, convert to mobile and purge
mpcallsub do_become_mobile
mppurge self
~
|
V13
147
familiar familiar_obj raven~
a raven~
A raven with coal-black feathers is perched upon a shoulder.~
~
feather~
special EMTYZa 0 0 PT
0 0 0 0 0
0 30 0 1 P
0
O perched on shoulder~
>data_prog echo_on_fight~
mpecho {YThe raven exclaims, \@The eyes, go for the EYES!\@{x
mpecho The raven caws annoyingly as it spectates the fight.
~
>data_prog echo_on_unrecognized_command~
mpecho The raven tilts its head to the side and peers at $N.
mpecho {YThe raven perks up, saying, \@Hm? Me?\@{x
~
>data_prog echo_on_ready_to_become_mobile~
mpecho The raven flexes its wings, ready to take flight.
~
>data_prog echo_on_remaining_object~
mpecho {YThe raven says, \@I just perched, and you are asking me to fly again...\@{x
~
>data_prog echo_on_become_mobile~
mpecho The raven takes off from $N\@s shoulder and begins to fly about the area.
~
>data_prog settings~
50
40
~
>speech_prog p ~
// Validate master and familiar
mploadstring obj self 0 familiarname
if not name($n) == $o
or not compx() == %familiarname
or value(2) == 0
  break
endif
// Check for becoming a mobile
if compx() == off
or compx() == down
or compx() == away
or compx() == space
or compx() == back
or compx() == out
  // Check whether the familiar has had enough time in position
  if value(1) <= 0
    // Sufficient time as obj, so become a mobile
    mpcallsub do_backoff
  else
    // Insufficient time as obj
    mpstring obj self s9 echo_on_remaining_object
    mpcallsub do_echo $o
  endif
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring obj self s9 echo_on_unrecognized_command
  mpcallsub do_echo $o
endif
~
>sub_prog do_backoff~
// Turn the obj into a mob, then lag and purge
mpcallsub do_become_mobile
mplag $n 1
mppurge self
~
>sub_prog do_become_mobile~
// Send the echo
mpstring obj self s9 echo_on_become_mobile
mpcallsub do_echo $o
// Load the mobile
mpsetdata settings
mpmload $d
// Initialize the mobile
mpget obj self level 9
mpcopyvalues all obj self char familiar
mpcallsub mob familiar do_initialize $o
~
>rand_prog 100~
mpvaluedown 1
if value(1) == 0
  // Ready to become a mobile again, send the echo
  mpstring obj self s9 echo_on_ready_to_become_mobile
  mpcallsub do_echo $o
endif
if value(2) == 0
  mpvalueset 2 1
endif
~
>sub_prog do_initialize~
// Set level and name
mpset obj self level $9
mploadstring obj self 0 familiarName
mpstring obj self name $i $I %familiarName
// Set cooldown timers for the object
mpsetdata settings
mpnextdata 1
mpvalueset 1 $d
mpvalueset 2 0
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>fight_prog 100~
// Check for fight echoes
if rand(5)
  if rand(5)
    // Send echo
    mpstring obj self s9 echo_on_fight
    mpcallsub do_echo $o
  endif
endif
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring obj self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget obj self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
$d
~
>death_prog 100~
// Master died, convert to mobile and purge
mpcallsub do_become_mobile
mppurge self
~
|
V13
148
familiar familiar_obj fox red~
a red fox~
A red fox slinks at the side of its master.~
~
fur~
special EMTZa 0 0 PT
0 0 0 0 0
0 0 0 2 P
0
O slinking alongside~
>data_prog settings~
53
55
~
>speech_prog p ~
// Validate master and familiar
mploadstring obj self 0 familiarname
if not name($n) == $o
or not compx() == %familiarname
or value(2) == 0
  break
endif
// Check for becoming a mobile
if compx() == off
or compx() == down
or compx() == away
or compx() == space
or compx() == back
or compx() == out
  // Check whether the familiar has had enough time in position
  if value(1) <= 0
    // Sufficient time as obj, so become a mobile
    mpcallsub do_backoff
  else
    // Insufficient time as obj
    mpstring obj self s9 echo_on_remaining_object
    mpcallsub do_echo $o
  endif
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring obj self s9 echo_on_unrecognized_command
  mpcallsub do_echo $o
endif
~
>sub_prog do_backoff~
// Turn the obj into a mob, then lag and purge
mpcallsub do_become_mobile
mplag $n 1
mppurge self
~
>sub_prog do_become_mobile~
// Send the echo
mpstring obj self s9 echo_on_become_mobile
mpcallsub do_echo $o
// Load the mobile
mpsetdata settings
mpmload $d
// Initialize the mobile
mpget obj self level 9
mpcopyvalues all obj self char familiar
mpcallsub mob familiar do_initialize $o
~
>rand_prog 100~
mpvaluedown 1
if value(1) == 0
  // Ready to become a mobile again, send the echo
  mpstring obj self s9 echo_on_ready_to_become_mobile
  mpcallsub do_echo $o
endif
if value(2) == 0
  mpvalueset 2 1
endif
~
>sub_prog do_initialize~
// Set level and name
mpset obj self level $9
mploadstring obj self 0 familiarName
mpstring obj self name $i $I %familiarName
// Set cooldown timers for the object
mpsetdata settings
mpnextdata 1
mpvalueset 1 $d
mpvalueset 2 0
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>fight_prog 100~
// Check for fight echoes
if rand(5)
  if rand(5)
    // Send echo
    mpstring obj self s9 echo_on_fight
    mpcallsub do_echo $o
  endif
endif
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring obj self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget obj self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
$d
~
>death_prog 100~
// Master died, convert to mobile and purge
mpcallsub do_become_mobile
mppurge self
~
>data_prog echo_on_fight~
mpechoat $n {gThe fox tells you, \@Would you mind keeping it down?\@{x
mpechoat $n {gThe fox tells you, \@Less noise, please.\@{x
mpechoat $n {gThe fox tells you, \@What a disaster.\@{x
~
>data_prog echo_on_unrecognized_command~
mpecho $n The fox twitches peculiarly.
~
>data_prog echo_on_ready_to_become_mobile~
mpechoat $n {gThe fox tells you, \@Ready when you are. But please, take your time.\@{x
~
>data_prog echo_on_remaining_object~
mpechoat $n {gThe fox tells you, \@Forget it! I\@m resting.\@{x
~
>data_prog echo_on_become_mobile~
mpecho The fox springs forward excitedly.
~
|
V13
149
familiar familiar_obj cat black~
a black cat~
A black cat stands close to the side of its master.~
~
fur~
special MOTZa 0 0 PT
0 0 0 0 0
0 30 0 2 P
0
O prowling beside~
>data_prog echo_on_fight~
mpecho $I hisses loudly.
mpecho $I darts through the fray, hissing.
mpecho $I growls defiantly.
mpecho $I leaps and twists backwards, avoiding the fray.
mpechoat $o $I stays at your side, back arched and claws extended.
mpechoat $o $I presses close to your legs, for protection.
~
>data_prog echo_on_unrecognized_command~
mpechoat $o $I glances around, then begins to lick its fur fastidiously.
~
>data_prog echo_on_ready_to_become_mobile~
mpecho $I purrs softly.
~
>data_prog echo_on_remaining_object~
mpechoat $o $I makes a soft but dissatisfied growl.
~
>data_prog echo_on_become_mobile~
mpecho $I disengages herself from $O, then stretches luxuriously.
~
>data_prog settings~
56
55
~
>speech_prog p ~
// Validate master and familiar
mploadstring obj self 0 familiarname
if not name($n) == $o
or not compx() == %familiarname
or value(2) == 0
  break
endif
// Check for becoming a mobile
if compx() == off
or compx() == down
or compx() == away
or compx() == space
or compx() == back
or compx() == out
  // Check whether the familiar has had enough time in position
  if value(1) <= 0
    // Sufficient time as obj, so become a mobile
    mpcallsub do_backoff
  else
    // Insufficient time as obj
    mpstring obj self s9 echo_on_remaining_object
    mpcallsub do_echo $o
  endif
  break
endif
// Master said name, but did not trigger a known command
if rand(25)
  // Send an echo about it
  mpstring obj self s9 echo_on_unrecognized_command
  mpcallsub do_echo $o
endif
~
>sub_prog do_backoff~
// Turn the obj into a mob, then lag and purge
mpcallsub do_become_mobile
mplag $n 1
mppurge self
~
>sub_prog do_become_mobile~
// Send the echo
mpstring obj self s9 echo_on_become_mobile
mpcallsub do_echo $o
// Load the mobile
mpsetdata settings
mpmload $d
// Initialize the mobile
mpget obj self level 9
mpcopyvalues all obj self char familiar
mpcallsub mob familiar do_initialize $o
~
>rand_prog 100~
mpvaluedown 1
if value(1) == 0
  // Ready to become a mobile again, send the echo
  mpstring obj self s9 echo_on_ready_to_become_mobile
  mpcallsub do_echo $o
endif
if value(2) == 0
  mpvalueset 2 1
endif
~
>sub_prog do_initialize~
// Set level and name
mpset obj self level $9
mploadstring obj self 0 familiarName
mpstring obj self name $i $I %familiarName
// Set cooldown timers for the object
mpsetdata settings
mpnextdata 1
mpvalueset 1 $d
mpvalueset 2 0
~
>hour_prog 0~
// Adjust the work counter down
mpvaluedown 0
if value(0) < 0
  mpvalueset 0 0
endif
~
>fight_prog 100~
// Check for fight echoes
if rand(5)
  if rand(5)
    // Send echo
    mpstring obj self s9 echo_on_fight
    mpcallsub do_echo $o
  endif
endif
~
>sub_prog do_echo~
// Load the data prog from s9
mploadstring obj self 9 progName
mpsetdata %progName
// Choose a random line to trigger
mpget obj self dataproglinecount 9
mpmath 9 $9 - 1
mpvaluerand randomLine 0 $9
mpnextdata %randomLine
$d
~
>death_prog 100~
// Master died, convert to mobile and purge
mpcallsub do_become_mobile
mppurge self
~
|
V13
150
scrolls logor~
the scrolls of Logor~
A pale white bundle of scrolls lie here.~
~
flesh~
treasure Ba 0 0 AOP
0 0 0 0 0
51 10 0 2 P
1
E
scroll2~
The scrolls of Logor are made from some leprous, white material, with the
consistency of tanned leather.  Burnt into the surface of the scrolls are
various spells and mystic writings, all written in the language of the demon
city of Logor.  

From what you can discern, there are a great many spells within the scrolls,
most of which detail the secrets of the shuddeni templars of the War of
Night.  An appendix at the end concerns certain dark magics that are of such
a great power that a focus of ancient power is required.  
~
E
scroll1~
The scrolls of Logor are made from a leprous, white material, with the
consistency of tanned leather.  Seemingly burnt into the surface of the
scrolls are strange, alien lettering, with sharp, angular figures
reminiscent of the script of the shuddeni.  
~
>verb_prog p look ~
if isowner($n)
if compstr(2) == scroll
or compstr(2) == scrolls
or compstr(2) == logor
if class($n) == 2
or class($n) == 8
opforce $n read scroll2
else
opforce $n read scroll1
endif
else
opinterpret $n $x
endif
else
opinterpret $n $x
endif
~
|
V13
151
old iron chalice dented~
a battered iron chalice~
A battered iron chalice rests here.~
~
iron~
drink 0 0 0 AO
10 10 'water' 0 0
52 20 0 1 P
0
V13
152
ch\@lonin sword blade gold golden~
a ch\@lonin sword~
A translucent gold sword lies here.~
~
unknown~
weapon KLa 0 0 ANP
sword 8 6 15 0
searing light~
52 170 520000 2 P
1
E
golden~
Made from a solid piece of the legendary ch\@lonin, this sword is a
delicate shade of translucent gold.  A soft gold glow emanates from the
entire blade, and the silver hilt tingles with magical energy.  
~
E
gold~
Made from a solid piece of the legendary ch\@lonin, this sword is a
delicate shade of translucent gold.  A soft gold glow emanates from the
entire blade, and the silver hilt tingles with magical energy.  
~
E
ch\@lonin~
Made from a solid piece of the legendary ch\@lonin, this sword is a
delicate shade of translucent gold.  A soft gold glow emanates from the
entire blade, and the silver hilt tingles with magical energy.  
~
E
blade~
Made from a solid piece of the legendary ch\@lonin, this sword is a
delicate shade of translucent gold.  A soft gold glow emanates from the
entire blade, and the silver hilt tingles with magical energy.  
~
E
sword~
Made from a solid piece of the legendary ch\@lonin, this sword is a
delicate shade of translucent gold.  A soft gold glow emanates from the
entire blade, and the silver hilt tingles with magical energy.  
~
O searing light~
>fight_prog 2~
if isworn($o)
opechoat $n A ray of light wells up from the ch\@lonin blade, {rBLASTING{x you!
opechoaround $n A ray of light wells up from the ch\@lonin sword, {rBLASTING{x $N!
opdamtype $n 1 75 90 15
endif
~
|
V13
153
breastplate plate breast silver Nador~
the breastplate of Nador~
A silver breastplate lies here.~
~
silver~
armor KLa 0 0 ANP
12 12 12 8 0
52 120 570003 2 P
1
A
19 2
A
12 50
A
13 50
E
silver~
The breastplate of the legendary spirit templar Telan Nador, this armor
is made from meticulously forged steel, inlaid with silver trappings.  On
the front is the crest of the Nador house, now long forgotten among the
scions of Earendam.  
~
E
nador~
The breastplate of the legendary spirit templar Telan Nador, this armor
is made from meticulously forged steel, inlaid with silver trappings.  On
the front is the crest of the Nador house, now long forgotten among the
scions of Earendam.  
~
E
breast~
The breastplate of the legendary spirit templar Telan Nador, this armor
is made from meticulously forged steel, inlaid with silver trappings.  On
the front is the crest of the Nador house, now long forgotten among the
scions of Earendam.  
~
E
plate~
The breastplate of the legendary spirit templar Telan Nador, this armor
is made from meticulously forged steel, inlaid with silver trappings.  On
the front is the crest of the Nador house, now long forgotten among the
scions of Earendam.  
~
E
breastplate~
The breastplate of the legendary spirit templar Telan Nador, this armor
is made from meticulously forged steel, inlaid with silver trappings.  On
the front is the crest of the Nador house, now long forgotten among the
scions of Earendam.  
~
>fight_prog 2~
if isworn($o)
opechoat $o Your breastplate glows, and a warm feeling suffuses your body.
opechoaround $o A soft glow emanates from $O\@s breastplate.
opcast 34 51
endif
~
|
V13
154
twice-blessed gloves twice blessed~
a pair of twice-blessed gloves~
A pair of blessed chainmail gloves is here.~
~
steel~
armor BKa 0 0 AHP
10 10 10 7 0
52 30 29288 1 P
1
A
18 3
A
19 3
E
twice~
These gloves are made from chainmail and burnished leather.  Emblazoned
on their backs are the symbols of a pegasus in flight and a golden hand.  
~
E
gloves~
These gloves are made from chainmail and burnished leather.  Emblazoned
on their backs are the symbols of a pegasus in flight and a golden hand.  
~
E
blessed~
These gloves are made from chainmail and burnished leather.  Emblazoned
on their backs are the symbols of a pegasus in flight and a golden hand.  
~
E
twice-blessed~
These gloves are made from chainmail and burnished leather.  Emblazoned
on their backs are the symbols of a pegasus in flight and a golden hand.  
~
>wear_prog 100~
opechoat $o You feel yourself moving more quickly.
opechoat $o You feel holy and pure.
if snaffected($n) == 76
else
opaddaffect 76 51 -1 2 4 2097152
endif
if snaffected($n) == 7
else
opaddaffect 7 51 -1 18 7 0
opaddaffect 7 51 -1 24 -7 0
endif
~
>remove_prog 100~
opechoat $o You feel yourself slow down.
opechoat $o You feel less holy.
opremaffect 76
opremaffect 7
opremaffect 7
~
|
V13
155
helm trueseeing truesight~
a helm of trueseeing~
A helm of trueseeing lies here.~
~
gold~
armor Ka 0 0 AEP
7 7 7 7 0
52 40 97701 2 P
0
A
19 3
A
18 2
A
12 50
E
truesight~
Made from polished gold, this helm has spikes on either side, and a
fixture inset with mother of pearl on the front.  The helm tingles with
magical energy, and a soft glow surrounds the pearl fixture.  
~
E
trueseeing~
Made from polished gold, this helm has spikes on either side, and a
fixture inset with mother of pearl on the front.  The helm tingles with
magical energy, and a soft glow surrounds the pearl fixture.  
~
E
helm~
Made from polished gold, this helm has spikes on either side, and a
fixture inset with mother of pearl on the front.  The helm tingles with
magical energy, and a soft glow surrounds the pearl fixture.  
~
E
helmet~
Made from polished gold, this helm has spikes on either side, and a
fixture inset with mother of pearl on the front.  The helm tingles with
magical energy, and a soft glow surrounds the pearl fixture.  
~
>wear_prog 100~
opcast 692 99
endif
~
|
V13
156
seal disk silver Jolinn~
the great seal of Jolinn~
A silver disk, lined with sapphire, lies here.~
~
sapphire~
treasure ABa 0 0 AOP
0 0 0 0 0
57 50 0 2 P
0
E
jolinn~
This small disk is made from pure silver, ringed with a row of perfect
sapphires.  Tracing the inner edge of the circle of sapphires are holy
runes, all reminiscent of those used by the Sons and Daughters of Jolinn.  
~
E
seal~
This small disk is made from pure silver, ringed with a row of perfect
sapphires.  Tracing the inner edge of the circle of sapphires are holy
runes, all reminiscent of those used by the Sons and Daughters of Jolinn.  
~
E
silver~
This small disk is made from pure silver, ringed with a row of perfect
sapphires.  Tracing the inner edge of the circle of sapphires are holy
runes, all reminiscent of those used by the Sons and Daughters of Jolinn.  
~
E
disk~
This small disk is made from pure silver, ringed with a row of perfect
sapphires.  Tracing the inner edge of the circle of sapphires are holy
runes, all reminiscent of those used by the Sons and Daughters of Jolinn.  
~
V13
157
mirrored ring silver stone beautiful mirror mirror-stone~
a beautiful mirror-stone ring~
A beautiful mirror-stone ring lies here.~
~
glass~
treasure a 0 0 ABP
0 0 0 0 0
52 20 157247 0 P
1
A
13 30
A
12 20
A
49 5
E
mirror-stone~
This beautiful silver ring is inset with a mirrored stone.  Made from
some unknown material, the orb-shaped stone reflects the immediate
surroundings in a continually changing phantasmagoria of their true selves. 
The ring tingles to the touch, and flows with some magical energy.  
~
E
mirrored~
This beautiful silver ring is inset with a mirrored stone.  Made from
some unknown material, the orb-shaped stone reflects the immediate
surroundings in a continually changing phantasmagoria of their true selves. 
The ring tingles to the touch, and flows with some magical energy.  
~
E
ring~
This beautiful silver ring is inset with a mirrored stone.  Made from
some unknown material, the orb-shaped stone reflects the immediate
surroundings in a continually changing phantasmagoria of their true selves. 
The ring tingles to the touch, and flows with some magical energy.  
~
E
silver~
This beautiful silver ring is inset with a mirrored stone.  Made from
some unknown material, the orb-shaped stone reflects the immediate
surroundings in a continually changing phantasmagoria of their true selves. 
The ring tingles to the touch, and flows with some magical energy.  
~
E
beautiful~
This beautiful silver ring is inset with a mirrored stone.  Made from
some unknown material, the orb-shaped stone reflects the immediate
surroundings in a continually changing phantasmagoria of their true selves. 
The ring tingles to the touch, and flows with some magical energy.  
~
E
stone~
This beautiful silver ring is inset with a mirrored stone.  Made from
some unknown material, the orb-shaped stone reflects the immediate
surroundings in a continually changing phantasmagoria of their true selves. 
The ring tingles to the touch, and flows with some magical energy.  
~
>fight_prog 3~
if isworn($o)
if snaffected($n) == 350
else
opechoat $n A swirl of silver light flows out of $O\@s ring, wrapping itself around you!
opechoaround $n A swirl of silver light flows out of the mirror-stone ring, wrapping around $N!
opcast 350 99
endif
endif
~
|
V13
158
cloak prismatic prism ~
a prismatic cloak~
An iridescent prismatic cloak lies here.~
~
energy~
armor a 0 0 AK
5 5 5 10 0
52 70 102137 2 P
1
A
47 10
A
18 3
A
13 20
A
12 20
E
cloak~
This cloak is soft as velvet to the touch, but visually appears to be
made of some mirrored glass.  Broken into dozens of facets, it shimmers as
it moves, flickering with bursts of rainbow light, as its surface acts as a
prism.  
~
E
prismatic~
This cloak is soft as velvet to the touch, but visually appears to be
made of some mirrored glass.  Broken into dozens of facets, it shimmers as
it moves, flickering with bursts of rainbow light, as its surface acts as a
prism.  
~
E
prism~
This cloak is soft as velvet to the touch, but visually appears to be
made of some mirrored glass.  Broken into dozens of facets, it shimmers as
it moves, flickering with bursts of rainbow light, as its surface acts as a
prism.  
~
E
iridescent~
This cloak is soft as velvet to the touch, but visually appears to be
made of some mirrored glass.  Broken into dozens of facets, it shimmers as
it moves, flickering with bursts of rainbow light, as its surface acts as a
prism.  
~
>rand_prog 33~
if objvalue(0) > 0
opvaluedown 0
endif
~
>wear_prog 20~
if isworn($o)
if snaffected($n) == 609
else
if objvalue(0) == 0
opcast 609 99 
opvalueset 0 200
endif
endif
endif
~
|
V13
159
necklace diamond translucent~
a translucent diamond necklace~
A translucent diamond necklace lies here.~
~
diamond~
jewelry 0 0 0 AC
0 0 0 0 0
52 30 182130 1 P
1
A
38 10
A
13 10
A
12 10
A
20 -3
E
translucent~
An electric sparkle skitters along the chain of this diamond necklace. 
The diamond set in the necklace is well over a carat, and fades into and out
of insubstantiability, under the influence of some sort of magical spell.  
~
E
diamond~
An electric sparkle skitters along the chain of this diamond necklace. 
The diamond set in the necklace is well over a carat, and fades into and out
of insubstantiability, under the influence of some sort of magical spell.  
~
E
necklace~
An electric sparkle skitters along the chain of this diamond necklace. 
The diamond set in the necklace is well over a carat, and fades into and out
of insubstantiability, under the influence of some sort of magical spell.  
~
>wear_prog 100~
if snaffected($n) == 103
else
opcast 103 99
endif
~
>death_prog 100~
opecho The necklace explodes in a storm of lightning!
opmload 2030
oppurge self
~
>fight_prog 5~
if isworn($o)
opechoaround $o A pair of lightning bolts arc from $O\@s diamond pendant!
opechoat $o A pair of lightning bolts arc from your pendant!
opcast 89 99
opcast 89 99
endif
~
|
V13
160
chest silver fire opals opal~
a chest of fire opals~
A small silver chest, brimming with fire opals, lies here.~
~
silver~
treasure a 0 0 AOP
0 0 0 0 0
60 100 0 1 P
0
E
opal~
This small silver chest is filled to the brim with fire opals of stunning
quality and splendor.  Each opal is completely without flaw, and glows a dim
red.  
~
E
opals~
This small silver chest is filled to the brim with fire opals of stunning
quality and splendor.  Each opal is completely without flaw, and glows a dim
red.  
~
E
fire~
This small silver chest is filled to the brim with fire opals of stunning
quality and splendor.  Each opal is completely without flaw, and glows a dim
red.  
~
E
silver~
This small silver chest is filled to the brim with fire opals of stunning
quality and splendor.  Each opal is completely without flaw, and glows a dim
red.  
~
E
chest~
This small silver chest is filled to the brim with fire opals of stunning
quality and splendor.  Each opal is completely without flaw, and glows a dim
red.  
~
V13
161
bowl seraph blood crimson fluid~
a bowl of seraph blood~
A bowl of crimson fluid rests here, its contents radiant and ever-moving.~
~
blood~
drink AG 0 0 AO
20 20 'blood' 0 0
51 5 0 0 P
0
V13
162
codex planes belerin\@s leather bound volume first tome~
the first volume of Belerin\@s \#Codex of the Planes\#~
A tome bound in leather lies here.~
~
leather~
treasure a 0 0 AOP
0 0 0 0 0
51 50 353807 1 P
1
A
31 3
A
12 60
A
13 25
E
tome~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
E
first~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.  
~
E
volume~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
E
preface~
PREFACE

You hold in your hands the first of the volumes in my Codex.  The motivation
for writing these volumes came about when I realized the sheer volume of
ignorance among the scholars of the Dantaron valley regarding the truth
nature of our cosmos.  

Too often, we scholars turn devote ourselves to minutia, spending years to
master a handful of spells while heedless of the world passing around us. 
For those of us with a concern for the unity of knowledge, and the awareness
that the cosmic balance can be unseated, this situation is intolerable.  

The actions we take here in the prime material have consequences in the
multiverse, and the converse is also true.  And, while we mortals can no
longer tread the planes with the ease of the ancient alatharya, paths still
exist for those willing to find them.  Thusly, I have commence work on this
Codex of tomes concerning the planes.  

I begin my Codex with a study of the plane in some ways nearest to ours, the
Dream.  Use the knowledge within as all knowledge must be used -- with
responsibility.  

                                   -- The Archmage Belerin
~
E
pageeleven~
11

The planes, as they say, are the playground of the gods.  But, as most
scholars of them will attest, not every plane is a direct creation of a
deity out of raw essence.  In particular, there is no tale of creation of
the dream.  Could the Dream have arisen as a sort of reflection of the
mental and spiritual attributes inherent in the sentience of all living
things?  

Regardless, it is known that various deities have had influences or even
demesnes in the dream.  Of course, we know that the ch\@taren have some
affinity for the Dream, as well as their goddess Rystaia.  [Though as we
will see in a later volume, the ch\@taren did not come to Avendar from the
Dream] Before the War of Night, the aelin venerated a deity of art and
beauty who had demesnes in the Dream, but his worship vanished at the end of
the war.  

(Written in margin in red ink is the phrase: \#The identity of this deity is
left as an exercise to the reader.\#) 

We also know that a demon city, know as Chaigidon, sits very near a planar
boundary between the Dream and the Void.  Like all dark things, it exerts an
influence in our nightmares, and its presence is reflected in certain areas
of the Dream.  

(Written in the margin in red ink is the word: \#Zyal\#)

Along with various deities and demigods, some very rare mortals find that
upon entering the Dream that they have a much larger than normal measure of
control over the environs there.  First recorded by the alatharya, who
called such individuals the \#Zhelead Yha (\@Dream Lords\@).  These gifted
dreamers often find a compelling affinity with the Dream, and will often
eventually abandon life in the material world for a new existence on that
plane.  Such beings eventually grow to something like demigods on the Dream,
making their own demesnes, living extremely long lives in the altered
timestream there.  

~
E
pageten~
10

All my travels eventually lead me to one place, which I found to be one of
the most interesting in the Dream, despite its rather mundane setting. 
There is a small inn, sometimes located near the boughs of the Nightmare
Forest, other times atop a high cliff, and other times simply on the side of
a common road.  Named the Eventide, the inn is a dimensional nexus of some
kind.  It is certainly a part of the Dream, but it has many unusual
denizens, many of whom are planar travelers themselves.  There are doorways
in the Inn which are said to leave the Dream, and are rumored to provide an
escape for those physically there.  For myself, I dared not enter the portal
in spirit form -- for what if my spirit became irretrievably lost to my
body?  I tarried for a while at the inn, and heard quite a few wild tales. 
To my surprise, I discovered several travelers from the mortal planes there
at the Inn, who were completely unaware that they were in the Dream!  I can
only conjecture that there are entrances to the Inn from the prime, though I
can find no trace of their existence.  

~
E
pagenine~
9

Other areas of the dream are less nebulously defined, but it is known there
is a distinct region associated with nightmares, centered on an extremely
dark forest.  Horrors of every type abound there, as well as stories of a
black past.  Legend even has that a dark god died in the depths of the
forest, but it seems no one has penetrated far enough into its depths to
say.  

(Written here in the margin in red ink is one word: \#Serachel\#)

There are also many places that mirror our own waking world, but very few do
so exactly.  In my travels in the Dream, I stumbled upon a precise replica
of Var Bandor, entirely populated by clockwork men.  After exploring the
Dream analogue of the Dantaron, I returned, only to find the city completely
gone.  Months later, I found the city again, but its inhabitants were,
inexplicably, all large brown rats.  While I could find neither rhyme nor
reason in these changes, experienced dream walkers claim that most changes
in the Dream are in response to subtle metaphorical changes in the world at
large.  

I also spied many things in the Dream that were either not of the parts of
Avendar I had traveled to, or they were of other worlds entirely.  Several
times, I saw a silver city in the distance, but never reached it.  I passed
through at least three deserts, walked through an ocean, and was forced to
wend my way out of a maze constructed of frozen tears.  

~
E
pageeight~
8

When I made my own travels to the Dream, I attempted to keep as many notes
as possible, writing down every experience as soon as I had awoken.  Many
times, one location would be changed, moved some distance from the first
time I saw it.  General patterns remained the same, but change, rather than
stability, was the rule when traveling in the Dream.  

It is dubious to imagine a region constantly changing and infinite in extent
as having a well-defined shape or topology, but there are a few relatively
fixed points which bear mentioning as part of the Dream\@s geography.  

If the Dream has a center, it is the Evermore Plains.  Always changing, and
perhaps infinite in extent, the plains seem to link to a large number of
demesnes within the Dream.  The plains themselves are mainly scrubland or
barren, with one principle denizen -- wispy gray spirits, who periodically
interact with visitors to the place (often in a rather hostile manner!)  . 
Who or what these spirits are is a matter of some debate, but the most
plausible explanation is that they are the souls of spirits who have been
trapped in the Dream, and for whatever reason are unable or unwilling to
leave.  The plains are also marked with odd standing stones, whose peculiar
patterns seems to indicate paths leading to various parts of the Dream.  

~
E
pageseven~
7

There is also the possibility that the powerful ancient magic spell of
\#planar travel\# could reach the Dream (as it could most locales).  However,
as the power of such ancient spells is currently finite in nature, even a
scholar who knew the spell might not be able to use it as the alatharya once
did.  

There are also rumors of very powerful spirit scholars, psionicists, and
even void scholars finding their way into the Dream.  Whether this is the
result of secret spells only the most powerful in their element has access
to, or a random result of delving into those forms of magic is unknown. 
Whatever is the case, the explicit conditions relating to such travel has
been kept a secret.  

~
E
pagesix~
6

For those seeking other entry mechanisms to this plane, there are a number
of avenues which have been featured in legend and myth.  The main vein of
historical research in this regard begins with what little history we have
of the ancient alatharya, who almost certainly trafficked regularly in the
Dream.  

The principal evidence for this is an archaeological find known as the
Dilaen Tablet.  Found in one of the numerous alatharya ruins on which
Ilodaiya is built, the tablet is half of an engraving which discusses the
means by which the elder alatharya entered the Dream.  

Evidently, the alatharya used magical artifacts known as \@Orbs of Dreaming\@
to open gateways to the Dream when needed.  The stones were broken in
certain \#soft\# locations, opening up temporary portals.  They used the
expanse of the Dream to scout new lands, to find exotic materials and magic,
and purportedly to travel to places accessible from there.  

Unfortunately for us, most, if not all of these orbs were lost in the
Sundering and the dark millennia that followed.  I know of at least one
augury which was cast by a scholar of the void, who sought such an orb.  His
infernal sources revealed that at least one such orb remained in existence,
but he was devoured by the same sources before he could reveal its location.
Even if such an orb were found, however, we would have to find one of the
special locations used by the alatharya to create a portal.  

(Written here in the margin are the words: \#Activated by the triplet of
statues in Yithoul by Sydonus.\#  ) 

~
E
pagefive~
5

The effects on mortals seem to be remarkably uniform, with variations only
based on the size and weight of the creature.  Ketsari can either be eaten
as it is grown (it has a faintly bitter taste), or boiled and dissolved into
a liquid (no real taste, but there is a faint tingle when the liquid is
imbibed).  In small doses, it induces dream-like hallucinations, which are
generally quite pleasant, but in rare cases are extremely terrifying. 
Larger doses induce a trance-like sleep, in which the user has access to the
dream world in the same fashion as the dream walker.  

The most striking property of the Ketsari, though, is that there are
credible accounts of large doses of the fungus physically transporting the
user into the Dream.  There is an ambiguity to these reports, as apparently
the fungus appears to possess this power only in certain historical epochs. 
In recent memory, the last recorded use of the ketsari fungus in this
fashion occurred just after the War of Night.  Since then, the fungus has
only functioned as a gateway for spiritual entry into the Dream. 
Interestingly, historical accounts record several such periods where the
fungus lost this ability, then regained it, each such period marked by a
planar disruption.  In our current epoch, it seems that the fungus is once
more without this ability.  When it will return again is a matter of some
conjecture, as is what event could spark this ability.  

(Written in the margin of the text at this point in red ink: \#The Coming of
Serachel\#)

The visions given by ketsari fungus are somewhat addictive, so the use of
the mushroom is frowned upon in the more martial principalities.  It is
through the ketsari that I traveled to the Dream, however, and I can vouch
for its potency.  

~
E
pagefour~
4

While the ability to see reflections of the physical world proved of great
use to the early dream walkers, it still suffered from limitations.  Nothing
found in the Dream could be brought back to the mortal world by the dreamer.
And, while dreamers have the powers of their mortal selves, it was apparent
that powerful residents of the dream had some ability to simply ignore such
effects.  (A possible explanation for this is that dreamers have an
incorporeal, illusion-like existence there, so its most powerful denizens
can simply \#disbelieve\# in their existence!)  Finally, dreamers were limited
by the odd nature of the flow of time while sleeping.  Sometimes, their trip
to the Dream would seem to last months -- others, merely a few breaths.  

There is some evidence the alatharya had an interest in the Dream as well,
and brought back a plant native to the Dream to Avendar.  This plant, a
mushroom known as \@ketsari fungus\@, has a wide variety of unusual
properties, most relating to the Dream.  It is an open question whether the
alatharya used the fungus in the way that we moderns do, but I am of the
opinion that they did not, in fact, intend it for the use we put it to, for
reasons we shall discuss shortly.  

Ketsari fungus tends to grow in unusual places.  Oddly, there appears to be
neither rhyme nor reason to the conditions under which it will flourish. 
Those who tend it claim that they can sense where it will grow, and plant
accordingly.  Other scholars, of whom I am one, believe that ketsari fungus
thrives in places who have some correspondence to the places in the Dream
where ketsari fungus thrives.  Thus, if ketsari fungus grows only in a two
feet plot of soil on the edge of a forest, perhaps this is because in the
Dream, the same spot is a rotting stump covered by wild ketsari.  

~
E
pagethree~
3

The dreamers enter while sleeping, and are free to roam the Dream as beings
with similar power and possessions to their mortal frames.  Return from the
dream is normally an effort of will, but it is an established fact that
powerful entities in the Dream can hold a dreamer there, and there are
actually locations in that plane that seem to prevent the dreamer from
returning.  Fortunately, these are not numerous.  

Powers in the mortal world are reflected in the Dream.  Dreamers are
generally confined to traveling via conventional means (walking, or by
mount), but rumors persist about some dream walkers having the ability to
transport themselves to other locations in the Dream, in a manner somewhat
akin to the \@blink\@ spell employed by templars of air.  Such an ability
seems rare, as while I never found any evidence of its veracity. 
Individuals gifted with psionic talents find that they work in the Dream,
but their magnitude of their power seems to fluctuate widely depending on
location.  I conjecture that the medium that the mentally gifted used to
propagate their gift is actually more or less abundant depending on region. 


Dreamwalkers who are harmed, or killed in the dream run the risk of
suffering psychic harm.  Victims of such maladies may exhibit symptoms
ranging from mild phobias to raving violence.  Others simply lapse into a
comatose state, never to recover.  There appears to be little truth to the
old saw that \#what happens to you in the dream happens to you in the real
world\# for these mental and spiritual travelers there, but rumors persist of
rare occurrences.  I have researched the matter, and could find no
legitimate case of the phenomena, and so must reluctantly conclude it is
only a myth.  

(Here in the text, a calm, deliberate hand has penned in red ink the word
\#Lilisa\#.)  

Dreamwalkers may actually take others with them on their jaunts, provided
they are in physical contact with their companions, all of whom must also be
asleep.  In the Dream, the companions are kept there by the will of the
dreamer.  Should the dreamer not periodically focus on the presence of his
companions, they will gradually fade from view, returning to the normal
modes of sleep.  

~
E
pagetwo~
2

The first, and most common type of directed contact with the Dream often
begins in the shamanistic traditions of primitive tribes.  In these tribes,
there is a shaman, or holy man, who generally has some small influence in
the magics of a particular element, or as a sort of fledgling druid.  Having
discovered some few tricks of an element, the shaman often seeks more, but
lacks the discipline (and, frankly, the resources) for the concentrated
study provided by formal training a scholar.  The shaman, hungry for more
mystical experience, will turn to the most obviously \#magical\# thing in his
life -- his dreams.  Most of us have had dreams of flying, or other such
wondrous things, and to the accepting mind of the neophyte magic-user, it
may very well seem only logical that dreams are a gateway to a world where
magic is more powerful.  

So, the shamans will constantly seek out more control, or time spent in the
dream realms, often augmented by a touch of magic or certain hallucinatory
drugs.  The time spent in dreaming is to the shaman\@s advantage, of whom
some will learn the trick of remaining in the Dream for longer periods, as
well as increased control.  There is an element both of inborn aptitude for
this, along with one of experience.  

Individuals who have mastered this art have been called by various names
throughout history.  Some of the most common are \#dream walker\#, \#dreamer\#,
\#dream voyagers, or even dream worms\# (a shuddeni expression).  Access to
the Dream by these individuals is a sort of entry of mind and spirit
(something like the projection spell used by spirit scholars) across the
planar divide.  

~
E
pageone~
1

The Dream is not, as some scholars have intimated, simply a pocket dimension
attached to the prime material.  It certainly does not have an independent
existence like the true greater planes, but its vast, nearly infinite extent
teems with a diversity of content and form.  

Some have called the Dream a shadow -- others, a mirror.  Both are to some
extent correct, for the dream is in large part a reflection of the world of
the prime material.  But, in its farthest regions, beyond the places tread
by mortal kind, there are sections of the Dream which are completely
divorced from any physical reality of which we are aware.  Could the Dream
reflect other physical realities?  

The dream is also unique in that the minds of even the most commonplace
mortal will most likely touch it during the course of their life.  The
experience of touching the altered reality of the Dream is something most
will ascribe to a natural phenomena, but in reality it points to the
extremely deep psychic bonds which exist between the prime and the Dream.  

But consistent study of the Dream requires more than the random and
fragmentary visions of sleep.  The methods of contacting the dream are
numerous, and, perhaps, even infinite.  The \#veil\#, or planar boundary
between our own and the Dream varies in consistency throughout historical
epoch, but it has always been that it is the easiest of the planes to reach
-- though certainly not always the safest!  
~
E
index~
INDEX

Preface

Chapter I:..............An Introduction to the Dream (pg. 1)
Chapter II:............ Dream Walking (pg 2-3)
Chapter III:........... Ketsari: The Dream Fungus (pg 4-5)
Chapter IV:........... Other Methods of Travel to the Dream (pg 6-7)
Chapter V:............ Geography and Places of the Dream (pg 8-10)
Chapter VI:........... Deities and Powers in the Dream (pg 11)

To read a particular page, use:
Read Page <Number>

For example, to read page three, type:
Read Page Three

To read the preface, type:
Read Preface
~
E
belerin\@s~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
E
leather~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
E
belerin~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
E
planes~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
E
codex~
This tome is bound in fine, black leather, and each of its pages are
edged with fine gold leaf.  The title is embossed in silver on the front
cover, marking the book as \#Belerin\@s Codex of the Planes\#.  On the spine of
the book, similar letter marks it as \#Volume I\#.  

To examine the contents of the book, look at the INDEX.
~
>verb_prog p read~
if isowner($n)
if compstr(2) == preface
opforce $n look preface
break
endif
if compstr(2) == page
if compstr(3) == one
opforce $n look pageone
endif
if compstr(3) == two
opforce $n look pagetwo
endif
if compstr(3) == three
opforce $n look pagethree
endif
if compstr(3) == four
opforce $n look pagefour
endif
if compstr(3) == five
opforce $n look pagefive
endif
if compstr(3) == six
opforce $n look pagesix
endif
if compstr(3) == seven
opforce $n look pageseven
endif
if compstr(3) == eight
opforce $n look pageeight
endif
if compstr(3) == nine
opforce $n look pagenine
endif
if compstr(3) == ten
opforce $n look pageten
endif
if compstr(3) == eleven
opforce $n look pageeleven
endif
if compstr(3) == 
opechoat $n What page number do you want to read?
endif
endif
else
opinterpret $n $x
endif
~
|
V13
163
shield chitin~
a chitinous shield~
A chitinous shield lies here.~
~
chitin~
armor d 0 0 AJ
8 8 8 8 0
52 50 800 3 P
0
V13
164
corpse rose social~
the corpse of the ---\@---,--<@~
The corpse of the ---\@---,--<@ social is lying here... forever!~
~
plant~
trash T 0 0 A
0 0 0 0 0
0 0 0 0 P
0
V13
165
no name~
do not edit~
An item used by alchemists~
~
unknown~
trash 0 0 0 AO
0 0 0 0 0
0 0 250 0 P
0
V13
166
stone shining gleaming akhen~
the Stone of Akhen~
(Pale Aura) A gleaming stone lies here.~
~
stone~
trash a 0 0 AO
0 0 0 0 0
52 100 0 2 P
1
A
20 -5
A
12 100
A
13 100
>death_prog 50~
mpecho The Stone of Akhen flashes brightly, then vanishes!
mppurge self
~
|
V13
167
maze~
a maze~
A maze is contained within this place.~
~
energy~
trash OSYad 0 0 0
0 0 0 0 0
1 0 0 2 P
0
V13
168
blazing spear fire flame~
a blazing spear~
A blazing shaft of fire is on the ground.~
~
fire~
weapon ADJS 0 0 AN
spear 0 0 4 0
flame~
0 100 0 0 P
0
O flame~
V13
170
cake small rations ration ration-cake rectangular white off off-white food~
a ration-cake~
A small rectangular cake of off-white rations lies here.~
~
food~
food S 0 0 A
32 50 0 0 0
5 4 0 1 P
0
E
cake small rations ration ration-cake rectangular white off off-white~
This small cake of food is four inches long, and slightly more than
half-again as wide.  Made from some dense, slightly chewy unidentifiable
foodstuff, the doughy block is the most basic type of ration.  Seemingly
baked, the ration has a slightly crisp outer crust which surrounds the
softer, heavier inside.  
~
V13
171
cake small boiled corn mush rectangle packed boiled food~
a small cake of boiled corn mush~
A small rectangle of packed, boiled corn mush lies here.~
~
food~
food S 0 0 A
34 50 0 0 0
6 7 0 0 P
0
E
cake small boiled corn mush rectangle packed boiled~
A small, rectangular block of packed and boiled corn meal, this mush is
cold and congealed.  A pale, pale yellow, the cake is dense and doughy, a
very basic form of sustenance.  
~
V13
172
potato large sweet brown skin skinned brown-skinned tuber yam food~
a large sweet potato~
A large brown-skinned tuber lies here.~
~
food~
food S 0 0 A
38 50 0 0 0
7 9 0 0 P
0
E
potato large sweet brown skin skinned brown-skinned tuber yam~
This large tuber has thin brown skin.  Washed clean of earth, the potato
is roughly seven inches in length, and as big around as a large, clenched
fist.  Underneath the thin skin is bright orange flesh, raw and crisp. 
Rather sweet, with the tiniest tang, the sweet potato is a very nourishing
food.  
~
V13
173
parsnips parsnip bundle pale steamed food~
a bundle of steamed parsnips~
A bundle of pale parsnips lie here.~
~
food~
food S 0 0 A
42 50 0 0 0
8 9 0 0 P
0
E
parsnips parsnip bundle pale steamed~
This bundle of several parsnips has been lightly steamed and skinned. 
The pale, slightly-translucent tubers are somewhat similar in shape and
consistency to cooked carrots, though they smell sweeter.  Flavored with a
hint of cardamom and cloves, the parsnips appear tender and nourishing.  
~
V13
174
loaf bread small cheese encrusted cheese-encrusted round hearty crust baked food~
a small loaf of cheese-encrusted bread~
A small, round loaf of hearty bread lies here, a crust of cheese baked into the top.~
~
food~
food S 0 0 A
45 50 0 0 0
8 11 0 0 P
0
E
loaf bread small cheese encrusted cheese-encrusted round hearty crust baked~
A small, round loaf roughly eight inches in diameter, this hearty
whole-wheat bread is laced with chunks of walnut and jasaflower seeds.  A
lacy crust of strong cheese has been baked over the top, crisped and
bubbled.  
~
V13
175
apples baked three apple cluster pale green tender trio food~
a trio of baked apples~
A cluster of three pale green apples, baked until tender, lie here.~
~
food~
food S 0 0 A
48 50 0 0 0
8 9 0 0 P
0
E
apples baked three apple cluster pale green tender trio~
Three pale green apples have been baked until soft and sweet.  Cored and
stuffed with raisins, butter, and sugar, the apples smell strongly of
cinnamon and cloves.
~
V13
176
beef steak beefsteak thick cut tender food~
a thick beefsteak~
A thick cut of tender beef lies here, broiled to perfection.~
~
food~
food S 0 0 A
50 50 0 0 0
15 18 0 1 P
0
E
beef steak beefsteak thick cut tender~
This choice cut of tender beef, roughly three-quarters of an inch thick,
has been broiled to a rich brown.  Glistening slightly with its own juices,
the steak emanates a flavorful aroma of roast meat, seasoned with salt,
pepper, garlic, and some more subtle spices.  
~
V13
177
onion onions bunch small plump sweet washed food~
a bunch of sweet onions~
A bunch of small, plump onions lies here, washed free of dirt.~
~
food~
food S 0 0 A
50 50 0 0 0
9 0 0 0 P
0
E
onion onions bunch small plump sweet washed~
This bunch of small onions, each roughly an inch in diameter, has
deep-green tops and whiskery roots.  Each bulb is plump and juicy, smelling
sweetly.  The mild onions seem practically bursting with vitality, in
perfect condition free from spot or blemish, they appear almost
preternaturally grown.  
~
V13
178
quail quails pair stew stewed small cooked bird birds quailinator food~
a pair of stewed quails~
A pair of small, cooked birds lie here, drenched in a fragrant, dark brown sauce.~
~
food~
food S 0 0 A
57 50 0 0 0
15 12 0 0 P
0
E
quail quails pair stew stewed small cooked bird birds~
These pair of small, plump quails have been plucked, cleaned, and stewed
until quite tender.  The meat seems ready to fall off the bones, and the
rich, gravy-like sauce is fragrant with the smells of sage, pepper, and an
aged red wine.  Small flecks in the sauce prove to be bits of morel
mushroom, adding their own elegant flavor to the dish.  
~
>verb_prog eat~
if objtargetcarry()
  mpoload 8809 on $n
  mpoload 178 on $n
  mpinterpret $n $x
  mppurge self
  opverbstop
else
  mpnextinterp
endif
~
|
V13
179
pile dumpling dumplings meat filled meat-filled several sauce tomato food~
a pile of meat dumplings in tomato sauce~
Several meat-filled dumplings bathed in a rich tomato sauce lie here.~
~
food~
food 0 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
pile dumpling dumplings meat filled meat-filled several sauce tomato~
Several pouches of a doughy noodle are stuffed with ground meat and
herbs.  Then boiled, a rich sauce rendered from red tomatoes has been poured
over the cooked dumpling.  Morsels of tender asparagus and mushroom garnish
the sauce with extra color.  
~
V13
180
salmon orange glazed orange-glazed fillet filleted skinned fish fragrant food~
an orange-glazed salmon~
A filleted, skinned fish lies here, glazed with a fragrant orange sauce.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
salmon orange glazed orange-glazed fillet filleted skinned fish fragrant~
A smaller-sized fish, filleted into two piece, has been cooked to a
delicate pink.  Baked in a light cream, the fish is rich and saturated with
milky juice.  A light, clear glaze of sweet orange sauce, emboldened with
zest from the peel, has been poured over the fish.  
~
V13
181
tart cheese onion cheese-and-onion large onions soft food~
a cheese-and-onion tart~
A large tart lies here, filled with small onions in a bed of soft cheese.~
~
food~
food S 0 0 A
0 50 0 0 0
15 11 0 0 P
0
E
tart cheese onion cheese-and-onion large onions soft~
A crumbly pastry crust roughly eight inches in diameter has been rolled
and re-rolled enough to give it a buttery, flaky consistency.  Filled with a
bed of soft, aromatic cheese, the tart has several halved onions nestled
within.  Each onion-half, small and plump, is baked to a pale, translucent
brown.  Herbs and spices are dusted judiciously across the top.  
~
V13
182
pie chicken crusty small latticed top meat food~
a crusty chicken pie~
A small chicken pie lies here, latticed top bulging with the meat.~
~
food~
food S 0 0 A
50 50 0 0 0
15 11 0 0 P
0
E
pie chicken crusty small latticed top meat~
A crumbly pastry crust roughly seven inches in diameter has been rolled
and re-rolled enough to give it a buttery, flaky consistency.  Two inches
tall at the sides, this pie is bulging with stewed chicken in a brandy
gravy.  Sliced carrots and peas are also visible through the gaps in the
latticed top.  
~
V13
183
souffle custard corn oval baked food~
a corn souffle~
An oval corn custard lies here, baked an enticing golden-brown.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
souffle custard corn oval baked~
A thick, hearty pudding made from eggs, corn, and cream, this souffle has
been baked until its top is a lovely golden-brown.  Light and slightly
sweet-smelling, the custard seems firm and moist.  A tangy salsa of onions,
peppers, and tomatoes has been sparingly sprinked across the top,
contrasting and complimenting the flavor of the souffle.  
~
V13
184
torte cake layered butter rum butter-rum three three-layered rich caramel food~
a layered butter-rum torte~
A three-layered torte lies here, rich caramel sauce drizzled over the top.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
torte cake layered butter rum butter-rum three three-layered rich caramel~
This torte is five inches in diameter, and nearly as tall.  Made from
three tiers of heavy, pudding-like spongecake, each layer is divided by a
rich slathering of rum caramel.  The entire torte has been suffused with a
lighter rum-and-butter sauce, and is topped by a quantity of heavy, beaten
cream and a drizzle of the same thick caramel.  
~
V13
185
prawns prawn stuffed several large lobster salad cluster food~
a cluster of stuffed prawns~
Several large prawns lie here, stuffed with shredded lobster salad.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
prawns prawn stuffed several large lobster salad cluster~
Several large prawns - large, shrimp-like creatures several inches long -
have been cooked until bands of bright pinkish-red adorn the milky,
translucent flesh underneath.  Sliced down the middle, the each large prawn
have been stuffed with a quantity of shellfish salad.  Shreds of lobster,
tomatoes, sliced celery and endive in a creamy tarragon sauce fill the
prawns, garnished with a few capers.  
~
>verb_prog eat~
if objtargetcarry()
  mpoload 8810 on $n
  mpoload 185 on $n
  mpinterpret $n $x
  mppurge self
  opverbstop
else
  mpnextinterp
endif
~
|
V13
186
rack lamb tender crusted nuts pine rosemary food~
a rack of lamb~
A rack of tender lamb lies here, crusted with pine nuts and rosemary.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
rack lamb tender crusted nuts pine rosemary~
Five ribs arc from a round side of tender lamb, roasted to a warm brown
on the outside.  A crust of small, soft pine nuts and ground rosemary leaves
coats the outside of the meat, which smells strongly of the rosemary, as
well as some less-identifiable savory herbs.  
~
>verb_prog eat~
if objtargetcarry()
  mpoload 8811 on $n
  mpoload 186 on $n
  mpinterpret $n $x
  mppurge self
  opverbstop
else
  mpnextinterp
endif
~
|
V13
187
tenderloin venison roast seared food~
a venison tenderloin~
A roast venison tenderloin lies here, seared to perfection.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
tenderloin venison roast seared~
A small tenderloin of venison has been roasted with garlic and salt, the
outside seared with intense heat to seal in the flavor.  The choice cut of
meat is cooked to perfection, a dark brown mottled with sections of crispy,
slightly blackened skin.  
~
V13
188
leg mutton cold animal roasted roast spiced food~
a leg of cold mutton~
The leg of an animal, roasted and spiced, lies here.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
leg mutton cold animal roasted roast spiced~
This haunch of mutton has been roasted to a crisp, deep-golden brown on
the outside.  Crackly skin smells rich and flavorful, rolled in a crust of
sage, thyme, and pepper.  The bone protrudes several inches from the lump of
sumptuous meat, providing a convenient hold.  
~
>verb_prog eat~
if objtargetcarry()
  mpoload 8813 on $n
  mpoload 188 on $n
  mpinterpret $n $x
  mppurge self
  opverbstop
else
  mpnextinterp
endif
~
|
V13
189
pineapple large yellow spiky leaves fresh green food~
a large pineapple~
A large yellow pineapple lies here, spiky leaves fresh and green.~
~
food~
food S 0 0 A
58 50 0 0 0
15 11 0 0 P
0
E
pineapple large yellow spiky leaves fresh green~
This large pineapple is just under a foot in length.  Covered in a tough,
spiny rind, the fruit has been somehow loosened within its skin, allowing it
to slide free with the slightest encouragement.  An aroma of fresh fruit,
tart and sweet, wafts from the ripe pineapple.  The spiky green head of
leaves at the top is equally fresh, vibrant and healthy.  
~
V13
190
black portal~
a black portal engraved with golden runes~
A black portal engraved with mysterious black runes is here.~
~
obsidian~
portal BO 0 0 0
0 0 0 90 0
58 0 0 4 P
0
V13
191
pupa pupae khuzindul maggoty maggot maggots handful writhing~
a writhing handful of khuzindul pupae~
A handful of maggoty pupae skitter and writhe.~
~
carrion~
trash 0 0 0 AO
0 0 0 0 0
0 3 0 0 P
10000
E
pupa pupae khuzindul maggoty maggot maggots handful writhing~
This mass is made up of dozens of inch-long pupae.  They resemble
infernal maggots, with jointed spines jutting from their soft white bodies. 
Their front end bears a set of gnashing mandibles.  
~
V13
192
pill pale white~
a pale white pill~
A pale white pill sits here.~
~
carrion~
pill 0 0 0 AO
0 'ghost' 'ghost' 'ghost' 'ghost'
0 0 0 0 P
10000
E
pill pale white~
This pale white pill is made of some sort of crushed, fleshy material. 
Small egg-like nodules gleam in its otherwise dull surface.  
~
V13
193
pear ripe green obj_193 food~
a ripe green pear~
A ripe green pear lies here.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 1 P
0
E
pear ripe green obj_193 food~
A large, brownish pear ripens here invitingly.  The soft, sweet-scented
fruit is covered by a rough, thin skin, and shares its stem with a small,
green leaf.  
~
V13
194
handful dewberries berries~
a handful of dewberries~
A few dewberries lie on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 1 P
0
V13
195
handful acorns~
a handful of acorns~
A few acorns lie on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
V13
196
deep red porphyra seaweed blossom blossoms obj_196 food spray~
a spray of deep red porphyra blossoms~
Three deep red seaweed blossoms lie here.~
~
plant~
food 0 0 0 AO
30 50 0 0 0
0 0 0 1 P
0
V13
197
prickly pear cactus silver spined silver-spined flower green obj_197 food~
a silver-spined prickly pear~
A silver-spined prickly pear lies here.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 1 P
0
V13
198
cattail spike~
a cattail spike~
A cattail spike lies on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 1 P
0
V13
199
handful wild blackberries berries black~
a handful of wild blackberries~
A few wild blackberries lie on the ground.~
~
plant~
food 0 0 0 AO
50 50 0 0 0
0 0 0 0 P
0
#0



#ROOMS
#1
The Void~
You are floating in nothing.
~
~
1
0 42126 1
W 5 0 0
Z 5 5
S
#2
Amidst A Colorless Fog~
An insubstantial gray surrounds you in all directions, barely lit by an
unknown source.  There seems to be no ground, sky, or physical matter of any
sort...  Only the colorless fog.  
~
~
0
0 787468 1
W 5 0 0
Z 5 5
S
#3
A Monument to Regalas\@s Downfall~
Regalas\@ skeleton litters the floor, bits and pieces gnawed on by passing
jackals.  
~
~
0
0 32822 0
W 5 0 0
Z 5 5
P
>speech_prog p Go away, you stinking turtles!~
mpdesc here jackals
mpecho The wave of turtles receed, and the jackals warily return.
~
>speech_prog p Turtles.~
mpdesc here turtles
mpecho The turtles arrive in force!
~
>data_prog jackals~
Regalas\@ skeleton litters the floor, bits and pieces gnawed on by passing
jackals.  
~
>data_prog turtles~
Regalas\@ skeleton litters the floor, bits and pieces gnawed on by passing
turtles.  Passing very, very slowly.  Turtles.  Yes, turtles.  
~
|
S
#4
The Variable Room~
Values of $ variables during the running of progs:
a:                              A:
b: short desc. of obj carrier   B:
c:                              C:
d:                              D:
e: he/she of actor              E: he/she of focused on 
f,f0: name of focus 0           F,F0: short desc of focus 0
f1: name of focus 1             F1: short desc of focus 1
g:                              G:
h: damage done by hit prog      H:
i: name of mob                  I: short desc. of mob
j: he/she of mob                J: he/she of random
k: him/her of mob               K: him/her of random
l: his/her of mob               L: his/her of random
m: him/her of actor             M: him/her of focused on
n: name of actor                N: short desc. of actor
o (on mob): name of obj         O (on mob): short desc. of obj
o (on obj): name of owner       O (on obj): short desc. of owner
p:                              P:
q:                              Q:
r: name of random               R: short desc. of random
s: his/her of actor             S,S0,S1: his/her of focused on
t: name of vict                 T: short desc. of vict
u:                              U:
v#: loop value check, # depth   V:
w:                              W:
x: text of command (if appli.)  X: $x, with the first word excluded
y#: argument lookup (punc.)     Y#: argument lookup
z: memv of actor                Z: long desc. of actor
0,1,2,3,4,5,6,7,8,9: value stored in the corresponding value slot
~
~
0
0 32772 0
D4
~
~
0 0 5
D5
~
~
0 0 131
W 5 0 0
Z 5 5
S
#5
The Feature Room~
(non-coding:)
* Progs for called animals.
* Progs for Earth/Water Elementals.
(coding:)
* Tweak findherb so it\@s not impossible to find anything but 3-4 herbs in
  your entire liftime. Make it easier to get useful herbs.
* An *exit* flag fly_only This makes pits,etc. a lot easier to build.
* A \@twisted ankle\@ affect. See Ramc for the grisly details!
* A tick_prog.
* Add \@noctural\@ and \@diurnal\@ flags to mobs.
* Re-implement the carrying limits in some form.
* Change swim and what not.
* New gladiator skill \@final gambit\@.
* Add more animals able to be called by Rangers (snow wolves? panthers?
  mountain lions? wolverines? moose? xorns?) relative to territory.
* Brief snoop (If this doesn\@t make sense, check the feature forum)

  
* Make it so you can only waylay if the target can\@t see you.
* Make it so you can only backstab if the target can\@t see you.
* Make the mob form flag \@construct\@ make them immune to stuff you\@d
  expect constructs to be immune to.
* Make cloudkill a real, non-hack spell. With saving throws and stuff.
* [Iandir] Make an apply command that mortals use to apply for houses. Imms
  can list all applicants for a given house or sigil, and can read
  applications like backgrounds, even if the mortal isn\@t online.
  Applications persist until withdrawn or until pfile is gone. Mortals can\@t
  apply for more than one house/sigil at once, and the Imm view shows whether
  they\@ve changed which they apply to.
* Mortal-run houses! By paying a buttload of platinum, mortals can form their
  own house. They get a [HOUSE] tag by their name that only their house
  members can see, they get their own channel, and they get an extitle that\@s
  automatically applied to anyone in their house. Obviously they get the power
  to induct and uninduct as well. Also obviously, house names and extitles get
  approved by imms upon creation.
* mpdatarandom, sets the current data_prog to a random line
* a variable that equals the number of entries in a data prog
* Ventriloquate should let you specify a language
* Lame: The noemote echo players see is \#You are anti-social!\#
* We could use \#psay\# to go with \#pmote\#
* Add a \#buyback\# function, where players can buy back items they\@ve accidentally
  sold to shops for the same price they just received.
~
~
0
0 32768 0
D0
~
~
0 0 7
D1
~
~
0 0 6
D4
~
~
0 0 93
D5
~
~
0 0 4
W 5 0 0
Z 5 5
S
#6
The Bug Room~
A. EQ crumbling still should be looked at, unless it was fixed after the
   temporary fix went in.
B. Apparently Improved detect evil still shows \#You sense an evil presence\#
   when an evil enters the room. Should be taint-based?
C. Fake exit flags no longer work? I flagged up and down fake in room 4106,
   and after reboot the fake flags were gone.
D. {rPsionicist focuses seem to be extremely difficult to break. Most people
   starve to death before they are broken.{n
E. {rWhen people log on, their current hp doesn\@t include their con bonus, so
   they are injured even if they logged out at full health.{n
F. At one point, you could put a container inside another container if the
   first one was no_take. This has changed somehow. Clockmaker quests
   require this to be possible. :( :( :(
G. Posters on the log forum are claiming they\@ve gained 0 or -1 mana when
   levelling.
H. People still standing over you at altar mercy bug.
I. Tanned items often have their wear slots mysteriously change.
J. Garrote bug seems to persist: garrotee is not affected with inability to
   cast.
K. Stampede doesn\@t seem to work at all
M. Nolag switches off when you switch into a mob. :(
* Ghosts can bandage
* Name completion should not work with mpcommands
* Level 10 and under limited EQ vanishing should send them a note.
* ..better yet, we should give them a warning echo if they have limited EQ before quitting.
* Grappled scholars can spam around the \@too stunned to cast\@ spiel.
* the fourth spell slot on scrolls doesn\@t go off when a scroll is recited.
* Setsnare doesn\@t let people flee, but neither does it LAG them when they flee.  I got off five final strikes as a result.
* Rune of spirit doesn\@t purge the current rune on death - attempting to cast the rune in the room of the previous rune 
* Bug?  Scatter doesn\@t seem to be countered by anchor -Iac
* Sondaku: If you dissolve a head trophied from a corpse, the skin still decays afterwards.  The solution of the head fr
om the corpse of a noblewoman turned into the skul from the corpse of e corpse of a noblewoman.
* Bandits can bind while fighting
* Make other gods saccable to
~
~
0
0 32768 0
D0
~
~
0 0 92
D1
~
~
0 0 132
D3
Miles of aisles of piles of miles of files of features.
~
~
0 0 5
D4
~
~
0 0 91
D5
~
~
0 0 8
W 5 0 0
Z 5 5
P
>greet_prog 100~
if ispc($n)
  if name($n) == Arkhural
    mpbrand $n 10147
  else
    mpnextinterp
  endif
endif
~
>verb_prog p rpstat~
if name($n) == Arkhural
  mpnextinterp
else
  mpechoat $n This room has no programs set.
endif
~
|
S
#7
Suggestion Box~
* An enamour song for bards.  Aeolis knows details.
* Drawbacks for thieves/assassins wearing heavy armors, relative to strength
  and dexterity. Less attacks, less dodging.
* Psionicists - Increase chances of Read Thoughts a bit so it\@s more reliable?
* The ability to use \@enhance reflexes\@ on other PC\@s. As of now, Psionicists
  aren\@t very viable in ranking (they\@re pretty PK-oriented), and this would
  provide a well-needed boost. If you want, increase the mana-cost per tick,
  but it would be a heck of a lot more useful.
* Make it so trying to disarm a nodisarm weapon lags the wielder of
  the nodisarm weapon, so that nodisarm is not unconditionally good.
* Cast_prog and all_cast_prog: trigger when spell is cast on target, or cast
  in room. (Argument would be spell vnum and %)
* An *exit* flag that requires water breathing.
* Light sleep lessen/negate damage modifiers for sleeping.
* Have hide/sneak/slice/etc be affected by encumbrance, a la casting
* A no-dirt flag for rooms. If there isn\@t enough dirt to kick.
* [Arkh] Give Thieves a skill that let\@s them know if they\@ve been spotted
 (where or look, take your pick)
* Take the delay between castings off of Phantasmal Creation.
* Listen should also be able to intercept tells (jury is out on house
  channels, but probably not)
* A watcher skill to \@drag\@ people under mercy.
* Make watcher skills more effective: pugil hits for more strength, twirl
  hits more often (not lags, just hits).
* Add the ability to tell what damage type finished off the corpse to
  investigate death. Unlike iding the killer, this always succeeds.
* A \@daylight\@ spell for spirit scholars that illuminates a number of rooms
  in a burst from where the spell was cast. Doesn\@t move with caster.
* Make rangers more interesting. Ramc has ideas. Ask him.
* Make reduced EP to hero levels for people with multiple heroes/good
  standing on an account.
* An \@ignore\@ command used to ignore a player -- no prays, tells or
  communication heard..
* mpoload <vnum> in self - for progs on containers. No way for a container
  to be assured of referencing itself as is.
* A fast_crumble pc flag we can slap on players we suspect of hoarding eq.
* Allow Rangers to sell their tans. It really makes sense.
* An Escape Artist skill for Watchers. See Ramc.
* A \#nofly\# flag that imms can slap on people to punish them. \#The Gods
  have hobbled your wings!\#
* Waylay should have a drastically reduced chance if target can see you.
* Be able to pick your characters birthday at some amount of account points.
* [Dov] command to toggle faction change reports (can be spammy).
* [Dov] an ifcheck for memory values on a different mob  *slobber*
* [Dov] ability to name toggleoffaff just as one does with the generic aff.
* [Dov] customize trophy part names so that they can be used with give_progs.
~
~
0
0 134250496 0
D2
~
~
0 0 5
W 5 0 0
Z 5 5
S
#8
Area Update Dungeon~
quest.are
limbo.are
conclave.are
neweare.are
nefor.are
earout.are
immort.are
undead2.are
titan.are
yith.are
fort.are
morn.are
shargob.are
xiganath.are
icezroth.are
champion.are
varband.are
darkcity.are
sythtys.are
shunned.are
basalt.are
tower.are
neweare.are
shuddeni.are
fens.are
alensha.are
nordath.are
undead.are
~
seagull8579~
0
0 4751360 1
D1
~
~
0 0 96
D4
~
~
0 0 6
W 5 0 0
Z 5 5
S
#9
The Eye of Darkness~
Great masses of shadows swirl about, screaming like tormented souls in
discord.  There is no direction, and nothing exists to stand upon.  The only
remarkable sight is the Eye of Darkness itself, a ball of impenetrable
darkness where the vast majority of shadows seem to be drawn.  Periodically,
a bolt of oddly colored lightning streaks outward from the Eye, casting more
shadows and drawing souls from the resulting rifts in the darkness.
~
~
1
0 581637 0
E
darkness~
Impenetrable.  Do not even try.
~
E
eye~
You have an overwhelming sense that this thing lives and is watching your
every move.  Bolts of oddly colored lightning lash out from it, splitting
space and creating rifts where the souls of the dead are drawn inward,
knowing the agonizing hopelessness of being entrapped in eternal darkness.
~
W 5 0 0
Z 5 5
S
#10
The Base of Firiel~
Bursting out of the center of this clearing is Firiel, eldest of trees. 
Towering overhead, Firiel\@s immense boughs divide the sun into a myriad of
individual shafts.  Soft green grass grows underfoot, and the smell of rich,
loamy soil fills the air.  Ringing the clearing are great oaks, each dwarfed
by the magnificence of Firiel.  
~
~
1
0 4726854 3
E
tree~
Reputed to be the eldest of trees, Firiel\@s magnificence is obvious from
its size and rich, brown bark.  Above, its lush boughs are endowed with
every conceivable type of foliage, blending the attributes of all trees. 
The air about the tree has a slight tingle to it, and its bark is warm to
the touch.  
~
E
firiel~
Reputed to be the eldest of trees, Firiel\@s magnificence is obvious from
its size and rich, brown bark.  Above, its lush boughs are endowed with
every conceivable type of foliage, blending the attributes of all trees. 
The air about the tree has a slight tingle to it, and its bark is warm to
the touch.  
~
D0
~
~
0 0 11
D1
~
~
0 0 13
D2
~
~
0 0 15
D3
~
~
0 0 17
M 110 H 110 V 100
W 5 0 0
Z 5 5
S
#11
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the south, moving east and
west around the enormous tree.  
~
~
1
0 532550 3
D1
~
~
0 0 12
D2
~
~
0 0 10
D3
~
~
0 0 18
W 5 0 0
Z 5 5
S
#12
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the southwest, moving west
and south around the enormous tree.  
~
~
1
0 532550 3
D2
~
~
0 0 13
D3
~
~
0 0 11
W 5 0 0
Z 5 5
S
#13
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the west, moving north and
south around the great tree.  A thin trail heads through a break in the oaks
to the east.  
~
~
1
0 532550 3
D0
~
~
0 0 12
D1
~
~
0 0 19
D2
~
~
0 0 14
D3
~
~
0 0 10
W 5 0 0
Z 5 5
S
#14
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the west, moving north and
south around the great tree.  A thin trail heads through a break in the oaks
to the east.  
~
~
1
0 532550 3
D0
~
~
0 0 13
D3
~
~
0 0 15
W 5 0 0
Z 5 5
S
#15
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the north, moving east and
west around the great tree.  
~
~
1
0 532550 3
D0
~
~
0 0 10
D1
~
~
0 0 14
D3
~
~
0 0 16
W 5 0 0
Z 5 5
S
#16
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the northeast, moving north
and east around the great tree.  
~
~
1
0 532550 3
D0
~
~
0 0 17
D1
~
~
0 0 15
W 5 0 0
Z 5 5
S
#17
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the east, moving north and
south around the great tree.  A thin trail heads through a break in the oaks
to the west.  
~
~
1
0 532550 3
D0
~
~
0 0 18
D1
~
~
0 0 10
D2
~
~
0 0 16
D3
~
~
0 0 23
W 5 0 0
Z 5 5
S
#18
The Circle of Trees~
This clearing rings Firiel, the great tree of Life.  Walled by a large
circle of oaks, the clearing circles Firiel to the southeast, moving east
and south around the great tree.  
~
~
1
0 532550 3
D1
~
~
0 0 11
D2
~
~
0 0 17
W 5 0 0
Z 5 5
S
#19
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
The path heads east through the trees, and opens in a clearing to the west. 
~
~
1
0 532550 3
D1
~
~
0 0 20
D3
~
~
0 0 13
W 5 0 0
Z 5 5
S
#20
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
Northward, a stone marker stands beside two saplings which have grown
together into an arch.  
~
~
1
0 532550 0
E
stone~
Emblazoned on this marker is a carving of an Alatharya.
~
E
marker~
Emblazoned on this marker is a carving of an Alatharya.
~
D0
~
~
0 0 403
D1
~
~
0 0 21
D3
~
~
0 0 19
W 5 0 0
Z 5 5
S
#21
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
Southward, a stone marker stands beside two saplings which have grown
together into an arch.  
~
~
1
0 532550 0
E
stone~
The marker is carved into the sign of the Ethron clanchiefs.
~
E
marker~
The marker is carved into the sign of the Ethron clanchiefs.
~
D1
~
~
0 0 22
D2
~
~
0 0 1425
D3
~
~
0 0 20
W 5 0 0
Z 5 5
S
#22
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
Northward, a stone marker stands beside two saplings which have grown
together into an arch.  
~
~
1
0 532550 3
E
stone~
Emblazoned on this marker is a carving of the Isle of Alensha.  
~
E
marker~
Emblazoned on this marker is a carving of the Isle of Alensha.
~
D0
~
~
0 0 25453
D3
~
~
0 0 21
W 5 0 0
Z 5 5
S
#23
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
The path heads west through the trees, and opens in a clearing to the east. 
Northward, a stone marker stands beside two saplings which have grown
together into an arch.  
~
~
1
0 532550 3
E
stone~
Emblazoned on this stone marker is the ancient symbol of the druids of Nendor.
~
E
marker~
Emblazoned on this stone marker is the ancient symbol of the druids of Nendor.
~
D0
~
~
0 0 19569
D1
~
~
0 0 17
D3
~
~
0 0 24
W 5 0 0
Z 5 5
S
#24
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
Southward, a stone marker stands beside two saplings which have grown
together into an arch.  
~
~
1
0 532550 3
E
stone~
Emblazoned on this stone marker is a carved representation of the Brintor
mountains.  
~
E
marker~
Emblazoned on this stone marker is a carved representation of the Brintor
mountains.  
~
D1
~
~
0 0 23
D2
~
~
0 0 588
D3
~
~
0 0 25
W 5 0 0
Z 5 5
S
#25
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground.  
~
~
1
0 532550 3
D1
~
~
0 0 24
D3
~
~
0 0 26
W 5 0 0
Z 5 5
S
#26
A Forest Path~
A thin trail heads through these woods, threading a delicate path through
ancient oaks.  The trees cluster overhead, huge branches covered by ancient
moss, which lets only a trickle of sunlight through to the shaded ground. 
Southward, a stone marker stands beside two saplings which have grown
together into an arch.  
~
~
1
0 532550 0
E
marker~
This stone marker bears the mark of the Jandiska.
~
E
stone~
This stone marker bears the mark of the Jandiska.
~
D1
~
~
0 0 25
D2
~
~
0 0 24675
W 5 0 0
Z 5 5
S
#35
Mob Load Room~
Used for loading Zilba and Other Mobs
~
~
1
0 32822 0
W 5 0 0
Z 5 5
S
#36
Mob Purge Room~
Mobs come here to die, leaving no awkward corpses elsewhere.
Including:
- conjured efreeti
~
~
0
0 54 0
W 5 0 0
Z 5 5
S
#40
A Chamber Deep within the Bowels of Logor~
This dark chamber is hewn from iron and stone, all covered with a cloying
black filth.  The chamber is fastened in the shape of a broken trigon, with
towering iron columns supporting a vaulted roof.  Dangling between the
columns are an unsettling collection of demonic icons, each reflecting the
unwholesome geometry favored by the demonkind of Logor.  Moldering,
worm-ridden red carpet is underfoot, tapering to the north of the chamber,
where the dark throne of Chagrob towers over this place.  To the south,
enormous stone doors provide the only exit from the chamber.  
~
~
1
0 62 1
D0
The dark throne towers to the north.
~
~
0 0 41
D2
~
~
0 0 47
W 5 0 0
Z 5 5
S
#41
The Throne of Chagrob~
The throne of Chagrob is an abomination of black iron and stone. 
Towering well over ten feet, its entire surface is branded with runes of
power, will, and darkness.  Circling the base of the throne are kneeling
pads, woven from some unknown weed, and to either side, matching icons of a
black dragon gaze upon those who come before the throne.  The rest of the
chamber stretches away from the throne to the south.  
~
~
0
0 190 1
E
icons~
The icons are of a great black dragon.
~
D2
To the south lies the rest of this triangular chamber.
~
~
0 0 40
W 5 0 0
Z 5 5
S
#42
An Iron Gallery~
This place is a vast, barrel-vaulted chamber.  The walls here are carved
from rough iron, corrugated into a sinister, almost organic pattern of
ridges and edges.  The air here is hot and still, and the harsh metallic
tang of rusting metal is everywhere.  Designed as some sort of gallery,
there are recesses between the arches supporting the ceiling, each designed
to highlight their contents.  The supports of the barrel roof also frames an
arched doorway, which leads out of the gallery to the west.  

A striking painting is hung in one of the recesses here.
~
~
0
0 8194 0
E
painting~
The subject of this painting is jarringly incongruous.  A striking
beautiful aelin woman stands near the edge of a cliff, being devoured by a
swarm of black, leathery demons.  The woman\@s body seems wracked by the
agony of being devoured alive, but her eyes and face are illuminated by a
look of abject ecstasy.  She holds her heart, raised in hand above her head.
~
D3
The gallery of iron continues to the west.
~
~
0 0 43
W 5 0 0
Z 5 5
S
#43
An Iron Gallery~
This place is a vast, barrel-vaulted chamber.  The walls here are carved
from rough iron, corrugated into a sinister, almost organic pattern of
ridges and edges.  The air here is hot and still, and the harsh metallic
tang of rusting metal is everywhere.  Designed as some sort of gallery,
there are recesses between the arches supporting the ceiling, each designed
to highlight their contents.  The supports of the barrel roof also frames an
arched doorway, which leads out of the gallery to the north.  

A masterful drawing hangs in one of the recesses here.
~
~
0
0 8194 0
E
drawing~
This drawing is actually an etching in a sickly yellow wood.  The subject
is of an alatharya, stripped nude, but with half of his body completely
skinned.  Carved with highly intricate, skilled strokes, the drawing is
extremely realistic, from the expression of abject horror on the alatharya\@s
face to the fine lines of the interior organs made visible by the
vivisection.  
~
D0
A gallery of iron lies to the north.
~
~
0 0 44
D1
The gallery of iron continues to the east.
~
~
0 0 42
W 5 0 0
Z 5 5
S
#44
A Gallery of Bone~
The entirety of this chamber is constructed from the still-intact bones
of all manner of creatures.  Long, slender bones make up most of the walls,
while the floor is an intricate mosaic of fingers, toes, and other
appendages.  Noticeably lacking, though, from the skeletal menagerie are
skulls, of which there are exactly none.  The room is evidently a kind of
gallery, as the skeletal walls fold inward here and there, allowing room for
alcoves designed to show off their contents.  Exits break the bony gallery
to the east and south.  

A marble statue stands in one of the bony alcoves.
~
~
0
0 8194 0
E
statue~
This statue is of two human lovers, seated on a pedestal in an act of
lust.  Closer inspection, however, reveals that while their position is
sexual, their faces are awash in agony.  They are joined at the abdomen, and
their organs have been sewn together into a single grisly mass.  
~
D1
The gallery of bone continues to the east.
~
~
0 0 45
D2
A gallery of iron lies to the south.
~
~
0 0 43
W 5 0 0
Z 5 5
S
#45
A Gallery of Bone~
The entirety of this chamber is constructed from the still-intact bones
of all manner of creatures.  Long, slender bones make up most of the walls,
while the floor is an intricate mosaic of fingers, toes, and other
appendages.  Noticeably lacking, though, from the skeletal menagerie are
skulls, of which there are exactly none.  The room is evidently a kind of
gallery, as the skeletal walls fold inward here and there, allowing room for
alcoves designed to show off their contents.  Exits break the bony gallery
to the west and north.  

A marble statue stands in one of the bony alcoves.
~
~
0
0 8194 0
E
statue~
This statue is of a kankoran, who hangs upside-down, nailed to a stylized
unholy symbol.  Carved stone rats cling to his body, skittering up and down
its length.  Near his head, the rats chew at his face and eyes, and one
particularly large rat seems to have his tongue in its mouth.  
~
D0
A gallery of flesh lies to the north.
~
~
0 0 46
D3
The gallery of bone continues to the west.
~
~
0 0 44
W 5 0 0
Z 5 5
S
#46
A Gallery of Flesh~
The sour, musky smell of flesh untended and unwashed fills this place. 
Walls, floor, and ceiling here are all made from the same material -- pale,
almost translucent flesh.  The organic surface of the walls has been pressed
into hard, smooth lines, traumatizing the flesh into an almost normal
architectural structure.  The room seems designed as some sort of gallery,
as there are square niches scooped out of the living walls of this place. 
The walls also frame some sort of doorways across the rubbery floor to the
south and west.  

A mural hangs in one of the fleshy niches.
~
~
0
0 8194 0
E
tome~
The Book of Oneness and Knowing

This book is an incredibly ancient tome, bound in a meticulously
crafted cover, made from a single patch of black dragon hide. 
Vividly colored precious gems decorate the side of the book,
and the title is embossed in gold runes on the front. 

The book is locked by a single silver hasp, which is scored
with mystical symbols of inscrutability and inveiglement. 
~
E
mural~
This mural portrays a pale, flesh-colored tree, set amidst a tangle of a
dark swamp.  The tree is huge, from pale white roots set in black muck, to
its leafy, septic boughs.  Dangling from the limbs of the tree are the heads
of various mortal races both known and unknown, each of them still wide-eyed
and in apparent pain, judging from the expressions on their collective
faces.  
~
D2
A gallery of bone lies to the south.
~
~
0 0 45
D3
The gallery of flesh continues to the west.
~
~
0 0 47
W 5 0 0
Z 5 5
S
#47
A Gallery of Flesh~
The sour, musky smell of flesh untended and unwashed fills this place. 
Walls, floor, and ceiling here are all made from the same material -- pale,
almost translucent flesh.  The organic surface of the walls has been pressed
into hard, smooth lines, traumatizing the flesh into an almost normal
architectural structure.  The room seems designed as some sort of gallery,
as there are square niches scooped out of the living walls of this place. 
The walls also frame some sort of doorway across the rubbery floor to the
east.  Northward, heavy iron double-doors are set in the putrid wall,
providing the only exit from the gallery.  

A grisly mobile of bone and sinew hangs in a fleshy niche.
~
~
0
0 8194 0
E
mobile~
This mobile is a motley assortment of many different types of bone and
flesh, knit together in some dark, alien pattern.  Given that it is made
from what appear to be leftover bones and bits of skin, it seems something
of a wreck.  Closer examination, however, reveals that meticulous care has
been made to preserve the angles and shapes formed by the mobile.  
~
E
more~
Staring at the mobile, you begin the outlines of a pattern.  Perhaps if
you examined it again, it will make itself apparent.  

Like seeing a face amidst the crowd, pattern becomes form for you as you
examine the mobile.  

What at first appeared to be a shambled assemblage of bone now traces out
the edges and vertices of some alien polytope.  Perhaps it is only
imagination, or perhaps it some arcane magic wrought on the mobile, but the
angles seem somehow...  Wrong in this figure, as if they have been
constrained from some higher dimensional form to fit the confines of the
frame.  Shaking your head, you seem drawn with an unhealthy fascination to
stare at what you have found, turning the puzzle of it over in your mind.  

Even though your attention is no longer on the mobile, you can still feel
the shape you encountered there, flickering at the edge of your awareness. 


You return your attention to the mobile, which now consumes all of your
awareness.  The shape within preys upon the lines of reason in your mind,
twisting and distorting thought in the same way that angle and line have
been distorted within the space of the mobile.  

Its frame seems to throb with potentiality, and its shape pulses in the
fitful light of this place.  As you approach the fullness of comprehending
its truth, you realize that you can no longer think of a time when you did
not UNDERSTAND the shapes within.  

The mobile pulses more and more rapidly, and as you cannot look away, your
mind keeps assembling more and more shapes like the one in the frame.  Too
many to count, they skitter through the channels of your mind, as you
inexorably follow them.  So many, that everything around you but the shapes
fades into blackness, until all you see is the understanding of their being.


You awake, with the feeling that you have gained knowledge, but at the
expense of foresight.  
~
E
mobile37~
Like seeing a face amidst the crowd, pattern becomes form for you as you
examine the mobile.  
~
E
mobile38~
What at first appeared to be a shambled assemblage of bone now traces out
the edges and vertices of some alien polytope.  Perhaps it is only
imagination, or perhaps it some arcane magic wrought on the mobile, but the
angles seem somehow...  Wrong in this figure, as if they have been
constrained from some higher dimensional form to fit the confines of the
frame.  Shaking your head, you are drawn with an unhealthy fascination to
stare at what you have found, turning the puzzle of it over in your mind.  
~
E
mobile39~
You return your attention to the mobile, which now consumes all of your
awareness.  The shape within preys upon the lines of reason in your mind,
twisting and distorting thought in the same way that angle and line have
been distorted within the space of the mobile.  
~
E
mobile40~
Its frame seems to throb with potentiality, and its shape pulses in the
fitful light of this place.  As you approach the fullness of comprehending
its truth, you realize that you can no longer think of a time when you did
not UNDERSTAND the shapes within.  
~
E
mobile41~
The mobile pulses more and more rapidly, and as you cannot look away,
your mind keeps assembling more and more shapes like the one in the frame. 
Too many to count, they skitter through the channels of your mind, as you
inexorably follow them.  So many, that everything around you but the shapes
fades into blackness, until all you see is the understanding of their being.
~
E
fux0r~
~
D0
~
~
0 0 40
D1
The gallery of flesh continues to the east.
~
~
0 0 46
W 5 0 0
Z 5 5
S
#50
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#51
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  @ 
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#52
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#53
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#54
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#55
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#56
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#57
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#58
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#59
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#60
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#61
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#62
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#63
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#64
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#65
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#66
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#67
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#68
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#69
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#70
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#71
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#72
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#73
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#74
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 9
W 5 0 0
Z 5 5
S
#75
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion. The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses. 
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#76
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#77
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#78
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.  
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#79
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#80
The Void~
Surrounding by inky blackness in all directions, cold tendrils of frigid
air whip through the room, giving the darkness an almost palpable air of
motion.  The air itself has a charnel cast, reeking of death and decay all
about you, providing no means of location through the mundane senses.
~
~
1
0 532598 0
W 5 0 0
Z 5 5
S
#81
A Small Study~
This small, neat study is cozily furnished with an old stuffed chair, a
padded footstool, and walls lined with crowded bookshelves.  A small wood
stove produces a cheerful heat, filling the room with the faint, pleasant
smell of smoke.  An intricately-carved wooden door leads east.  
~
~
3
0 524632 0
D1
~
~
3 0 82
W 5 0 0
Z 5 5
S
#82
The Entrance to the Sanctuary~
A large room with wood paneling, the sanctuary entrance is mostly devoid
of furnishings.  A long shelf runs along the southern wall, and various
magical paraphernalia are scattered about its length.  The air in the room
is warm, and smells slightly of wood smoke.  An intricately carved door
leads to the west.  
~
~
3
0 524632 0
D3
~
~
3 0 81
W 5 0 0
Z 5 5
S
#83
The Chamber of Wraiths and Other Sundering things~
~
~
1
0 32822 0
D1
~
~
0 0 94
W 5 0 0
Z 5 5
S
#90
Aeolis\@ Trash Compactor~
* A way to have all the notes sent to houses forwarded to an imm\@s mail box
* Make a True or False type of thing that can be placed in the prompt, saying
  if you have notes or not
* Appending socket info to pfiles with each logon. Each unique socket appended
  and date-stamped with last date used.
* Get rid of/Lessen the damage multiplier on backstab/dual backstab for
  sleeping people.
* Offer <item> <person> and Accept <person> - Take a wild guess
* Your strengthofhit damtype effectofhit mobname.
  -> Your ===MIGHTY=== coding >>>IMPRESSES<<< Rhaokarr!
* Have stabilize go away in air.
* Race: Ghost should be mute, imho.

* Make embrace of isetaton lower skill %%s when affected. Being entangled by
tentacles should be as distracting as a swarm of insects, if not moreso.
* A Kill_prog triggering when the bearer kills someone (anyone.)
~
~
0
0 21537086 0
W 5 0 0
Z 5 5
S
#91
The Gallery of Funky Echoes~
* You are struck by the strange raining fire, which seems to be pulled into your skin!
* You scream as the burning in your skin incinerates you!
* You feel ready to diamond skin again.
* As someone dies, the{Wir{n cries forth, \@Kijjasku eyilekk dulikra askah!  (also needs a \@ at the end)
* Braysak is moving more quickly.  (haste from silver goo)
* You can\@t fly. (to aelins and nefortu who aren\@t flying but try to move into an air room)
* When you fail \#meld with water,\# all you get is \#You failed,\# regardless of whether you failed the 
casting or you failed because the target wasn\@t in a room with water.
* You try to call your warcry but are distracted and          fail. (Warcry, weirdass space)
~
~
0
0 557138 0
D5
~
~
0 0 6
W 5 0 0
Z 5 5
S
#92
Help File Overhaul Room~
* Someone needs to drastically overhaul our olc help files.
* \@Guild add <skill>\@ should have a help something or other
* \#practice\# updated to include the required quotes info.
~
~
0
0 565330 0
D0
~
~
0 0 94
D1
~
~
3 0 91
D2
~
~
0 0 6
W 5 0 0
Z 5 5
S
#93
Ramc\@s Lemonade Stand~
~
~
0
0 32818 0
D5
~
~
0 0 5
W 5 0 0
Z 5 5
S
#94
Suggestion Box~
* Progs for Earth/Water Elementals.
* A Summon: Phandaal spell
* Escape (Raider skill) is almost exactly like dive, minus the damage.
* An enamour song for bards.  Aeolis knows details.
* Drawbacks for thieves/assassins wearing heavy armors, relative to strength
  and dexterity. Less attacks, less dodging.
* Make it so imms can see the vnum of the room that people write notes from,
  and edit the help files
* Fix if isweather
* A nodisarm flag for mobs. So they can\@t be disarmed or have winter wind,
  ect, drop their weapons.
* Extra novelty slots: earrings, eyes (for spectacles and monocles), tattoes
* The ability to have a wizi slot on players in which we can append progs.
* Psionicists - Increase chances of Read Thoughts a bit so it\@s more reliable?
* The ability to use \@enhance reflexes\@ on other PC\@s. As of now, Psionicist\@s
  aren\@t very viable in ranking (they\@re pretty PK-oriented), and this would
  provide a well-needed boost. If you want, increase the mana-cost per tick,
  but it would be a heck of a lot more useful.
* Add more animals able to be called by Rangers (snow wolves? panthers?
  mountain lions? wolverines?) relative to territory. Maybe even add it as an
  area flag, so we can choose what animals are able to be called in our area.
* Progs for called animals.
* Make it so trying to disarm a nodisarm weapon lags the wielder of
  the nodisarm weapon, so that nodisarm is not unconditionally good.
* Two mob flags. Track_open and Track_ram. The mob will openram doors to get to it\@s quarry.
* Tweak findherb so it\@s not impossible to find anything but 3-4 herbs in
  your entire liftime. Make it easier to get useful herbs.
* Cast_prog and all_cast_prog: trigger when spell is cast on target, or cast
  in room. (Argument would be spell vnum and %)
* An *exit* flag that requires water breathing.
* Light sleep lessennegate damage modifiers for sleeping.
* Have stabilize go away in air.
* Have hide/sneak/slice/etc be affected by encumbrance, a la casting
* The ability to set damtype and damverb in mobobj progs (Add me to the feature room!)
* A \@clearbuffer\@ command for everyone, that lets them cancel all incoming (spammed, etc) commands. Works despite fight-lag, so you can decide *NOT* to bash if you\@re getting spam-bashed and your command still hasn\@t gotten through.
* An echo when someone tries to hand you something, but you\@re too weighed down.
* A no-dirt flag for rooms. If there isn\@t enough dirt to kick.
* Replace Sanctuary/Heal/Cure Critical/etc with water-themed spells. Sanctuary == Ward of the Seas?
* Ramc: Ghost should be mute, imho. 
* Change Shroud of Nyogthua to be a radius of effect, rather than area-based.
  note + (See Jolinn for more details.)
~
~
0
0 32772 0
D2
~
~
0 0 92
D3
~
~
0 0 83
D4
~
~
0 0 97
W 5 0 0
Z 5 5
S
#95
Ministry for the Restriction of Illusions~
~
~
0
0 32882 0
D3
~
~
0 0 133
W 5 0 0
Z 5 5
S
#96
Raestral and Iacobos\@ Crummy Basement Apartments~
* {DReligious services for certain gods in temples{n
* RP Skills for each class
* Hero-only and hours-dependent skills
* Mpdesc +/- function
* {DProg all nets to Jasa-friendly{n
* {DVB Flavor - guilds, peddlers, entertainers{n
* Customizeable loyal retainer descs/longs
* Decap to start combat/{Wmake a head obj{n
* {yUntie/ungag function{n
* {W\@Diagnose\@ skill for all wateries{n
* Crank up dart\@s percentage hits a little, and make less chance of failure on making poisons/darts
* {WHumming items -make seen while blind{n
* Gaald/KT hometowns?
* Drinking skill!
-{yA \@notch\@ trait or something akin to it, where the PC\@s PKs are tallied visibly, maybe in a line after the god-
trait and condition{n
-{yA \@woodcraft\@ trait or something akin to it, where the PC can make campfires without the aid of a kit{n
-{yA \@hunter\@ trait or something akin to it, where the PC can strip edible meat off corpses as Less barbaric alter
native to iron stomach?{n
* Some sort of apprentice/master PC relationship
* {yArcher/Slingsman{n - {ySmith - mace, polearm, shield combat{n - {yNomad class?{n - {yCorsairs - gladiator meets bandit?{n
* Can\@t impale/ham with an offhand spear?
* On each pulse check to see if the person is sleeping/resting/standing/fighting, 
add to a number based on which.  When the tick happens, use that number to 
determine regen and reset the number to 0.  This would keep people from benefitting by sleeping ticks
* Put in an Imm command that lets you turn off rand_progs on switched mobs.
* Make wizied Imms not count as present in an area for the purposes of object repopping
* Cross-sphere skills
* Gravity flag/fly_only exits
* more prominent weather and day/night echoes
* staff, polearms, spears default to v4 twohands when selected as a v0
* [Dov] command to toggle faction change reports (can be spammy).
* automatic mob/obj_#### naming
* A squad system within a group, with independent leaders.  That way you can have gtell communication but more segmented/hierarchical mobility.  Maybe not for group affects, but at least for group status and tells?
* An echo for when adrenaline wears off
*Customizable faction aggro message/messages
- HELPFILES - multikilling vault hoarding hoarding crossbreeding
~
~
0
0 41010 0
D0
~
~
0 0 98
D1
~
~
0 0 97
D3
~
~
0 0 8
W 5 0 0
Z 5 5
S
#97
That Weird Room of Yendri\@s Wishlist~
You look upon a well builded reptilian creature.
He is compleatly covered in dark green scales.
Broad shoulders and muscular body tells you that Shazzar is in the top form.
You can also notice a lot of scars all around his body.
His dragon liked head, looking almost pretty for the one of his race.
Light blue, snake eyes are fixing one spot, blinking slowly.
You can see red forked tongue that flicks in moments.  
Shazzar is in excellent condition.

================

Here is a list of things Yendri wants:
* Sac progs for all gods. They were outlined on the Wiki, I don\@t know if they\@re still there.
* Make the lesser gods (Alajial, Sythrak) saccable-to.
* Dual-sphere spells!
* Monks! I\@ll even build the Remoter Monastery, if necessary.
* Redoing titles for female gladiators to read \#gladiatrix\#
~
~
0
0 32816 0
D3
~
~
0 0 96
D5
~
~
0 0 94
W 5 0 0
Z 5 5
S
#98
The Advanced Sewer To-Do List~
[For once it\@s in, little things to do at leisure]

-Have the flush conduit actually flush
-More interactivity on the warner templar
-More time_progs on the bandits
-More stashed items
-More connectivity, deeper and deeper levels
-UnderEarendam, between-ish level directly under building foundations - allows for many more ins and outs
~
~
0
0 32818 0
D2
~
~
0 0 96
D5
~
~
0 0 99
W 5 0 0
Z 5 5
S
#99
Kestrel\@s To-Do List~
Saccable to other gods
Psay ((Also, propose phasing out emote and esay for psay?))
Bandits bind in combat
Rename a lot of stock stuff: Sanctuary, etc.
Slice with offhand weapon?
~
~
0
0 32818 0
D4
~
~
0 0 98
W 5 0 0
Z 5 5
S
#101
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 8823
W 5 0 0
Z 5 5
S
#102
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 19561
W 5 0 0
Z 5 5
S
#103
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#104
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#105
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#106
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#107
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#108
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#109
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#110
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#111
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#112
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#113
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#114
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#115
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#116
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#117
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#118
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#119
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#120
Bottom of a Pit~
This pit is dug out of the surrounding earth, and of comparatively recent
construction.  Mounds of earth surround the bottom of the chamber, and an
array of wickedly spiked stakes are planted upright in the ground.  The dirt
seems piled enough to allow exit upwards, but no other egress is visible.  
~
~
1
0 10 12
D4
~
~
0 0 3499
W 5 0 0
Z 5 5
S
#130
Fool\@s Room~
circlek.are
tarien.are
fyrlinde.are
darleni.are
calvin.are (Note: BITCHASS!!)
mosswood.are
malcave.are
earendam.are
handcult.are (Dov\@s assassinc ult!)
ilodaiya.are
ophearea.are
gypsy.are
carnival.are (Rystaia\@s carnival? (note, might piss her off))
ashta.are
bard.are
Drellan.are
arienpla.are
catacombs.are
swamp.are
tunnels.are
wasp.are
ainmire.are
aelcity.are
cathedra.are
beryil.are
goddess.are
wlithval.are
~
~
0
0 134258742 0
W 5 0 0
Z 5 5
S
#131
Animal Control~
{YGREATER{n
{y# ANIMAL     Sub-type   New VNUM      Built Prggd Ranger Lvl{n
114 Grizzly    Bear       5801          {WY{n     {WY{n     38
110 Dire Wolf  Wolf       5802          {WY{n     {WN{n     43
196 Python     Snake      5803          {WY{n     {WN{n     45
4   Hawk       Flyer      5804          {WY{n     {WY{n     36
14  Alligator  Lizard     5805          {WY{n     {WN{n     39
192 Lion       Cat        5806          {WN{n     {WN{n     41
193 Ram        Herd       5807          {WN{n     {WN{n     34

{yTerrain Types       Primary   Secondary{n
F     Forest        Grizzly   Dire Wolf
H     Hills         Dire Wolf Ram
M     Mountains     Lion      Grizzly
S     Swamps        Alligator Python
P     Plains        Ram       Lion
D     Desert        Python    Alligator
A     Air           Hawk      Hawk
W     On Water      Hawk      Hawk

                        {YLESSER{n
{y# ANIMAL     Sub-type   New VNUM      Built Prggd Ranger Lvl{n
1   Wolverine  Bear       5808          {WY{n     {WY{n     28
2   Wolfhound  Wolf       5809          {WY{n     {WN{n     26
3   Asp        Snake      5810          {WY{n     {WN{n     33
157 Raven      Flyer      5811          {WY{n     {WY{n     24
197 Srorsian   Lizard     5812          {WY{n     {WN{n     29
195 Panther    Cat        5813          {WN{n     {WN{n     31
198 Bjorcha    Herd       5814          {WN{n     {WN{n     24

{yTerrain Types       Primary   Secondary{n
F     Forest        Wolverine Wolfhound
H     Hills         Wolfhound Bjorcha     
M     Mountains     Panther   Wolverine
S     Swamps        Srorsian  Asp
P     Plains        Bjorcha   Panther
D     Desert        Asp       Srorsian
A     Air           Raven     Raven
W     On Water      Raven     Raven
~
~
0
0 557106 0
D4
~
~
0 0 4
W 5 0 0
Z 5 5
S
#132
The Ministry of Rumor~
rumorbot - creates some automated rumors
  publisherbot - passes info to the webpage
~
~
0
0 41010 0
D1
~
~
0 0 133
D3
~
~
0 0 6
W 5 0 0
Z 5 5
S
#133
The Ministry of Vault Cleanup~
~
~
0
0 41010 0
D1
~
~
0 0 95
D3
~
~
0 0 132
W 5 0 0
Z 5 5
S
#140
A Land of Putrefaction~
The soil here has the wet, spongy give of rotten flesh.  The stench is
overpowering, and over all hangs the menace of famished Gamaloth.  The very
air seems rather to take life than to give it, and the place seems torn
between expelling and consuming you.  Further from the Tree, the uneven
ground is marred by gaping pits.  
~
~
4
0 4202496 3
D1
~
~
0 0 141
D2
~
~
0 0 142
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#141
A Fleshy Pit~
A circular pit yawns open here, ringed with twitching, wrinkled flesh
that gleams wetly in the evil light of Gamaloth.  The ring appears to
contract rhythmically, exuding an overpowering stench of filth and decay at
regular intervals.  
~
~
4
0 4202496 3
D3
~
~
0 0 140
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#142
A Land of Putrefaction~
The soil here has the wet, spongy give of rotten flesh.  The stench is
overpowering, and over all hangs the menace of famished Gamaloth.  The very
air seems rather to take life than to give it, and the place seems torn
between expelling and consuming you.  Further from the Tree, the uneven
ground is marred by gaping pits.  
~
~
4
0 4202496 3
D0
~
~
0 0 140
D2
~
~
0 0 144
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#143
A Land of Putrefaction~
The soil here has the wet, spongy give of rotten flesh.  The stench is
overpowering, and over all hangs the menace of famished Gamaloth.  The very
air seems rather to take life than to give it, and the place seems torn
between expelling and consuming you.  Further from the Tree, the uneven
ground is marred by gaping pits.  
~
~
4
0 4202496 3
D1
~
~
0 0 144
D2
~
~
0 0 149
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#144
The Base of Gamaloth~
Gamaloth, the Tree of Life-in-Death, towers far, far overhead, the
tortured creaking of its pestilential wood merging with the eternal screams
of its victims to fill the area with a howl of unfathomable anguish.  The
raw, naked branches of the tree give off a horrible pale light, illuminating
the blood-spattered ground like a heap of shattered bones.  The withered,
clawlike husks of dead trees are scattered around the base of Gamaloth, and
paths wind over its twisted roots in all directions.  
~
~
4
0 4202496 3
E
gamaloth tree victim victims roots~
The bark of Gamaloth is like the flesh of a man horribly burned: a mass
of tattered black ridges with raw, weeping pink underneath.  From the top of
the Tree\@s vast height hang innumerable boughs and branches, tapering to
malevolent black spearpoints.  Heads of all races and descriptions are
embedded within the bark of the tree, screaming, gasping, and whimpering in
horror and agony.  The roots of Gamaloth pierce their malignant way through
the ground, contorted like the death-throes of a man dying of lockjaw.  
~
D0
~
~
0 0 142
D1
~
~
0 0 145
D2
~
~
0 0 150
D3
~
~
0 0 143
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#145
A Pile of Rotten Bones~
Broken, corrupted bones, tinged with fungus and slime, are piled to this
side of Gamaloth like a snowdrift.  The bones crack underfoot with the
languid crunch of soft wood rather than the dry snap of healthier material. 
The bone-pile thins out further from the Tree, and gaping pits appear in the
ground.  
~
~
4
0 4202496 3
D1
~
~
0 0 146
D3
~
~
0 0 144
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#146
A Sundered Bough~
A vast bough has fallen from Gamaloth, lying broken in several pieces and
sunk deep into the rotten ground by the violence of its impact.  The
charred-flesh bark of the bough is torn away in places, and the wood beneath
glistens with a pustulent sheen.  Chittering creatures, minuscule and
horrible, scurry over the bough, chewing at it with sadistic relish.  One of
the pieces of the bough lies across a gaping pit, while a brown serpent of
prodigious size coils sleepily around it.  
~
~
4
0 4202496 3
D1
~
~
0 0 147
D3
~
~
0 0 145
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#147
A Covered Pit~
The vile soil in which Gamaloth sinks its awful roots opens in a slight
depression here.  The pit is covered by a leprous membrane of translucent
flesh, quivering delicately with every nearby sound.  A severed head is
buried upside-down in the ground, with only its mouth and the infected
remnants of its neck visible.  
~
~
4
0 4202496 3
D3
~
~
0 0 146
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#148
A Copse of Dead Trees~
A number of felled trees litter the ground here, the grasping might of
Gamaloth having long since overcome and devoured whatever vitality they once
had.  The uprooted boles of the trees have exposed an open hole, its sides
still covered with dangling bits of dead tree branches.  The black,
charred-flesh roots of Gamaloth seek for them hungrily, weaving through the
ground in search of matter.  
~
~
4
0 4202496 3
D1
~
~
0 0 149
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#149
A Land of Putrefaction~
The soil here has the wet, spongy give of rotten flesh.  The stench is
overpowering, and over all hangs the menace of famished Gamaloth.  The very
air seems rather to take life than to give it, and the place seems torn
between expelling and consuming you.  Further from the Tree, the uneven
ground is marred by gaping pits.  
~
~
4
0 4202496 3
D0
~
~
0 0 143
D3
~
~
0 0 148
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#150
A Land of Putrefaction~
The soil here has the wet, spongy give of rotten flesh.  The stench is
overpowering, and over all hangs the menace of famished Gamaloth.  The very
air seems rather to take life than to give it, and the place seems torn
between expelling and consuming you.  Further from the Tree, the uneven
ground is marred by gaping pits.  
~
~
4
0 4202496 3
D0
~
~
0 0 144
D1
~
~
0 0 151
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#151
A Jagged Fissure~
This pit does not have the worm-eaten, organic contours characteristic of
this unspeakable place: a cruel root of Gamaloth appears to have hewn it
violently into the ground, its edges dripping with ichor like blood from a
headsman\@s axe.  The sides of the fissure travel straight down, rapidly
vanishing into cold, abyssal blackness.  
~
~
4
0 4202496 3
D2
~
~
0 0 152
D3
~
~
0 0 150
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
|
S
#152
A Corrupted Heart~
Nestled under a heaving mound of poisonous maggots is a large hollow,
within which lies a throbbing, fluttering pile of meat larger than a man. 
Fleshy projections and stringy bits of sinew hang loosely from the heart,
and it pulses unevenly with a nauseating sucking noise.  The great mass of
dripping carrion is covered with scabrous lesions.  
~
~
0
0 4202496 3
D0
~
~
0 0 151
M 0 H 0 V 0
W 5 0 0
Z 5 5
P
>verb_prog enter~
if compstr(2) == heart
or compstr(2) == pit
or compstr(2) == hollow
    mpechoaround $n $N squeezes into the heart and vanishes.
    mpechoat $n You squeeze yourself into the palpitating aperture of the heart, and are sucked into blackness.
    mptransfer $n 8118
    mpat $n mpinterpret $n look
else
    mpnextinterp
endif
~
>greet_prog 100~
if iscarrying($n) == 140
else
    mpoload 140 on $n
    initialize
endif
~
>rand_prog 3~
if rand(10)
    mpvaluerand choice 1 5
    if value(choice) == 1
        mproomcmd mptrigger all
    endif
    if value(choice) == 2
        mpecho The hanging branches of Gamaloth give a malevolent creaking.
    endif
    if value(choice) == 3
        mpfocus $r
        if isimmort($n)
        or iswizi($f)
        or isghost($f)
        else
            if rand(30)
                mpechoaround $f A large black mass hurtles towards $F, but $E jumps away in time.
                mpechoat $f A large black mass hurtles towards you, but you jump away in time.
            else
                mpechoaround $f A large black mass hurtles out of the tree and {msplatters{x all over $F, knocking $M to the ground!
                mpechoat $f A large black mass hurtles out of the tree and {msplatters{x all over you, knocking you to the ground!
                mplag $f 3
                mpdamage $f 5 6 50
            endif
        endif
    endif
    if value(choice) == 4
        mpecho A deep rumble reverberates from Gamaloth, and the ground shifts uneasily.
    endif
    if value(choice) == 5
        mpecho An ear-splitting scream of terror and agony suddenly rings out before being cut violently short.
    endif
endif
~
>trigger_prog 100~
if isimmort($n)
or iswizi($n)
or isghost($n)
else
    mpget char $n hp 1
    mpmath 2 $1/10
    mpvaluerand 3 10 $2
    mpechoat $n The overwhelming famine of Gamaloth drains your vitality.
    mpdamage $n 1 1 $3
endif
~
|
S
#0



#SPECIALS
M 3 spec_poison
M 16 spec_executioner
M 35 spec_cast_air
M 80 spec_cast_spirit
M 81 spec_cast_spirit
M 82 spec_cast_spirit
M 83 spec_cast_spirit
M 84 spec_cast_spirit
M 92 spec_cast_void
M 118 spec_cast_void
M 153 spec_cast_void
M 196 spec_poison
S



#RESETS
D 0 81 1 3
D 0 82 3 3
D 0 92 1 3
O 0 164 0 3
M 0 5 1 5 1
M 0 6 1 6 1
M 0 7 1 7 1
O 0 190 0 7
M 0 13 1 7 1
M 0 9 1 8 1
M 0 35 1 35 1
E 0 157 0 1
E 0 158 0 12
E 0 159 0 3
M 0 15 1 35 1
M 0 41 2 40 2
M 0 41 2 40 2
M 0 27 1 40 2
M 0 27 2 40 1
M 0 32 1 41 1
M 0 27 2 41 1
O 0 6 0 81
P 0 7 9999 6 1
P 0 8 9999 6 1
P 0 9 9999 6 1
O 0 24 0 81
P 0 19 1 24 1
O 0 39 0 82
M 0 91 1 82 1
G 0 41 0
M 0 160 1 95 1
M 0 134 1 132 1
M 0 135 1 132 1
M 0 137 1 133 1
R 0 144 4
S



#GUILD
#35
"unreal incursion"
"empower phantasm"
"phantasmal mirror"
"figment's cage"
"feign demise"
"rune of air"
"endless facade"
"cloudkill"
"drainbolt"
"miasma of waning"
"chain lightning"
"rearrange"
"phantasmal creation"
"dancing sword"
"lightning storm"
#0

#150
"lucid dreaming"
"unseen servant"
"resonance"
"spirit sanctuary"
"vengeance"
"blade of light"
"wrath of Kyana"
"radiance"
"sortie"
"rite of Nathli"
"positive channel"
"exorcism"
"truesight"
"sanctify"
"soul flare"
"astral form"
"ray of light"
"consecrate weapon"
"rune of spirit"
"unshackle"
"thanatopsis"
"shield"
"spirit shield"
"awaken"
"remove curse"
"calm"
"aura"
"zeal"
"dreamspeak"
"invisibility"
"detect invis"
"know alignment"
"bless"
"armor"
"soulburn"
"trance"
"third attack"
"dodge"
"dual wield"
"trip"
"fast healing"
"meditation"
"rescue"
"kick"
"enhanced damage"
"second attack"
"parry"
"polearm"
"spear"
"scrolls"
"wands"
"whip"
"dagger"
"sword"
#0

S


#SHOPS
6 0 0 0 0 0 100 100 0 23 0
0



#$
